//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31442593
// Cuda compilation tools, release 11.7, V11.7.99
// Based on NVVM 7.0.1
//

.version 7.7
.target sm_52
.address_size 64

	// .globl	channel_average

.visible .entry channel_average(
	.param .u64 channel_average_param_0,
	.param .u64 channel_average_param_1,
	.param .u32 channel_average_param_2,
	.param .u32 channel_average_param_3,
	.param .u32 channel_average_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [channel_average_param_0];
	ld.param.u64 	%rd2, [channel_average_param_1];
	ld.param.u32 	%r2, [channel_average_param_2];
	ld.param.u32 	%r3, [channel_average_param_3];
	ld.param.u32 	%r4, [channel_average_param_4];
	mov.u32 	%r5, %nctaid.x;
	mov.u32 	%r6, %ctaid.y;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r6, %r5, %r7;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	setp.ge.s32 	%p1, %r1, %r4;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	div.s32 	%r11, %r1, %r2;
	div.s32 	%r12, %r11, %r3;
	div.s32 	%r13, %r1, %r3;
	rem.s32 	%r14, %r13, %r2;
	shl.b32 	%r15, %r2, 1;
	mad.lo.s32 	%r16, %r15, %r12, %r14;
	mul.lo.s32 	%r17, %r13, %r3;
	sub.s32 	%r18, %r1, %r17;
	mad.lo.s32 	%r19, %r16, %r3, %r18;
	add.s32 	%r20, %r16, %r2;
	mad.lo.s32 	%r21, %r20, %r3, %r18;
	mul.wide.s32 	%rd5, %r19, 4;
	add.s64 	%rd6, %rd3, %rd5;
	mul.wide.s32 	%rd7, %r21, 4;
	add.s64 	%rd8, %rd3, %rd7;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	mul.f32 	%f4, %f3, 0f3F000000;
	mul.wide.s32 	%rd9, %r1, 4;
	add.s64 	%rd10, %rd4, %rd9;
	st.global.f32 	[%rd10], %f4;

$L__BB0_2:
	ret;

}
	// .globl	channel_average_backward
.visible .entry channel_average_backward(
	.param .u64 channel_average_backward_param_0,
	.param .u64 channel_average_backward_param_1,
	.param .u32 channel_average_backward_param_2,
	.param .u32 channel_average_backward_param_3,
	.param .u32 channel_average_backward_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [channel_average_backward_param_0];
	ld.param.u64 	%rd2, [channel_average_backward_param_1];
	ld.param.u32 	%r2, [channel_average_backward_param_2];
	ld.param.u32 	%r3, [channel_average_backward_param_3];
	ld.param.u32 	%r4, [channel_average_backward_param_4];
	mov.u32 	%r5, %nctaid.x;
	mov.u32 	%r6, %ctaid.y;
	mov.u32 	%r7, %ctaid.x;
	mad.lo.s32 	%r8, %r6, %r5, %r7;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	setp.ge.s32 	%p1, %r1, %r4;
	@%p1 bra 	$L__BB1_2;

	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	div.s32 	%r11, %r1, %r2;
	div.s32 	%r12, %r11, %r3;
	div.s32 	%r13, %r1, %r3;
	rem.s32 	%r14, %r13, %r2;
	shl.b32 	%r15, %r2, 1;
	mad.lo.s32 	%r16, %r15, %r12, %r14;
	mul.lo.s32 	%r17, %r13, %r3;
	sub.s32 	%r18, %r1, %r17;
	mad.lo.s32 	%r19, %r16, %r3, %r18;
	add.s32 	%r20, %r16, %r2;
	mad.lo.s32 	%r21, %r20, %r3, %r18;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	mul.f32 	%f2, %f1, 0f3F000000;
	mul.wide.s32 	%rd7, %r19, 4;
	add.s64 	%rd8, %rd3, %rd7;
	st.global.f32 	[%rd8], %f2;
	mul.wide.s32 	%rd9, %r21, 4;
	add.s64 	%rd10, %rd3, %rd9;
	st.global.f32 	[%rd10], %f2;

$L__BB1_2:
	ret;

}
	// .globl	channel_duplicate
.visible .entry channel_duplicate(
	.param .u64 channel_duplicate_param_0,
	.param .u64 channel_duplicate_param_1,
	.param .u32 channel_duplicate_param_2,
	.param .u32 channel_duplicate_param_3,
	.param .u32 channel_duplicate_param_4,
	.param .u32 channel_duplicate_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [channel_duplicate_param_0];
	ld.param.u64 	%rd2, [channel_duplicate_param_1];
	ld.param.u32 	%r2, [channel_duplicate_param_2];
	ld.param.u32 	%r3, [channel_duplicate_param_3];
	ld.param.u32 	%r4, [channel_duplicate_param_4];
	ld.param.u32 	%r5, [channel_duplicate_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %nctaid.x;
	mov.u32 	%r8, %ctaid.y;
	mad.lo.s32 	%r9, %r8, %r7, %r6;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r1, %r9, %r10, %r11;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB2_2;

	cvta.to.global.u64 	%rd3, %rd1;
	div.s32 	%r12, %r1, %r2;
	div.s32 	%r13, %r12, %r3;
	div.s32 	%r14, %r1, %r3;
	rem.s32 	%r15, %r14, %r2;
	div.s32 	%r16, %r2, %r4;
	rem.s32 	%r17, %r15, %r16;
	mad.lo.s32 	%r18, %r13, %r16, %r17;
	mul.lo.s32 	%r19, %r14, %r3;
	sub.s32 	%r20, %r1, %r19;
	mad.lo.s32 	%r21, %r18, %r3, %r20;
	mul.wide.s32 	%rd4, %r21, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB2_2:
	ret;

}
	// .globl	channel_duplicate_backward
.visible .entry channel_duplicate_backward(
	.param .u64 channel_duplicate_backward_param_0,
	.param .u64 channel_duplicate_backward_param_1,
	.param .u32 channel_duplicate_backward_param_2,
	.param .u32 channel_duplicate_backward_param_3,
	.param .u32 channel_duplicate_backward_param_4,
	.param .u32 channel_duplicate_backward_param_5
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<25>;
	.reg .b32 	%r<47>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd4, [channel_duplicate_backward_param_0];
	ld.param.u64 	%rd3, [channel_duplicate_backward_param_1];
	ld.param.u32 	%r20, [channel_duplicate_backward_param_2];
	ld.param.u32 	%r21, [channel_duplicate_backward_param_3];
	ld.param.u32 	%r22, [channel_duplicate_backward_param_4];
	ld.param.u32 	%r23, [channel_duplicate_backward_param_5];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r24, %nctaid.x;
	mov.u32 	%r25, %ctaid.y;
	mov.u32 	%r26, %ctaid.x;
	mad.lo.s32 	%r27, %r25, %r24, %r26;
	mov.u32 	%r28, %ntid.x;
	mov.u32 	%r29, %tid.x;
	mad.lo.s32 	%r1, %r27, %r28, %r29;
	setp.ge.s32 	%p1, %r1, %r23;
	@%p1 bra 	$L__BB3_9;

	div.s32 	%r30, %r1, %r20;
	div.s32 	%r2, %r30, %r21;
	div.s32 	%r31, %r1, %r21;
	rem.s32 	%r3, %r31, %r20;
	mul.lo.s32 	%r32, %r31, %r21;
	sub.s32 	%r4, %r1, %r32;
	setp.lt.s32 	%p2, %r22, 1;
	mov.f32 	%f24, 0f00000000;
	@%p2 bra 	$L__BB3_8;

	add.s32 	%r34, %r22, -1;
	and.b32  	%r46, %r22, 3;
	setp.lt.u32 	%p3, %r34, 3;
	mov.f32 	%f24, 0f00000000;
	mov.u32 	%r44, 0;
	@%p3 bra 	$L__BB3_5;

	mul.lo.s32 	%r36, %r2, %r22;
	mul.lo.s32 	%r37, %r21, %r20;
	shl.b32 	%r6, %r37, 2;
	mad.lo.s32 	%r38, %r36, %r20, %r3;
	mad.lo.s32 	%r42, %r21, %r38, %r4;
	sub.s32 	%r8, %r46, %r22;
	mul.wide.s32 	%rd2, %r37, 4;

$L__BB3_4:
	mul.wide.s32 	%rd5, %r42, 4;
	add.s64 	%rd6, %rd1, %rd5;
	ld.global.f32 	%f12, [%rd6];
	add.f32 	%f13, %f24, %f12;
	add.s64 	%rd7, %rd6, %rd2;
	ld.global.f32 	%f14, [%rd7];
	add.f32 	%f15, %f13, %f14;
	add.s64 	%rd8, %rd7, %rd2;
	ld.global.f32 	%f16, [%rd8];
	add.f32 	%f17, %f15, %f16;
	add.s64 	%rd9, %rd8, %rd2;
	ld.global.f32 	%f18, [%rd9];
	add.f32 	%f24, %f17, %f18;
	add.s32 	%r42, %r42, %r6;
	add.s32 	%r44, %r44, 4;
	add.s32 	%r39, %r8, %r44;
	setp.ne.s32 	%p4, %r39, 0;
	@%p4 bra 	$L__BB3_4;

$L__BB3_5:
	setp.eq.s32 	%p5, %r46, 0;
	@%p5 bra 	$L__BB3_8;

	mad.lo.s32 	%r40, %r2, %r22, %r44;
	mad.lo.s32 	%r41, %r20, %r40, %r3;
	mad.lo.s32 	%r45, %r21, %r41, %r4;
	mul.lo.s32 	%r15, %r21, %r20;

$L__BB3_7:
	.pragma "nounroll";
	mul.wide.s32 	%rd10, %r45, 4;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.f32 	%f19, [%rd11];
	add.f32 	%f24, %f24, %f19;
	add.s32 	%r45, %r45, %r15;
	add.s32 	%r46, %r46, -1;
	setp.ne.s32 	%p6, %r46, 0;
	@%p6 bra 	$L__BB3_7;

$L__BB3_8:
	cvta.to.global.u64 	%rd12, %rd3;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.f32 	[%rd14], %f24;

$L__BB3_9:
	ret;

}

