//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31442593
// Cuda compilation tools, release 11.7, V11.7.99
// Based on NVVM 7.0.1
//

.version 7.7
.target sm_52
.address_size 64

	// .globl	avgpool_forward

.visible .entry avgpool_forward(
	.param .u32 avgpool_forward_param_0,
	.param .u32 avgpool_forward_param_1,
	.param .u32 avgpool_forward_param_2,
	.param .u32 avgpool_forward_param_3,
	.param .u64 avgpool_forward_param_4,
	.param .u64 avgpool_forward_param_5
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<31>;
	.reg .b64 	%rd<18>;


	ld.param.u32 	%r14, [avgpool_forward_param_0];
	ld.param.u32 	%r12, [avgpool_forward_param_1];
	ld.param.u32 	%r13, [avgpool_forward_param_2];
	ld.param.u64 	%rd10, [avgpool_forward_param_4];
	ld.param.u64 	%rd9, [avgpool_forward_param_5];
	cvta.to.global.u64 	%rd1, %rd10;
	mov.u32 	%r15, %nctaid.x;
	mov.u32 	%r16, %ctaid.y;
	mov.u32 	%r17, %ctaid.x;
	mad.lo.s32 	%r18, %r16, %r15, %r17;
	mov.u32 	%r19, %ntid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r1, %r18, %r19, %r20;
	setp.ge.s32 	%p1, %r1, %r14;
	@%p1 bra 	$L__BB0_9;

	cvta.to.global.u64 	%rd11, %rd9;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd2, %rd11, %rd12;
	mov.f32 	%f23, 0f00000000;
	mov.u32 	%r29, 0;
	st.global.u32 	[%rd2], %r29;
	mul.lo.s32 	%r2, %r13, %r12;
	setp.lt.s32 	%p2, %r2, 1;
	@%p2 bra 	$L__BB0_8;

	add.s32 	%r23, %r2, -1;
	and.b32  	%r30, %r2, 3;
	setp.lt.u32 	%p3, %r23, 3;
	mov.f32 	%f23, 0f00000000;
	@%p3 bra 	$L__BB0_5;

	sub.s32 	%r28, %r2, %r30;
	mul.lo.s32 	%r25, %r2, %r1;
	mul.wide.s32 	%rd13, %r25, 4;
	add.s64 	%rd14, %rd1, %rd13;
	add.s64 	%rd16, %rd14, 8;

$L__BB0_4:
	ld.global.f32 	%f10, [%rd16+-8];
	add.f32 	%f11, %f10, %f23;
	st.global.f32 	[%rd2], %f11;
	ld.global.f32 	%f12, [%rd16+-4];
	add.f32 	%f13, %f12, %f11;
	st.global.f32 	[%rd2], %f13;
	ld.global.f32 	%f14, [%rd16];
	add.f32 	%f15, %f14, %f13;
	st.global.f32 	[%rd2], %f15;
	ld.global.f32 	%f16, [%rd16+4];
	add.f32 	%f23, %f16, %f15;
	st.global.f32 	[%rd2], %f23;
	add.s32 	%r29, %r29, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r28, %r28, -4;
	setp.ne.s32 	%p4, %r28, 0;
	@%p4 bra 	$L__BB0_4;

$L__BB0_5:
	setp.eq.s32 	%p5, %r30, 0;
	@%p5 bra 	$L__BB0_8;

	mad.lo.s32 	%r26, %r2, %r1, %r29;
	mul.wide.s32 	%rd15, %r26, 4;
	add.s64 	%rd17, %rd1, %rd15;

$L__BB0_7:
	.pragma "nounroll";
	ld.global.f32 	%f17, [%rd17];
	add.f32 	%f23, %f17, %f23;
	st.global.f32 	[%rd2], %f23;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r30, %r30, -1;
	setp.ne.s32 	%p6, %r30, 0;
	@%p6 bra 	$L__BB0_7;

$L__BB0_8:
	cvt.rn.f32.s32 	%f18, %r2;
	div.rn.f32 	%f19, %f23, %f18;
	st.global.f32 	[%rd2], %f19;

$L__BB0_9:
	ret;

}
	// .globl	avgpool_backward
.visible .entry avgpool_backward(
	.param .u32 avgpool_backward_param_0,
	.param .u32 avgpool_backward_param_1,
	.param .u32 avgpool_backward_param_2,
	.param .u32 avgpool_backward_param_3,
	.param .u64 avgpool_backward_param_4,
	.param .u64 avgpool_backward_param_5
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<22>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<18>;


	ld.param.u32 	%r14, [avgpool_backward_param_0];
	ld.param.u32 	%r12, [avgpool_backward_param_1];
	ld.param.u32 	%r13, [avgpool_backward_param_2];
	ld.param.u64 	%rd10, [avgpool_backward_param_4];
	ld.param.u64 	%rd9, [avgpool_backward_param_5];
	cvta.to.global.u64 	%rd1, %rd10;
	mov.u32 	%r15, %nctaid.x;
	mov.u32 	%r16, %ctaid.y;
	mov.u32 	%r17, %ctaid.x;
	mad.lo.s32 	%r18, %r16, %r15, %r17;
	mov.u32 	%r19, %ntid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r1, %r18, %r19, %r20;
	setp.ge.s32 	%p1, %r1, %r14;
	@%p1 bra 	$L__BB1_8;

	mul.lo.s32 	%r2, %r13, %r12;
	setp.lt.s32 	%p2, %r2, 1;
	@%p2 bra 	$L__BB1_8;

	cvta.to.global.u64 	%rd11, %rd9;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd2, %rd11, %rd12;
	cvt.rn.f32.s32 	%f1, %r2;
	and.b32  	%r29, %r2, 3;
	add.s32 	%r22, %r2, -1;
	setp.lt.u32 	%p3, %r22, 3;
	mov.u32 	%r28, 0;
	@%p3 bra 	$L__BB1_5;

	sub.s32 	%r27, %r2, %r29;
	mul.lo.s32 	%r24, %r2, %r1;
	mul.wide.s32 	%rd13, %r24, 4;
	add.s64 	%rd14, %rd1, %rd13;
	add.s64 	%rd16, %rd14, 8;

$L__BB1_4:
	ld.global.f32 	%f2, [%rd2];
	div.rn.f32 	%f3, %f2, %f1;
	ld.global.f32 	%f4, [%rd16+-8];
	add.f32 	%f5, %f4, %f3;
	st.global.f32 	[%rd16+-8], %f5;
	ld.global.f32 	%f6, [%rd2];
	div.rn.f32 	%f7, %f6, %f1;
	ld.global.f32 	%f8, [%rd16+-4];
	add.f32 	%f9, %f8, %f7;
	st.global.f32 	[%rd16+-4], %f9;
	ld.global.f32 	%f10, [%rd2];
	div.rn.f32 	%f11, %f10, %f1;
	ld.global.f32 	%f12, [%rd16];
	add.f32 	%f13, %f12, %f11;
	st.global.f32 	[%rd16], %f13;
	ld.global.f32 	%f14, [%rd2];
	div.rn.f32 	%f15, %f14, %f1;
	ld.global.f32 	%f16, [%rd16+4];
	add.f32 	%f17, %f16, %f15;
	st.global.f32 	[%rd16+4], %f17;
	add.s32 	%r28, %r28, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r27, %r27, -4;
	setp.ne.s32 	%p4, %r27, 0;
	@%p4 bra 	$L__BB1_4;

$L__BB1_5:
	setp.eq.s32 	%p5, %r29, 0;
	@%p5 bra 	$L__BB1_8;

	mad.lo.s32 	%r25, %r2, %r1, %r28;
	mul.wide.s32 	%rd15, %r25, 4;
	add.s64 	%rd17, %rd1, %rd15;

$L__BB1_7:
	.pragma "nounroll";
	ld.global.f32 	%f18, [%rd2];
	div.rn.f32 	%f19, %f18, %f1;
	ld.global.f32 	%f20, [%rd17];
	add.f32 	%f21, %f20, %f19;
	st.global.f32 	[%rd17], %f21;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r29, %r29, -1;
	setp.ne.s32 	%p6, %r29, 0;
	@%p6 bra 	$L__BB1_7;

$L__BB1_8:
	ret;

}
	// .globl	maxpool_forward
.visible .entry maxpool_forward(
	.param .u32 maxpool_forward_param_0,
	.param .u32 maxpool_forward_param_1,
	.param .u32 maxpool_forward_param_2,
	.param .u32 maxpool_forward_param_3,
	.param .u32 maxpool_forward_param_4,
	.param .u32 maxpool_forward_param_5,
	.param .u32 maxpool_forward_param_6,
	.param .u64 maxpool_forward_param_7,
	.param .u64 maxpool_forward_param_8,
	.param .u64 maxpool_forward_param_9
)
{
	.reg .pred 	%p<51>;
	.reg .f32 	%f<51>;
	.reg .b32 	%r<100>;
	.reg .b64 	%rd<14>;


	ld.param.u32 	%r49, [maxpool_forward_param_0];
	ld.param.u32 	%r44, [maxpool_forward_param_1];
	ld.param.u32 	%r45, [maxpool_forward_param_2];
	ld.param.u32 	%r46, [maxpool_forward_param_4];
	ld.param.u32 	%r47, [maxpool_forward_param_5];
	ld.param.u32 	%r48, [maxpool_forward_param_6];
	ld.param.u64 	%rd6, [maxpool_forward_param_7];
	ld.param.u64 	%rd4, [maxpool_forward_param_8];
	ld.param.u64 	%rd5, [maxpool_forward_param_9];
	cvta.to.global.u64 	%rd1, %rd6;
	mov.u32 	%r50, %nctaid.x;
	mov.u32 	%r51, %ctaid.y;
	mov.u32 	%r52, %ctaid.x;
	mad.lo.s32 	%r53, %r51, %r50, %r52;
	mov.u32 	%r54, %ntid.x;
	mov.u32 	%r55, %tid.x;
	mad.lo.s32 	%r1, %r53, %r54, %r55;
	setp.ge.s32 	%p1, %r1, %r49;
	@%p1 bra 	$L__BB2_26;

	sub.s32 	%r57, %r44, %r47;
	add.s32 	%r58, %r57, %r48;
	div.s32 	%r59, %r58, %r46;
	add.s32 	%r2, %r59, 1;
	sub.s32 	%r60, %r45, %r47;
	add.s32 	%r61, %r60, %r48;
	div.s32 	%r62, %r61, %r46;
	add.s32 	%r3, %r62, 1;
	div.s32 	%r63, %r1, %r3;
	mul.lo.s32 	%r64, %r63, %r3;
	sub.s32 	%r4, %r1, %r64;
	div.s32 	%r6, %r63, %r2;
	mul.lo.s32 	%r65, %r6, %r2;
	sub.s32 	%r5, %r63, %r65;
	setp.lt.s32 	%p2, %r47, 1;
	mov.u32 	%r98, -1;
	mov.f32 	%f49, 0fFF800000;
	@%p2 bra 	$L__BB2_25;

	shr.u32 	%r68, %r48, 31;
	add.s32 	%r69, %r48, %r68;
	shr.s32 	%r70, %r69, 1;
	neg.s32 	%r71, %r70;
	mad.lo.s32 	%r7, %r5, %r46, %r71;
	mad.lo.s32 	%r8, %r4, %r46, %r71;
	mul.lo.s32 	%r9, %r6, %r44;
	add.s32 	%r10, %r47, -1;
	and.b32  	%r11, %r47, 3;
	sub.s32 	%r12, %r47, %r11;
	mov.u32 	%r66, 0;
	setp.lt.u32 	%p3, %r10, 3;
	setp.eq.s32 	%p29, %r11, 0;
	setp.eq.s32 	%p36, %r11, 1;
	setp.eq.s32 	%p43, %r11, 2;
	mov.u32 	%r90, %r66;

$L__BB2_3:
	add.s32 	%r15, %r7, %r90;
	add.s32 	%r74, %r15, %r9;
	mul.lo.s32 	%r16, %r74, %r45;
	mov.u32 	%r96, %r66;
	@%p3 bra 	$L__BB2_14;

	mov.u32 	%r96, %r66;
	mov.u32 	%r94, %r12;

$L__BB2_5:
	add.s32 	%r20, %r8, %r96;
	add.s32 	%r21, %r20, %r16;
	or.b32  	%r76, %r20, %r15;
	setp.lt.s32 	%p4, %r76, 0;
	setp.ge.s32 	%p5, %r15, %r44;
	or.pred  	%p6, %p5, %p4;
	setp.ge.s32 	%p7, %r20, %r45;
	mul.wide.s32 	%rd7, %r21, 4;
	add.s64 	%rd2, %rd1, %rd7;
	mov.f32 	%f43, 0fFF800000;
	or.pred  	%p8, %p7, %p6;
	mov.f32 	%f40, %f43;
	@%p8 bra 	$L__BB2_7;

	ld.global.f32 	%f40, [%rd2];

$L__BB2_7:
	setp.gt.f32 	%p9, %f40, %f49;
	selp.b32 	%r22, %r21, %r98, %p9;
	selp.f32 	%f5, %f40, %f49, %p9;
	add.s32 	%r23, %r20, 1;
	or.b32  	%r77, %r23, %r15;
	setp.lt.s32 	%p10, %r77, 0;
	or.pred  	%p12, %p5, %p10;
	setp.ge.s32 	%p13, %r23, %r45;
	or.pred  	%p14, %p13, %p12;
	mov.f32 	%f41, %f43;
	@%p14 bra 	$L__BB2_9;

	ld.global.f32 	%f41, [%rd2+4];

$L__BB2_9:
	setp.gt.f32 	%p15, %f41, %f5;
	add.s32 	%r78, %r23, %r16;
	selp.b32 	%r24, %r78, %r22, %p15;
	selp.f32 	%f8, %f41, %f5, %p15;
	add.s32 	%r25, %r20, 2;
	or.b32  	%r79, %r25, %r15;
	setp.lt.s32 	%p16, %r79, 0;
	or.pred  	%p18, %p5, %p16;
	setp.ge.s32 	%p19, %r25, %r45;
	or.pred  	%p20, %p19, %p18;
	mov.f32 	%f42, %f43;
	@%p20 bra 	$L__BB2_11;

	ld.global.f32 	%f42, [%rd2+8];

$L__BB2_11:
	setp.gt.f32 	%p21, %f42, %f8;
	add.s32 	%r80, %r25, %r16;
	selp.b32 	%r26, %r80, %r24, %p21;
	selp.f32 	%f11, %f42, %f8, %p21;
	add.s32 	%r27, %r20, 3;
	or.b32  	%r81, %r27, %r15;
	setp.lt.s32 	%p22, %r81, 0;
	or.pred  	%p24, %p5, %p22;
	setp.ge.s32 	%p25, %r27, %r45;
	or.pred  	%p26, %p25, %p24;
	@%p26 bra 	$L__BB2_13;

	ld.global.f32 	%f43, [%rd2+12];

$L__BB2_13:
	setp.gt.f32 	%p27, %f43, %f11;
	add.s32 	%r82, %r27, %r16;
	selp.b32 	%r98, %r82, %r26, %p27;
	selp.f32 	%f49, %f43, %f11, %p27;
	add.s32 	%r96, %r96, 4;
	add.s32 	%r94, %r94, -4;
	setp.ne.s32 	%p28, %r94, 0;
	@%p28 bra 	$L__BB2_5;

$L__BB2_14:
	@%p29 bra 	$L__BB2_24;

	setp.ge.s32 	%p30, %r15, %r44;
	add.s32 	%r34, %r8, %r96;
	add.s32 	%r35, %r34, %r16;
	or.b32  	%r83, %r34, %r15;
	setp.lt.s32 	%p31, %r83, 0;
	or.pred  	%p32, %p30, %p31;
	setp.ge.s32 	%p33, %r34, %r45;
	mul.wide.s32 	%rd8, %r35, 4;
	add.s64 	%rd3, %rd1, %rd8;
	mov.f32 	%f46, 0fFF800000;
	or.pred  	%p34, %p33, %p32;
	@%p34 bra 	$L__BB2_17;

	ld.global.f32 	%f46, [%rd3];

$L__BB2_17:
	setp.gt.f32 	%p35, %f46, %f49;
	selp.b32 	%r98, %r35, %r98, %p35;
	selp.f32 	%f49, %f46, %f49, %p35;
	@%p36 bra 	$L__BB2_24;

	add.s32 	%r37, %r34, 1;
	or.b32  	%r84, %r37, %r15;
	setp.lt.s32 	%p38, %r84, 0;
	or.pred  	%p39, %p30, %p38;
	setp.ge.s32 	%p40, %r37, %r45;
	mov.f32 	%f47, 0fFF800000;
	or.pred  	%p41, %p40, %p39;
	@%p41 bra 	$L__BB2_20;

	ld.global.f32 	%f47, [%rd3+4];

$L__BB2_20:
	setp.gt.f32 	%p42, %f47, %f49;
	add.s32 	%r85, %r37, %r16;
	selp.b32 	%r98, %r85, %r98, %p42;
	selp.f32 	%f49, %f47, %f49, %p42;
	@%p43 bra 	$L__BB2_24;

	add.s32 	%r86, %r34, 2;
	add.s32 	%r39, %r86, %r16;
	or.b32  	%r87, %r86, %r15;
	setp.lt.s32 	%p45, %r87, 0;
	or.pred  	%p46, %p30, %p45;
	setp.ge.s32 	%p47, %r86, %r45;
	mov.f32 	%f48, 0fFF800000;
	or.pred  	%p48, %p47, %p46;
	@%p48 bra 	$L__BB2_23;

	ld.global.f32 	%f48, [%rd3+8];

$L__BB2_23:
	setp.gt.f32 	%p49, %f48, %f49;
	selp.b32 	%r98, %r39, %r98, %p49;
	selp.f32 	%f49, %f48, %f49, %p49;

$L__BB2_24:
	add.s32 	%r90, %r90, 1;
	setp.lt.s32 	%p50, %r90, %r47;
	@%p50 bra 	$L__BB2_3;

$L__BB2_25:
	mad.lo.s32 	%r88, %r6, %r2, %r5;
	mad.lo.s32 	%r89, %r88, %r3, %r4;
	cvta.to.global.u64 	%rd9, %rd4;
	mul.wide.s32 	%rd10, %r89, 4;
	add.s64 	%rd11, %rd9, %rd10;
	st.global.f32 	[%rd11], %f49;
	cvta.to.global.u64 	%rd12, %rd5;
	add.s64 	%rd13, %rd12, %rd10;
	st.global.u32 	[%rd13], %r98;

$L__BB2_26:
	ret;

}
	// .globl	maxpool_backward
.visible .entry maxpool_backward(
	.param .u32 maxpool_backward_param_0,
	.param .u32 maxpool_backward_param_1,
	.param .u32 maxpool_backward_param_2,
	.param .u32 maxpool_backward_param_3,
	.param .u32 maxpool_backward_param_4,
	.param .u32 maxpool_backward_param_5,
	.param .u32 maxpool_backward_param_6,
	.param .u64 maxpool_backward_param_7,
	.param .u64 maxpool_backward_param_8,
	.param .u64 maxpool_backward_param_9
)
{
	.reg .pred 	%p<51>;
	.reg .f32 	%f<67>;
	.reg .b32 	%r<84>;
	.reg .b64 	%rd<15>;


	ld.param.u32 	%r31, [maxpool_backward_param_0];
	ld.param.u32 	%r27, [maxpool_backward_param_1];
	ld.param.u32 	%r28, [maxpool_backward_param_2];
	ld.param.u32 	%r29, [maxpool_backward_param_4];
	ld.param.u32 	%r32, [maxpool_backward_param_5];
	ld.param.u32 	%r30, [maxpool_backward_param_6];
	ld.param.u64 	%rd8, [maxpool_backward_param_7];
	ld.param.u64 	%rd7, [maxpool_backward_param_8];
	ld.param.u64 	%rd9, [maxpool_backward_param_9];
	cvta.to.global.u64 	%rd1, %rd8;
	cvta.to.global.u64 	%rd2, %rd9;
	sub.s32 	%r33, %r27, %r32;
	add.s32 	%r34, %r33, %r30;
	div.s32 	%r1, %r34, %r29;
	sub.s32 	%r35, %r28, %r32;
	add.s32 	%r36, %r35, %r30;
	div.s32 	%r2, %r36, %r29;
	add.s32 	%r37, %r32, -1;
	div.s32 	%r3, %r37, %r29;
	mov.u32 	%r38, %nctaid.x;
	mov.u32 	%r39, %ctaid.y;
	mov.u32 	%r40, %ctaid.x;
	mad.lo.s32 	%r41, %r39, %r38, %r40;
	mov.u32 	%r42, %ntid.x;
	mov.u32 	%r43, %tid.x;
	mad.lo.s32 	%r4, %r41, %r42, %r43;
	setp.ge.s32 	%p1, %r4, %r31;
	@%p1 bra 	$L__BB3_32;

	neg.s32 	%r5, %r3;
	setp.lt.s32 	%p2, %r3, %r5;
	mov.f32 	%f28, 0f00000000;
	mov.f32 	%f65, %f28;
	@%p2 bra 	$L__BB3_31;

	div.s32 	%r44, %r4, %r28;
	shr.u32 	%r45, %r30, 31;
	add.s32 	%r46, %r30, %r45;
	shr.s32 	%r47, %r46, 1;
	mul.lo.s32 	%r48, %r44, %r28;
	sub.s32 	%r49, %r4, %r48;
	add.s32 	%r50, %r49, %r47;
	add.s32 	%r51, %r1, 1;
	mov.u32 	%r52, 1;
	div.s32 	%r53, %r44, %r27;
	mul.lo.s32 	%r6, %r53, %r51;
	max.s32 	%r54, %r3, %r5;
	add.s32 	%r7, %r3, %r54;
	add.s32 	%r55, %r7, 1;
	div.s32 	%r8, %r50, %r29;
	mul.lo.s32 	%r56, %r53, %r27;
	sub.s32 	%r57, %r44, %r56;
	add.s32 	%r58, %r57, %r47;
	div.s32 	%r9, %r58, %r29;
	and.b32  	%r10, %r55, 3;
	mov.u32 	%r59, 3;
	sub.s32 	%r11, %r8, %r3;
	sub.s32 	%r12, %r52, %r3;
	add.s32 	%r13, %r8, %r12;
	mov.u32 	%r60, 2;
	sub.s32 	%r14, %r60, %r3;
	add.s32 	%r15, %r8, %r14;
	sub.s32 	%r16, %r59, %r3;
	add.s32 	%r17, %r2, 1;
	setp.eq.s32 	%p3, %r10, 0;
	setp.lt.u32 	%p24, %r7, 3;
	setp.gt.s32 	%p6, %r11, %r2;
	setp.eq.s32 	%p10, %r10, 1;
	mov.u32 	%r81, %r5;

$L__BB3_3:
	add.s32 	%r19, %r9, %r81;
	add.s32 	%r61, %r19, %r6;
	mul.lo.s32 	%r20, %r61, %r17;
	mov.u32 	%r82, %r5;
	@%p3 bra 	$L__BB3_16;

	setp.gt.s32 	%p4, %r19, %r1;
	or.b32  	%r62, %r19, %r11;
	setp.lt.s32 	%p5, %r62, 0;
	or.pred  	%p7, %p6, %p5;
	add.s32 	%r63, %r20, %r11;
	mul.wide.s32 	%rd10, %r63, 4;
	add.s64 	%rd3, %rd2, %rd10;
	add.s64 	%rd4, %rd1, %rd10;
	or.pred  	%p8, %p4, %p7;
	mov.f32 	%f55, %f28;
	@%p8 bra 	$L__BB3_7;

	ld.global.u32 	%r64, [%rd3];
	setp.ne.s32 	%p9, %r64, %r4;
	mov.f32 	%f55, %f28;
	@%p9 bra 	$L__BB3_7;

	ld.global.f32 	%f55, [%rd4];

$L__BB3_7:
	add.f32 	%f65, %f65, %f55;
	mov.u32 	%r82, %r12;
	@%p10 bra 	$L__BB3_16;

	or.b32  	%r65, %r19, %r13;
	setp.lt.s32 	%p12, %r65, 0;
	setp.gt.s32 	%p13, %r13, %r2;
	or.pred  	%p14, %p13, %p12;
	or.pred  	%p15, %p4, %p14;
	mov.f32 	%f56, %f28;
	@%p15 bra 	$L__BB3_11;

	ld.global.u32 	%r66, [%rd3+4];
	setp.ne.s32 	%p16, %r66, %r4;
	mov.f32 	%f56, %f28;
	@%p16 bra 	$L__BB3_11;

	ld.global.f32 	%f56, [%rd4+4];

$L__BB3_11:
	add.f32 	%f65, %f65, %f56;
	setp.eq.s32 	%p17, %r10, 2;
	mov.u32 	%r82, %r14;
	@%p17 bra 	$L__BB3_16;

	or.b32  	%r67, %r19, %r15;
	setp.lt.s32 	%p19, %r67, 0;
	setp.gt.s32 	%p20, %r15, %r2;
	or.pred  	%p21, %p20, %p19;
	or.pred  	%p22, %p4, %p21;
	mov.f32 	%f57, %f28;
	@%p22 bra 	$L__BB3_15;

	ld.global.u32 	%r68, [%rd3+8];
	setp.ne.s32 	%p23, %r68, %r4;
	mov.f32 	%f57, %f28;
	@%p23 bra 	$L__BB3_15;

	ld.global.f32 	%f57, [%rd4+8];

$L__BB3_15:
	add.f32 	%f65, %f65, %f57;
	mov.u32 	%r82, %r16;

$L__BB3_16:
	@%p24 bra 	$L__BB3_30;

$L__BB3_17:
	add.s32 	%r23, %r8, %r82;
	add.s32 	%r69, %r20, %r23;
	setp.gt.s32 	%p25, %r23, %r2;
	or.b32  	%r70, %r19, %r23;
	setp.lt.s32 	%p26, %r70, 0;
	or.pred  	%p27, %p25, %p26;
	setp.gt.s32 	%p28, %r19, %r1;
	mul.wide.s32 	%rd11, %r69, 4;
	add.s64 	%rd5, %rd2, %rd11;
	add.s64 	%rd6, %rd1, %rd11;
	or.pred  	%p29, %p28, %p27;
	mov.f32 	%f64, 0f00000000;
	mov.f32 	%f61, %f64;
	@%p29 bra 	$L__BB3_20;

	ld.global.u32 	%r71, [%rd5];
	setp.ne.s32 	%p30, %r71, %r4;
	@%p30 bra 	$L__BB3_20;

	ld.global.f32 	%f61, [%rd6];

$L__BB3_20:
	add.f32 	%f16, %f65, %f61;
	add.s32 	%r72, %r23, 1;
	setp.gt.s32 	%p31, %r72, %r2;
	or.b32  	%r73, %r19, %r72;
	setp.lt.s32 	%p32, %r73, 0;
	or.pred  	%p33, %p31, %p32;
	or.pred  	%p35, %p28, %p33;
	mov.f32 	%f62, %f64;
	@%p35 bra 	$L__BB3_23;

	ld.global.u32 	%r74, [%rd5+4];
	setp.ne.s32 	%p36, %r74, %r4;
	mov.f32 	%f62, %f64;
	@%p36 bra 	$L__BB3_23;

	ld.global.f32 	%f62, [%rd6+4];

$L__BB3_23:
	add.f32 	%f19, %f16, %f62;
	add.s32 	%r75, %r23, 2;
	setp.gt.s32 	%p37, %r75, %r2;
	or.b32  	%r76, %r19, %r75;
	setp.lt.s32 	%p38, %r76, 0;
	or.pred  	%p39, %p37, %p38;
	or.pred  	%p41, %p28, %p39;
	mov.f32 	%f63, %f64;
	@%p41 bra 	$L__BB3_26;

	ld.global.u32 	%r77, [%rd5+8];
	setp.ne.s32 	%p42, %r77, %r4;
	mov.f32 	%f63, %f64;
	@%p42 bra 	$L__BB3_26;

	ld.global.f32 	%f63, [%rd6+8];

$L__BB3_26:
	add.f32 	%f22, %f19, %f63;
	add.s32 	%r24, %r82, 3;
	add.s32 	%r78, %r8, %r24;
	setp.gt.s32 	%p43, %r78, %r2;
	or.b32  	%r79, %r19, %r78;
	setp.lt.s32 	%p44, %r79, 0;
	or.pred  	%p45, %p43, %p44;
	or.pred  	%p47, %p28, %p45;
	@%p47 bra 	$L__BB3_29;

	ld.global.u32 	%r80, [%rd5+12];
	setp.ne.s32 	%p48, %r80, %r4;
	@%p48 bra 	$L__BB3_29;

	ld.global.f32 	%f64, [%rd6+12];

$L__BB3_29:
	add.f32 	%f65, %f22, %f64;
	add.s32 	%r82, %r82, 4;
	setp.lt.s32 	%p49, %r24, %r3;
	@%p49 bra 	$L__BB3_17;

$L__BB3_30:
	add.s32 	%r26, %r81, 1;
	setp.lt.s32 	%p50, %r81, %r3;
	mov.u32 	%r81, %r26;
	@%p50 bra 	$L__BB3_3;

$L__BB3_31:
	cvta.to.global.u64 	%rd12, %rd7;
	mul.wide.s32 	%rd13, %r4, 4;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.f32 	%f45, [%rd14];
	add.f32 	%f46, %f65, %f45;
	st.global.f32 	[%rd14], %f46;

$L__BB3_32:
	ret;

}
	// .globl	meanpool_forward
.visible .entry meanpool_forward(
	.param .u32 meanpool_forward_param_0,
	.param .u32 meanpool_forward_param_1,
	.param .u32 meanpool_forward_param_2,
	.param .u32 meanpool_forward_param_3,
	.param .u32 meanpool_forward_param_4,
	.param .u32 meanpool_forward_param_5,
	.param .u32 meanpool_forward_param_6,
	.param .u64 meanpool_forward_param_7,
	.param .u64 meanpool_forward_param_8
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<35>;
	.reg .b32 	%r<57>;
	.reg .b64 	%rd<15>;


	ld.param.u32 	%r25, [meanpool_forward_param_0];
	ld.param.u32 	%r20, [meanpool_forward_param_1];
	ld.param.u32 	%r21, [meanpool_forward_param_2];
	ld.param.u32 	%r22, [meanpool_forward_param_4];
	ld.param.u32 	%r23, [meanpool_forward_param_5];
	ld.param.u32 	%r24, [meanpool_forward_param_6];
	ld.param.u64 	%rd8, [meanpool_forward_param_7];
	ld.param.u64 	%rd7, [meanpool_forward_param_8];
	cvta.to.global.u64 	%rd1, %rd8;
	mov.u32 	%r26, %nctaid.x;
	mov.u32 	%r27, %ctaid.y;
	mov.u32 	%r28, %ctaid.x;
	mad.lo.s32 	%r29, %r27, %r26, %r28;
	mov.u32 	%r30, %ntid.x;
	mov.u32 	%r31, %tid.x;
	mad.lo.s32 	%r1, %r29, %r30, %r31;
	setp.ge.s32 	%p1, %r1, %r25;
	@%p1 bra 	$L__BB4_12;

	sub.s32 	%r32, %r20, %r23;
	add.s32 	%r33, %r32, %r24;
	div.s32 	%r34, %r33, %r22;
	add.s32 	%r2, %r34, 1;
	sub.s32 	%r35, %r21, %r23;
	add.s32 	%r36, %r35, %r24;
	div.s32 	%r37, %r36, %r22;
	add.s32 	%r3, %r37, 1;
	div.s32 	%r38, %r1, %r3;
	mul.lo.s32 	%r39, %r38, %r3;
	sub.s32 	%r4, %r1, %r39;
	div.s32 	%r6, %r38, %r2;
	mul.lo.s32 	%r40, %r6, %r2;
	sub.s32 	%r5, %r38, %r40;
	setp.lt.s32 	%p2, %r23, 1;
	mov.f32 	%f33, 0f00000000;
	@%p2 bra 	$L__BB4_11;

	shr.u32 	%r42, %r24, 31;
	add.s32 	%r43, %r24, %r42;
	shr.s32 	%r44, %r43, 1;
	neg.s32 	%r45, %r44;
	mad.lo.s32 	%r46, %r5, %r22, %r45;
	mad.lo.s32 	%r7, %r4, %r22, %r45;
	mad.lo.s32 	%r8, %r6, %r20, %r46;
	add.s32 	%r9, %r23, -1;
	and.b32  	%r10, %r23, 3;
	sub.s32 	%r11, %r23, %r10;
	add.s64 	%rd2, %rd1, 8;
	mov.u32 	%r41, 0;
	setp.lt.u32 	%p3, %r9, 3;
	setp.eq.s32 	%p5, %r10, 0;
	setp.eq.s32 	%p6, %r10, 1;
	setp.eq.s32 	%p7, %r10, 2;
	mov.u32 	%r53, %r41;

$L__BB4_3:
	add.s32 	%r48, %r8, %r53;
	mad.lo.s32 	%r13, %r48, %r21, %r7;
	mov.u32 	%r56, %r41;
	@%p3 bra 	$L__BB4_6;

	mul.wide.s32 	%rd9, %r13, 4;
	add.s64 	%rd14, %rd2, %rd9;
	mov.u32 	%r56, %r41;
	mov.u32 	%r55, %r11;

$L__BB4_5:
	ld.global.f32 	%f14, [%rd14+-8];
	add.f32 	%f15, %f33, %f14;
	ld.global.f32 	%f16, [%rd14+-4];
	add.f32 	%f17, %f15, %f16;
	ld.global.f32 	%f18, [%rd14];
	add.f32 	%f19, %f17, %f18;
	ld.global.f32 	%f20, [%rd14+4];
	add.f32 	%f33, %f19, %f20;
	add.s32 	%r56, %r56, 4;
	add.s64 	%rd14, %rd14, 16;
	add.s32 	%r55, %r55, -4;
	setp.ne.s32 	%p4, %r55, 0;
	@%p4 bra 	$L__BB4_5;

$L__BB4_6:
	@%p5 bra 	$L__BB4_10;

	add.s32 	%r50, %r13, %r56;
	mul.wide.s32 	%rd10, %r50, 4;
	add.s64 	%rd6, %rd1, %rd10;
	ld.global.f32 	%f21, [%rd6];
	add.f32 	%f33, %f33, %f21;
	@%p6 bra 	$L__BB4_10;

	ld.global.f32 	%f22, [%rd6+4];
	add.f32 	%f33, %f33, %f22;
	@%p7 bra 	$L__BB4_10;

	ld.global.f32 	%f23, [%rd6+8];
	add.f32 	%f33, %f33, %f23;

$L__BB4_10:
	add.s32 	%r53, %r53, 1;
	setp.lt.s32 	%p8, %r53, %r23;
	@%p8 bra 	$L__BB4_3;

$L__BB4_11:
	cvt.rn.f32.s32 	%f24, %r23;
	div.rn.f32 	%f25, %f33, %f24;
	div.rn.f32 	%f26, %f25, %f24;
	mad.lo.s32 	%r51, %r6, %r2, %r5;
	mad.lo.s32 	%r52, %r51, %r3, %r4;
	cvta.to.global.u64 	%rd11, %rd7;
	mul.wide.s32 	%rd12, %r52, 4;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.f32 	%f27, [%rd13];
	add.f32 	%f28, %f26, %f27;
	st.global.f32 	[%rd13], %f28;

$L__BB4_12:
	ret;

}
	// .globl	meanpool_backward
.visible .entry meanpool_backward(
	.param .u32 meanpool_backward_param_0,
	.param .u32 meanpool_backward_param_1,
	.param .u32 meanpool_backward_param_2,
	.param .u32 meanpool_backward_param_3,
	.param .u32 meanpool_backward_param_4,
	.param .u32 meanpool_backward_param_5,
	.param .u32 meanpool_backward_param_6,
	.param .u64 meanpool_backward_param_7,
	.param .u64 meanpool_backward_param_8
)
{
	.reg .pred 	%p<9>;
	.reg .f32 	%f<47>;
	.reg .b32 	%r<66>;
	.reg .b64 	%rd<15>;


	ld.param.u32 	%r26, [meanpool_backward_param_0];
	ld.param.u32 	%r21, [meanpool_backward_param_1];
	ld.param.u32 	%r22, [meanpool_backward_param_2];
	ld.param.u32 	%r23, [meanpool_backward_param_4];
	ld.param.u32 	%r24, [meanpool_backward_param_5];
	ld.param.u32 	%r25, [meanpool_backward_param_6];
	ld.param.u64 	%rd8, [meanpool_backward_param_7];
	ld.param.u64 	%rd7, [meanpool_backward_param_8];
	cvta.to.global.u64 	%rd1, %rd8;
	sub.s32 	%r27, %r22, %r24;
	add.s32 	%r28, %r27, %r25;
	div.s32 	%r29, %r28, %r23;
	add.s32 	%r1, %r29, 1;
	add.s32 	%r30, %r24, -1;
	div.s32 	%r2, %r30, %r23;
	mov.u32 	%r31, %nctaid.x;
	mov.u32 	%r32, %ctaid.y;
	mov.u32 	%r33, %ctaid.x;
	mad.lo.s32 	%r34, %r32, %r31, %r33;
	mov.u32 	%r35, %ntid.x;
	mov.u32 	%r36, %tid.x;
	mad.lo.s32 	%r3, %r34, %r35, %r36;
	setp.ge.s32 	%p1, %r3, %r26;
	@%p1 bra 	$L__BB5_12;

	neg.s32 	%r4, %r2;
	setp.lt.s32 	%p2, %r2, %r4;
	mov.f32 	%f45, 0f00000000;
	@%p2 bra 	$L__BB5_11;

	div.s32 	%r37, %r3, %r22;
	shr.u32 	%r38, %r25, 31;
	add.s32 	%r39, %r25, %r38;
	shr.s32 	%r40, %r39, 1;
	mul.lo.s32 	%r41, %r37, %r22;
	sub.s32 	%r42, %r3, %r41;
	add.s32 	%r43, %r42, %r40;
	cvt.rn.f32.s32 	%f1, %r24;
	max.s32 	%r44, %r2, %r4;
	add.s32 	%r5, %r2, %r44;
	add.s32 	%r45, %r5, 1;
	mov.u32 	%r46, 1;
	div.s32 	%r6, %r43, %r23;
	div.s32 	%r47, %r37, %r21;
	mul.lo.s32 	%r48, %r47, %r21;
	sub.s32 	%r49, %r37, %r48;
	add.s32 	%r50, %r49, %r40;
	div.s32 	%r7, %r50, %r23;
	and.b32  	%r8, %r45, 3;
	mov.u32 	%r51, 3;
	sub.s32 	%r9, %r6, %r2;
	sub.s32 	%r10, %r46, %r2;
	mov.u32 	%r52, 2;
	sub.s32 	%r11, %r52, %r2;
	sub.s32 	%r12, %r51, %r2;
	add.s64 	%rd2, %rd1, 8;
	sub.s32 	%r53, %r21, %r24;
	add.s32 	%r54, %r53, %r25;
	div.s32 	%r55, %r54, %r23;
	add.s32 	%r56, %r55, 1;
	mul.lo.s32 	%r13, %r47, %r56;
	add.s32 	%r14, %r7, %r13;
	setp.eq.s32 	%p3, %r8, 0;
	setp.lt.u32 	%p6, %r5, 3;
	setp.eq.s32 	%p4, %r8, 1;
	setp.eq.s32 	%p5, %r8, 2;
	mov.u32 	%r63, %r4;

$L__BB5_3:
	mov.u32 	%r64, %r4;
	@%p3 bra 	$L__BB5_7;

	add.s32 	%r57, %r63, %r13;
	add.s32 	%r58, %r57, %r7;
	mad.lo.s32 	%r59, %r58, %r1, %r9;
	mul.wide.s32 	%rd9, %r59, 4;
	add.s64 	%rd3, %rd1, %rd9;
	ld.global.f32 	%f15, [%rd3];
	div.rn.f32 	%f16, %f15, %f1;
	div.rn.f32 	%f17, %f16, %f1;
	add.f32 	%f45, %f45, %f17;
	mov.u32 	%r64, %r10;
	@%p4 bra 	$L__BB5_7;

	ld.global.f32 	%f18, [%rd3+4];
	div.rn.f32 	%f19, %f18, %f1;
	div.rn.f32 	%f20, %f19, %f1;
	add.f32 	%f45, %f45, %f20;
	mov.u32 	%r64, %r11;
	@%p5 bra 	$L__BB5_7;

	ld.global.f32 	%f21, [%rd3+8];
	div.rn.f32 	%f22, %f21, %f1;
	div.rn.f32 	%f23, %f22, %f1;
	add.f32 	%f45, %f45, %f23;
	mov.u32 	%r64, %r12;

$L__BB5_7:
	@%p6 bra 	$L__BB5_10;

	add.s32 	%r65, %r64, -1;
	add.s32 	%r60, %r14, %r63;
	add.s32 	%r61, %r6, %r64;
	mad.lo.s32 	%r62, %r1, %r60, %r61;
	mul.wide.s32 	%rd10, %r62, 4;
	add.s64 	%rd14, %rd2, %rd10;

$L__BB5_9:
	ld.global.f32 	%f24, [%rd14+-8];
	div.rn.f32 	%f25, %f24, %f1;
	div.rn.f32 	%f26, %f25, %f1;
	add.f32 	%f27, %f45, %f26;
	ld.global.f32 	%f28, [%rd14+-4];
	div.rn.f32 	%f29, %f28, %f1;
	div.rn.f32 	%f30, %f29, %f1;
	add.f32 	%f31, %f27, %f30;
	ld.global.f32 	%f32, [%rd14];
	div.rn.f32 	%f33, %f32, %f1;
	div.rn.f32 	%f34, %f33, %f1;
	add.f32 	%f35, %f31, %f34;
	ld.global.f32 	%f36, [%rd14+4];
	div.rn.f32 	%f37, %f36, %f1;
	div.rn.f32 	%f38, %f37, %f1;
	add.f32 	%f45, %f35, %f38;
	add.s64 	%rd14, %rd14, 16;
	add.s32 	%r65, %r65, 4;
	setp.lt.s32 	%p7, %r65, %r2;
	@%p7 bra 	$L__BB5_9;

$L__BB5_10:
	add.s32 	%r20, %r63, 1;
	setp.lt.s32 	%p8, %r63, %r2;
	mov.u32 	%r63, %r20;
	@%p8 bra 	$L__BB5_3;

$L__BB5_11:
	cvta.to.global.u64 	%rd11, %rd7;
	mul.wide.s32 	%rd12, %r3, 4;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.f32 	%f39, [%rd13];
	add.f32 	%f40, %f45, %f39;
	st.global.f32 	[%rd13], %f40;

$L__BB5_12:
	ret;

}

