//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31442593
// Cuda compilation tools, release 11.7, V11.7.99
// Based on NVVM 7.0.1
//

.version 7.7
.target sm_52
.address_size 64

	// .globl	pooling_forward

.visible .entry pooling_forward(
	.param .u32 pooling_forward_param_0,
	.param .u32 pooling_forward_param_1,
	.param .u32 pooling_forward_param_2,
	.param .u32 pooling_forward_param_3,
	.param .u64 pooling_forward_param_4,
	.param .u64 pooling_forward_param_5
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<24>;
	.reg .b32 	%r<31>;
	.reg .b64 	%rd<18>;


	ld.param.u32 	%r14, [pooling_forward_param_0];
	ld.param.u32 	%r12, [pooling_forward_param_1];
	ld.param.u32 	%r13, [pooling_forward_param_2];
	ld.param.u64 	%rd10, [pooling_forward_param_4];
	ld.param.u64 	%rd9, [pooling_forward_param_5];
	cvta.to.global.u64 	%rd1, %rd10;
	mov.u32 	%r15, %nctaid.x;
	mov.u32 	%r16, %ctaid.y;
	mov.u32 	%r17, %ctaid.x;
	mad.lo.s32 	%r18, %r16, %r15, %r17;
	mov.u32 	%r19, %ntid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r1, %r18, %r19, %r20;
	setp.ge.s32 	%p1, %r1, %r14;
	@%p1 bra 	$L__BB0_9;

	cvta.to.global.u64 	%rd11, %rd9;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd2, %rd11, %rd12;
	mov.f32 	%f23, 0f00000000;
	mov.u32 	%r29, 0;
	st.global.u32 	[%rd2], %r29;
	mul.lo.s32 	%r2, %r13, %r12;
	setp.lt.s32 	%p2, %r2, 1;
	@%p2 bra 	$L__BB0_8;

	add.s32 	%r23, %r2, -1;
	and.b32  	%r30, %r2, 3;
	setp.lt.u32 	%p3, %r23, 3;
	mov.f32 	%f23, 0f00000000;
	@%p3 bra 	$L__BB0_5;

	sub.s32 	%r28, %r2, %r30;
	mul.lo.s32 	%r25, %r2, %r1;
	mul.wide.s32 	%rd13, %r25, 4;
	add.s64 	%rd14, %rd1, %rd13;
	add.s64 	%rd16, %rd14, 8;

$L__BB0_4:
	ld.global.f32 	%f10, [%rd16+-8];
	add.f32 	%f11, %f10, %f23;
	st.global.f32 	[%rd2], %f11;
	ld.global.f32 	%f12, [%rd16+-4];
	add.f32 	%f13, %f12, %f11;
	st.global.f32 	[%rd2], %f13;
	ld.global.f32 	%f14, [%rd16];
	add.f32 	%f15, %f14, %f13;
	st.global.f32 	[%rd2], %f15;
	ld.global.f32 	%f16, [%rd16+4];
	add.f32 	%f23, %f16, %f15;
	st.global.f32 	[%rd2], %f23;
	add.s32 	%r29, %r29, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r28, %r28, -4;
	setp.ne.s32 	%p4, %r28, 0;
	@%p4 bra 	$L__BB0_4;

$L__BB0_5:
	setp.eq.s32 	%p5, %r30, 0;
	@%p5 bra 	$L__BB0_8;

	mad.lo.s32 	%r26, %r2, %r1, %r29;
	mul.wide.s32 	%rd15, %r26, 4;
	add.s64 	%rd17, %rd1, %rd15;

$L__BB0_7:
	.pragma "nounroll";
	ld.global.f32 	%f17, [%rd17];
	add.f32 	%f23, %f17, %f23;
	st.global.f32 	[%rd2], %f23;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r30, %r30, -1;
	setp.ne.s32 	%p6, %r30, 0;
	@%p6 bra 	$L__BB0_7;

$L__BB0_8:
	cvt.rn.f32.s32 	%f18, %r2;
	div.rn.f32 	%f19, %f23, %f18;
	st.global.f32 	[%rd2], %f19;

$L__BB0_9:
	ret;

}
	// .globl	pooling_backward
.visible .entry pooling_backward(
	.param .u32 pooling_backward_param_0,
	.param .u32 pooling_backward_param_1,
	.param .u32 pooling_backward_param_2,
	.param .u32 pooling_backward_param_3,
	.param .u64 pooling_backward_param_4,
	.param .u64 pooling_backward_param_5
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<12>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<18>;


	ld.param.u32 	%r14, [pooling_backward_param_0];
	ld.param.u32 	%r12, [pooling_backward_param_1];
	ld.param.u32 	%r13, [pooling_backward_param_2];
	ld.param.u64 	%rd9, [pooling_backward_param_4];
	ld.param.u64 	%rd10, [pooling_backward_param_5];
	cvta.to.global.u64 	%rd1, %rd10;
	mov.u32 	%r15, %nctaid.x;
	mov.u32 	%r16, %ctaid.y;
	mov.u32 	%r17, %ctaid.x;
	mad.lo.s32 	%r18, %r16, %r15, %r17;
	mov.u32 	%r19, %ntid.x;
	mov.u32 	%r20, %tid.x;
	mad.lo.s32 	%r1, %r18, %r19, %r20;
	setp.ge.s32 	%p1, %r1, %r14;
	@%p1 bra 	$L__BB1_8;

	mul.lo.s32 	%r2, %r13, %r12;
	setp.lt.s32 	%p2, %r2, 1;
	@%p2 bra 	$L__BB1_8;

	cvta.to.global.u64 	%rd11, %rd9;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd2, %rd11, %rd12;
	cvt.rn.f32.s32 	%f1, %r2;
	and.b32  	%r29, %r2, 3;
	add.s32 	%r22, %r2, -1;
	setp.lt.u32 	%p3, %r22, 3;
	mov.u32 	%r28, 0;
	@%p3 bra 	$L__BB1_5;

	sub.s32 	%r27, %r2, %r29;
	mul.lo.s32 	%r24, %r2, %r1;
	mul.wide.s32 	%rd13, %r24, 4;
	add.s64 	%rd14, %rd1, %rd13;
	add.s64 	%rd16, %rd14, 8;

$L__BB1_4:
	ld.global.f32 	%f2, [%rd2];
	div.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd16+-8], %f3;
	ld.global.f32 	%f4, [%rd2];
	div.rn.f32 	%f5, %f4, %f1;
	st.global.f32 	[%rd16+-4], %f5;
	ld.global.f32 	%f6, [%rd2];
	div.rn.f32 	%f7, %f6, %f1;
	st.global.f32 	[%rd16], %f7;
	ld.global.f32 	%f8, [%rd2];
	div.rn.f32 	%f9, %f8, %f1;
	st.global.f32 	[%rd16+4], %f9;
	add.s32 	%r28, %r28, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r27, %r27, -4;
	setp.ne.s32 	%p4, %r27, 0;
	@%p4 bra 	$L__BB1_4;

$L__BB1_5:
	setp.eq.s32 	%p5, %r29, 0;
	@%p5 bra 	$L__BB1_8;

	mad.lo.s32 	%r25, %r2, %r1, %r28;
	mul.wide.s32 	%rd15, %r25, 4;
	add.s64 	%rd17, %rd1, %rd15;

$L__BB1_7:
	.pragma "nounroll";
	ld.global.f32 	%f10, [%rd2];
	div.rn.f32 	%f11, %f10, %f1;
	st.global.f32 	[%rd17], %f11;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r29, %r29, -1;
	setp.ne.s32 	%p6, %r29, 0;
	@%p6 bra 	$L__BB1_7;

$L__BB1_8:
	ret;

}

