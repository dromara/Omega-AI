//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_52
.address_size 64

	// .globl	fill_kernel
.global .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry fill_kernel(
	.param .u32 fill_kernel_param_0,
	.param .f32 fill_kernel_param_1,
	.param .u64 fill_kernel_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<5>;


	ld.param.u32 	%r2, [fill_kernel_param_0];
	ld.param.f32 	%f1, [fill_kernel_param_1];
	ld.param.u64 	%rd1, [fill_kernel_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f32 	[%rd4], %f1;

$L__BB0_2:
	ret;

}
	// .globl	abs_kernel
.visible .entry abs_kernel(
	.param .u32 abs_kernel_param_0,
	.param .u64 abs_kernel_param_1,
	.param .u64 abs_kernel_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [abs_kernel_param_0];
	ld.param.u64 	%rd1, [abs_kernel_param_1];
	ld.param.u64 	%rd2, [abs_kernel_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	abs.f32 	%f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f2;

$L__BB1_2:
	ret;

}
	// .globl	abs_backward_kernel
.visible .entry abs_backward_kernel(
	.param .u32 abs_backward_kernel_param_0,
	.param .u64 abs_backward_kernel_param_1,
	.param .u64 abs_backward_kernel_param_2,
	.param .u64 abs_backward_kernel_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [abs_backward_kernel_param_0];
	ld.param.u64 	%rd1, [abs_backward_kernel_param_1];
	ld.param.u64 	%rd2, [abs_backward_kernel_param_2];
	ld.param.u64 	%rd3, [abs_backward_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB2_2;

	cvta.to.global.u64 	%rd4, %rd3;
	cvta.to.global.u64 	%rd5, %rd1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	setp.eq.f32 	%p2, %f1, 0f00000000;
	mov.b32 	%r9, %f1;
	and.b32  	%r10, %r9, -2147483648;
	or.b32  	%r11, %r10, 1065353216;
	mov.b32 	%f2, %r11;
	selp.f32 	%f3, 0f00000000, %f2, %p2;
	add.s64 	%rd8, %rd4, %rd6;
	ld.global.f32 	%f4, [%rd8];
	mul.f32 	%f5, %f3, %f4;
	cvta.to.global.u64 	%rd9, %rd2;
	add.s64 	%rd10, %rd9, %rd6;
	st.global.f32 	[%rd10], %f5;

$L__BB2_2:
	ret;

}
	// .globl	copy_kernel
.visible .entry copy_kernel(
	.param .u32 copy_kernel_param_0,
	.param .u64 copy_kernel_param_1,
	.param .u32 copy_kernel_param_2,
	.param .u64 copy_kernel_param_3,
	.param .u32 copy_kernel_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r4, [copy_kernel_param_0];
	ld.param.u64 	%rd1, [copy_kernel_param_1];
	ld.param.u32 	%r2, [copy_kernel_param_2];
	ld.param.u64 	%rd2, [copy_kernel_param_3];
	ld.param.u32 	%r3, [copy_kernel_param_4];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.y;
	mad.lo.s32 	%r8, %r7, %r6, %r5;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	setp.ge.s32 	%p1, %r1, %r4;
	@%p1 bra 	$L__BB3_2;

	cvta.to.global.u64 	%rd3, %rd1;
	add.s32 	%r11, %r1, %r2;
	mul.wide.s32 	%rd4, %r11, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	add.s32 	%r12, %r1, %r3;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r12, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB3_2:
	ret;

}
	// .globl	axpy_kernel
.visible .entry axpy_kernel(
	.param .u32 axpy_kernel_param_0,
	.param .u64 axpy_kernel_param_1,
	.param .u32 axpy_kernel_param_2,
	.param .u64 axpy_kernel_param_3,
	.param .u32 axpy_kernel_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r4, [axpy_kernel_param_0];
	ld.param.u64 	%rd1, [axpy_kernel_param_1];
	ld.param.u32 	%r2, [axpy_kernel_param_2];
	ld.param.u64 	%rd2, [axpy_kernel_param_3];
	ld.param.u32 	%r3, [axpy_kernel_param_4];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.y;
	mad.lo.s32 	%r8, %r7, %r6, %r5;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	setp.ge.s32 	%p1, %r1, %r4;
	@%p1 bra 	$L__BB4_2;

	cvta.to.global.u64 	%rd3, %rd1;
	add.s32 	%r11, %r1, %r2;
	mul.wide.s32 	%rd4, %r11, 4;
	add.s64 	%rd5, %rd3, %rd4;
	add.s32 	%r12, %r1, %r3;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r12, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd5];
	add.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd8], %f3;

$L__BB4_2:
	ret;

}
	// .globl	one_hot_kernel
.visible .entry one_hot_kernel(
	.param .u32 one_hot_kernel_param_0,
	.param .u64 one_hot_kernel_param_1,
	.param .u64 one_hot_kernel_param_2,
	.param .u32 one_hot_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r3, [one_hot_kernel_param_0];
	ld.param.u64 	%rd1, [one_hot_kernel_param_1];
	ld.param.u64 	%rd2, [one_hot_kernel_param_2];
	ld.param.u32 	%r2, [one_hot_kernel_param_3];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %nctaid.x;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r6, %r5, %r4;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB5_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.rzi.s32.f32 	%r10, %f1;
	mad.lo.s32 	%r11, %r1, %r2, %r10;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r11, 4;
	add.s64 	%rd8, %rd6, %rd7;
	mov.u32 	%r12, 1065353216;
	st.global.u32 	[%rd8], %r12;

$L__BB5_2:
	ret;

}
	// .globl	copy_number_kernel
.visible .entry copy_number_kernel(
	.param .u32 copy_number_kernel_param_0,
	.param .u64 copy_number_kernel_param_1,
	.param .u64 copy_number_kernel_param_2,
	.param .u32 copy_number_kernel_param_3,
	.param .u32 copy_number_kernel_param_4,
	.param .u32 copy_number_kernel_param_5,
	.param .u32 copy_number_kernel_param_6,
	.param .u32 copy_number_kernel_param_7,
	.param .u32 copy_number_kernel_param_8
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r7, [copy_number_kernel_param_0];
	ld.param.u64 	%rd3, [copy_number_kernel_param_1];
	ld.param.u64 	%rd4, [copy_number_kernel_param_2];
	ld.param.u32 	%r2, [copy_number_kernel_param_4];
	ld.param.u32 	%r3, [copy_number_kernel_param_5];
	ld.param.u32 	%r4, [copy_number_kernel_param_6];
	ld.param.u32 	%r5, [copy_number_kernel_param_7];
	ld.param.u32 	%r6, [copy_number_kernel_param_8];
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %nctaid.x;
	mov.u32 	%r10, %ctaid.y;
	mad.lo.s32 	%r11, %r10, %r9, %r8;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	setp.ge.s32 	%p1, %r1, %r7;
	@%p1 bra 	$L__BB6_4;

	cvta.to.global.u64 	%rd5, %rd4;
	mul.lo.s32 	%r14, %r3, %r2;
	mul.lo.s32 	%r15, %r14, %r4;
	div.s32 	%r16, %r1, %r15;
	add.s32 	%r17, %r16, %r5;
	div.s32 	%r18, %r1, %r3;
	div.s32 	%r19, %r18, %r4;
	rem.s32 	%r20, %r19, %r2;
	div.s32 	%r21, %r1, %r4;
	rem.s32 	%r22, %r21, %r3;
	mad.lo.s32 	%r23, %r20, %r3, %r22;
	mul.lo.s32 	%r24, %r21, %r4;
	sub.s32 	%r25, %r1, %r24;
	mad.lo.s32 	%r26, %r17, %r15, %r25;
	mad.lo.s32 	%r27, %r23, %r4, %r26;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd1, %rd5, %rd6;
	cvta.to.global.u64 	%rd7, %rd3;
	mul.wide.s32 	%rd8, %r27, 4;
	add.s64 	%rd2, %rd7, %rd8;
	setp.eq.s32 	%p2, %r6, 0;
	@%p2 bra 	$L__BB6_3;

	ld.global.f32 	%f1, [%rd1];
	st.global.f32 	[%rd2], %f1;
	bra.uni 	$L__BB6_4;

$L__BB6_3:
	ld.global.f32 	%f2, [%rd2];
	st.global.f32 	[%rd1], %f2;

$L__BB6_4:
	ret;

}
	// .globl	copy_channel_kernel
.visible .entry copy_channel_kernel(
	.param .u32 copy_channel_kernel_param_0,
	.param .u64 copy_channel_kernel_param_1,
	.param .u64 copy_channel_kernel_param_2,
	.param .u32 copy_channel_kernel_param_3,
	.param .u32 copy_channel_kernel_param_4,
	.param .u32 copy_channel_kernel_param_5,
	.param .u32 copy_channel_kernel_param_6,
	.param .u32 copy_channel_kernel_param_7,
	.param .u32 copy_channel_kernel_param_8
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<32>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r2, [copy_channel_kernel_param_0];
	ld.param.u64 	%rd3, [copy_channel_kernel_param_1];
	ld.param.u64 	%rd4, [copy_channel_kernel_param_2];
	ld.param.u32 	%r3, [copy_channel_kernel_param_3];
	ld.param.u32 	%r4, [copy_channel_kernel_param_4];
	ld.param.u32 	%r5, [copy_channel_kernel_param_5];
	ld.param.u32 	%r6, [copy_channel_kernel_param_6];
	ld.param.u32 	%r7, [copy_channel_kernel_param_7];
	ld.param.u32 	%r8, [copy_channel_kernel_param_8];
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %nctaid.x;
	mov.u32 	%r11, %ctaid.y;
	mad.lo.s32 	%r12, %r11, %r10, %r9;
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %tid.x;
	mad.lo.s32 	%r1, %r12, %r13, %r14;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB7_4;

	cvta.to.global.u64 	%rd5, %rd4;
	div.s32 	%r15, %r2, %r3;
	div.s32 	%r16, %r15, %r5;
	div.s32 	%r17, %r16, %r6;
	mul.lo.s32 	%r18, %r6, %r5;
	mul.lo.s32 	%r19, %r18, %r17;
	div.s32 	%r20, %r1, %r19;
	div.s32 	%r21, %r1, %r5;
	div.s32 	%r22, %r21, %r6;
	rem.s32 	%r23, %r22, %r17;
	div.s32 	%r24, %r1, %r6;
	rem.s32 	%r25, %r24, %r5;
	mad.lo.s32 	%r26, %r20, %r4, %r7;
	add.s32 	%r27, %r26, %r23;
	mad.lo.s32 	%r28, %r27, %r5, %r25;
	mul.lo.s32 	%r29, %r24, %r6;
	sub.s32 	%r30, %r1, %r29;
	mad.lo.s32 	%r31, %r28, %r6, %r30;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd1, %rd5, %rd6;
	cvta.to.global.u64 	%rd7, %rd3;
	mul.wide.s32 	%rd8, %r31, 4;
	add.s64 	%rd2, %rd7, %rd8;
	setp.eq.s32 	%p2, %r8, 0;
	@%p2 bra 	$L__BB7_3;

	ld.global.f32 	%f1, [%rd1];
	st.global.f32 	[%rd2], %f1;
	bra.uni 	$L__BB7_4;

$L__BB7_3:
	ld.global.f32 	%f2, [%rd2];
	st.global.f32 	[%rd1], %f2;

$L__BB7_4:
	ret;

}
	// .globl	broadcast_kernel
.visible .entry broadcast_kernel(
	.param .u32 broadcast_kernel_param_0,
	.param .u64 broadcast_kernel_param_1,
	.param .u64 broadcast_kernel_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<7>;


	ld.param.u32 	%r2, [broadcast_kernel_param_0];
	ld.param.u64 	%rd1, [broadcast_kernel_param_1];
	ld.param.u64 	%rd2, [broadcast_kernel_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB8_2;

	cvta.to.global.u64 	%rd3, %rd1;
	ld.global.f32 	%f1, [%rd3];
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	st.global.f32 	[%rd6], %f1;

$L__BB8_2:
	ret;

}
	// .globl	broadcast_number_kernel
.visible .entry broadcast_number_kernel(
	.param .u32 broadcast_number_kernel_param_0,
	.param .u64 broadcast_number_kernel_param_1,
	.param .u64 broadcast_number_kernel_param_2,
	.param .u32 broadcast_number_kernel_param_3,
	.param .u32 broadcast_number_kernel_param_4,
	.param .u32 broadcast_number_kernel_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r5, [broadcast_number_kernel_param_0];
	ld.param.u64 	%rd1, [broadcast_number_kernel_param_1];
	ld.param.u64 	%rd2, [broadcast_number_kernel_param_2];
	ld.param.u32 	%r2, [broadcast_number_kernel_param_3];
	ld.param.u32 	%r3, [broadcast_number_kernel_param_4];
	ld.param.u32 	%r4, [broadcast_number_kernel_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %nctaid.x;
	mov.u32 	%r8, %ctaid.y;
	mad.lo.s32 	%r9, %r8, %r7, %r6;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r1, %r9, %r10, %r11;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB9_2;

	cvta.to.global.u64 	%rd3, %rd1;
	div.s32 	%r12, %r1, %r2;
	div.s32 	%r13, %r12, %r3;
	div.s32 	%r14, %r13, %r4;
	mul.wide.s32 	%rd4, %r14, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB9_2:
	ret;

}
	// .globl	broadcast_row_kernel
.visible .entry broadcast_row_kernel(
	.param .u32 broadcast_row_kernel_param_0,
	.param .u64 broadcast_row_kernel_param_1,
	.param .u64 broadcast_row_kernel_param_2,
	.param .u32 broadcast_row_kernel_param_3,
	.param .u32 broadcast_row_kernel_param_4,
	.param .u32 broadcast_row_kernel_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r5, [broadcast_row_kernel_param_0];
	ld.param.u64 	%rd1, [broadcast_row_kernel_param_1];
	ld.param.u64 	%rd2, [broadcast_row_kernel_param_2];
	ld.param.u32 	%r2, [broadcast_row_kernel_param_3];
	ld.param.u32 	%r3, [broadcast_row_kernel_param_4];
	ld.param.u32 	%r4, [broadcast_row_kernel_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %nctaid.x;
	mov.u32 	%r8, %ctaid.y;
	mad.lo.s32 	%r9, %r8, %r7, %r6;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r1, %r9, %r10, %r11;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB10_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.lo.s32 	%r12, %r3, %r2;
	mul.lo.s32 	%r13, %r12, %r4;
	rem.s32 	%r14, %r1, %r13;
	mul.wide.s32 	%rd4, %r14, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB10_2:
	ret;

}
	// .globl	broadcast_plus_kernel
.visible .entry broadcast_plus_kernel(
	.param .u32 broadcast_plus_kernel_param_0,
	.param .u64 broadcast_plus_kernel_param_1,
	.param .u64 broadcast_plus_kernel_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<7>;


	ld.param.u32 	%r2, [broadcast_plus_kernel_param_0];
	ld.param.u64 	%rd1, [broadcast_plus_kernel_param_1];
	ld.param.u64 	%rd2, [broadcast_plus_kernel_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB11_2;

	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	ld.global.f32 	%f2, [%rd3];
	add.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd6], %f3;

$L__BB11_2:
	ret;

}
	// .globl	broadcast_number_plus_kernel
.visible .entry broadcast_number_plus_kernel(
	.param .u32 broadcast_number_plus_kernel_param_0,
	.param .u64 broadcast_number_plus_kernel_param_1,
	.param .u64 broadcast_number_plus_kernel_param_2,
	.param .u32 broadcast_number_plus_kernel_param_3,
	.param .u32 broadcast_number_plus_kernel_param_4,
	.param .u32 broadcast_number_plus_kernel_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r5, [broadcast_number_plus_kernel_param_0];
	ld.param.u64 	%rd1, [broadcast_number_plus_kernel_param_1];
	ld.param.u64 	%rd2, [broadcast_number_plus_kernel_param_2];
	ld.param.u32 	%r2, [broadcast_number_plus_kernel_param_3];
	ld.param.u32 	%r3, [broadcast_number_plus_kernel_param_4];
	ld.param.u32 	%r4, [broadcast_number_plus_kernel_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %nctaid.x;
	mov.u32 	%r8, %ctaid.y;
	mad.lo.s32 	%r9, %r8, %r7, %r6;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r1, %r9, %r10, %r11;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB12_2;

	cvta.to.global.u64 	%rd3, %rd1;
	div.s32 	%r12, %r1, %r2;
	div.s32 	%r13, %r12, %r3;
	div.s32 	%r14, %r13, %r4;
	mul.wide.s32 	%rd4, %r14, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd5];
	add.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd8], %f3;

$L__BB12_2:
	ret;

}
	// .globl	broadcast_row_plus_kernel
.visible .entry broadcast_row_plus_kernel(
	.param .u32 broadcast_row_plus_kernel_param_0,
	.param .u64 broadcast_row_plus_kernel_param_1,
	.param .u64 broadcast_row_plus_kernel_param_2,
	.param .u32 broadcast_row_plus_kernel_param_3,
	.param .u32 broadcast_row_plus_kernel_param_4,
	.param .u32 broadcast_row_plus_kernel_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r5, [broadcast_row_plus_kernel_param_0];
	ld.param.u64 	%rd1, [broadcast_row_plus_kernel_param_1];
	ld.param.u64 	%rd2, [broadcast_row_plus_kernel_param_2];
	ld.param.u32 	%r2, [broadcast_row_plus_kernel_param_3];
	ld.param.u32 	%r3, [broadcast_row_plus_kernel_param_4];
	ld.param.u32 	%r4, [broadcast_row_plus_kernel_param_5];
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %nctaid.x;
	mov.u32 	%r8, %ctaid.y;
	mad.lo.s32 	%r9, %r8, %r7, %r6;
	mov.u32 	%r10, %ntid.x;
	mov.u32 	%r11, %tid.x;
	mad.lo.s32 	%r1, %r9, %r10, %r11;
	setp.ge.s32 	%p1, %r1, %r5;
	@%p1 bra 	$L__BB13_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.lo.s32 	%r12, %r3, %r2;
	mul.lo.s32 	%r13, %r12, %r4;
	rem.s32 	%r14, %r1, %r13;
	mul.wide.s32 	%rd4, %r14, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd5];
	add.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd8], %f3;

$L__BB13_2:
	ret;

}
	// .globl	add_kernel
.visible .entry add_kernel(
	.param .u32 add_kernel_param_0,
	.param .u64 add_kernel_param_1,
	.param .u64 add_kernel_param_2,
	.param .u64 add_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [add_kernel_param_0];
	ld.param.u64 	%rd1, [add_kernel_param_1];
	ld.param.u64 	%rd2, [add_kernel_param_2];
	ld.param.u64 	%rd3, [add_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB14_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB14_2:
	ret;

}
	// .globl	add_axis_kernel
.visible .entry add_axis_kernel(
	.param .u32 add_axis_kernel_param_0,
	.param .u64 add_axis_kernel_param_1,
	.param .u64 add_axis_kernel_param_2,
	.param .u64 add_axis_kernel_param_3,
	.param .u32 add_axis_kernel_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<12>;


	ld.param.u32 	%r3, [add_axis_kernel_param_0];
	ld.param.u64 	%rd1, [add_axis_kernel_param_1];
	ld.param.u64 	%rd2, [add_axis_kernel_param_2];
	ld.param.u64 	%rd3, [add_axis_kernel_param_3];
	ld.param.u32 	%r2, [add_axis_kernel_param_4];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %nctaid.x;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r6, %r5, %r4;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB15_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	div.s32 	%r10, %r1, %r2;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r10, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	st.global.f32 	[%rd11], %f3;

$L__BB15_2:
	ret;

}
	// .globl	add_axis_kernel2
.visible .entry add_axis_kernel2(
	.param .u32 add_axis_kernel2_param_0,
	.param .u64 add_axis_kernel2_param_1,
	.param .u64 add_axis_kernel2_param_2,
	.param .u64 add_axis_kernel2_param_3,
	.param .u32 add_axis_kernel2_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<12>;


	ld.param.u32 	%r3, [add_axis_kernel2_param_0];
	ld.param.u64 	%rd1, [add_axis_kernel2_param_1];
	ld.param.u64 	%rd2, [add_axis_kernel2_param_2];
	ld.param.u64 	%rd3, [add_axis_kernel2_param_3];
	ld.param.u32 	%r2, [add_axis_kernel2_param_4];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %nctaid.x;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r6, %r5, %r4;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB16_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	rem.s32 	%r10, %r1, %r2;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r10, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	st.global.f32 	[%rd11], %f3;

$L__BB16_2:
	ret;

}
	// .globl	add_axis_kernel3
.visible .entry add_axis_kernel3(
	.param .u32 add_axis_kernel3_param_0,
	.param .u64 add_axis_kernel3_param_1,
	.param .u64 add_axis_kernel3_param_2,
	.param .u64 add_axis_kernel3_param_3,
	.param .u32 add_axis_kernel3_param_4,
	.param .u32 add_axis_kernel3_param_5,
	.param .u32 add_axis_kernel3_param_6,
	.param .u32 add_axis_kernel3_param_7,
	.param .u32 add_axis_kernel3_param_8
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<12>;


	ld.param.u32 	%r10, [add_axis_kernel3_param_0];
	ld.param.u64 	%rd1, [add_axis_kernel3_param_1];
	ld.param.u64 	%rd2, [add_axis_kernel3_param_2];
	ld.param.u64 	%rd3, [add_axis_kernel3_param_3];
	ld.param.u32 	%r6, [add_axis_kernel3_param_5];
	ld.param.u32 	%r7, [add_axis_kernel3_param_6];
	ld.param.u32 	%r8, [add_axis_kernel3_param_7];
	ld.param.u32 	%r9, [add_axis_kernel3_param_8];
	mov.u32 	%r11, %nctaid.x;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %ctaid.x;
	mad.lo.s32 	%r14, %r12, %r11, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r1, %r10;
	@%p1 bra 	$L__BB17_6;

	mul.lo.s32 	%r18, %r7, %r6;
	mul.lo.s32 	%r2, %r18, %r8;
	mov.u32 	%r22, 0;
	setp.eq.s32 	%p2, %r9, 0;
	@%p2 bra 	$L__BB17_4;

	setp.ne.s32 	%p3, %r9, 1;
	@%p3 bra 	$L__BB17_5;

	div.s32 	%r19, %r1, %r2;
	mul.lo.s32 	%r20, %r8, %r7;
	rem.s32 	%r21, %r1, %r20;
	mad.lo.s32 	%r22, %r19, %r20, %r21;
	bra.uni 	$L__BB17_5;

$L__BB17_4:
	rem.s32 	%r22, %r1, %r2;

$L__BB17_5:
	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r22, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	st.global.f32 	[%rd11], %f3;

$L__BB17_6:
	ret;

}
	// .globl	add_axis_back_kernel
.visible .entry add_axis_back_kernel(
	.param .u32 add_axis_back_kernel_param_0,
	.param .u64 add_axis_back_kernel_param_1,
	.param .u64 add_axis_back_kernel_param_2,
	.param .u32 add_axis_back_kernel_param_3,
	.param .u32 add_axis_back_kernel_param_4,
	.param .u32 add_axis_back_kernel_param_5,
	.param .u32 add_axis_back_kernel_param_6,
	.param .u32 add_axis_back_kernel_param_7
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<49>;
	.reg .b32 	%r<74>;
	.reg .b64 	%rd<23>;


	ld.param.u32 	%r40, [add_axis_back_kernel_param_0];
	ld.param.u64 	%rd4, [add_axis_back_kernel_param_1];
	ld.param.u64 	%rd5, [add_axis_back_kernel_param_2];
	ld.param.u32 	%r35, [add_axis_back_kernel_param_3];
	ld.param.u32 	%r36, [add_axis_back_kernel_param_4];
	ld.param.u32 	%r37, [add_axis_back_kernel_param_5];
	ld.param.u32 	%r38, [add_axis_back_kernel_param_6];
	ld.param.u32 	%r39, [add_axis_back_kernel_param_7];
	cvta.to.global.u64 	%rd1, %rd5;
	mov.u32 	%r41, %nctaid.x;
	mov.u32 	%r42, %ctaid.y;
	mov.u32 	%r43, %ctaid.x;
	mad.lo.s32 	%r44, %r42, %r41, %r43;
	mov.u32 	%r45, %ntid.x;
	mul.lo.s32 	%r1, %r44, %r45;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r1, %r2;
	setp.ge.s32 	%p1, %r3, %r40;
	mov.f32 	%f48, 0f00000000;
	@%p1 bra 	$L__BB18_18;

	setp.eq.s32 	%p2, %r39, 0;
	@%p2 bra 	$L__BB18_10;

	setp.ne.s32 	%p3, %r39, 1;
	@%p3 bra 	$L__BB18_17;

	div.s32 	%r46, %r3, %r37;
	div.s32 	%r4, %r46, %r38;
	mul.lo.s32 	%r5, %r38, %r37;
	rem.s32 	%r6, %r3, %r5;
	setp.lt.s32 	%p4, %r36, 1;
	@%p4 bra 	$L__BB18_17;

	add.s32 	%r48, %r36, -1;
	and.b32  	%r68, %r36, 3;
	setp.lt.u32 	%p5, %r48, 3;
	mov.f32 	%f48, 0f00000000;
	mov.u32 	%r66, 0;
	@%p5 bra 	$L__BB18_7;

	shl.b32 	%r8, %r5, 2;
	mul.lo.s32 	%r50, %r4, %r38;
	mul.lo.s32 	%r51, %r50, %r37;
	mad.lo.s32 	%r64, %r51, %r36, %r6;
	sub.s32 	%r10, %r68, %r36;
	mul.wide.s32 	%rd2, %r5, 4;

$L__BB18_6:
	mul.wide.s32 	%rd6, %r64, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.f32 	%f19, [%rd7];
	add.f32 	%f20, %f48, %f19;
	add.s64 	%rd8, %rd7, %rd2;
	ld.global.f32 	%f21, [%rd8];
	add.f32 	%f22, %f20, %f21;
	add.s64 	%rd9, %rd8, %rd2;
	ld.global.f32 	%f23, [%rd9];
	add.f32 	%f24, %f22, %f23;
	add.s64 	%rd10, %rd9, %rd2;
	ld.global.f32 	%f25, [%rd10];
	add.f32 	%f48, %f24, %f25;
	add.s32 	%r64, %r64, %r8;
	add.s32 	%r66, %r66, 4;
	add.s32 	%r52, %r10, %r66;
	setp.ne.s32 	%p6, %r52, 0;
	@%p6 bra 	$L__BB18_6;

$L__BB18_7:
	setp.eq.s32 	%p7, %r68, 0;
	@%p7 bra 	$L__BB18_17;

	mad.lo.s32 	%r53, %r4, %r36, %r66;
	mad.lo.s32 	%r67, %r5, %r53, %r6;

$L__BB18_9:
	.pragma "nounroll";
	mul.wide.s32 	%rd11, %r67, 4;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.f32 	%f26, [%rd12];
	add.f32 	%f48, %f48, %f26;
	add.s32 	%r67, %r67, %r5;
	add.s32 	%r68, %r68, -1;
	setp.eq.s32 	%p8, %r68, 0;
	@%p8 bra 	$L__BB18_17;
	bra.uni 	$L__BB18_9;

$L__BB18_10:
	setp.lt.s32 	%p9, %r35, 1;
	@%p9 bra 	$L__BB18_17;

	add.s32 	%r55, %r35, -1;
	and.b32  	%r73, %r35, 3;
	setp.lt.u32 	%p10, %r55, 3;
	mov.f32 	%f48, 0f00000000;
	mov.u32 	%r71, 0;
	@%p10 bra 	$L__BB18_14;

	mul.lo.s32 	%r57, %r38, %r37;
	mul.lo.s32 	%r58, %r57, %r36;
	shl.b32 	%r22, %r58, 2;
	sub.s32 	%r23, %r73, %r35;
	mul.wide.s32 	%rd3, %r58, 4;
	mov.u32 	%r69, %r3;

$L__BB18_13:
	mul.wide.s32 	%rd13, %r69, 4;
	add.s64 	%rd14, %rd1, %rd13;
	ld.global.f32 	%f31, [%rd14];
	add.f32 	%f32, %f48, %f31;
	add.s64 	%rd15, %rd14, %rd3;
	ld.global.f32 	%f33, [%rd15];
	add.f32 	%f34, %f32, %f33;
	add.s64 	%rd16, %rd15, %rd3;
	ld.global.f32 	%f35, [%rd16];
	add.f32 	%f36, %f34, %f35;
	add.s64 	%rd17, %rd16, %rd3;
	ld.global.f32 	%f37, [%rd17];
	add.f32 	%f48, %f36, %f37;
	add.s32 	%r69, %r69, %r22;
	add.s32 	%r71, %r71, 4;
	add.s32 	%r59, %r23, %r71;
	setp.ne.s32 	%p11, %r59, 0;
	@%p11 bra 	$L__BB18_13;

$L__BB18_14:
	setp.eq.s32 	%p12, %r73, 0;
	@%p12 bra 	$L__BB18_17;

	mul.lo.s32 	%r60, %r71, %r38;
	mul.lo.s32 	%r61, %r60, %r37;
	mad.lo.s32 	%r62, %r61, %r36, %r2;
	add.s32 	%r72, %r62, %r1;
	mul.lo.s32 	%r63, %r38, %r37;
	mul.lo.s32 	%r30, %r63, %r36;

$L__BB18_16:
	.pragma "nounroll";
	mul.wide.s32 	%rd18, %r72, 4;
	add.s64 	%rd19, %rd1, %rd18;
	ld.global.f32 	%f38, [%rd19];
	add.f32 	%f48, %f48, %f38;
	add.s32 	%r72, %r72, %r30;
	add.s32 	%r73, %r73, -1;
	setp.ne.s32 	%p13, %r73, 0;
	@%p13 bra 	$L__BB18_16;

$L__BB18_17:
	cvta.to.global.u64 	%rd20, %rd4;
	mul.wide.s32 	%rd21, %r3, 4;
	add.s64 	%rd22, %rd20, %rd21;
	st.global.f32 	[%rd22], %f48;

$L__BB18_18:
	ret;

}
	// .globl	mul_axis_kernel
.visible .entry mul_axis_kernel(
	.param .u32 mul_axis_kernel_param_0,
	.param .u64 mul_axis_kernel_param_1,
	.param .u64 mul_axis_kernel_param_2,
	.param .u64 mul_axis_kernel_param_3,
	.param .u32 mul_axis_kernel_param_4,
	.param .u32 mul_axis_kernel_param_5,
	.param .u32 mul_axis_kernel_param_6,
	.param .u32 mul_axis_kernel_param_7,
	.param .u32 mul_axis_kernel_param_8
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<12>;


	ld.param.u32 	%r10, [mul_axis_kernel_param_0];
	ld.param.u64 	%rd1, [mul_axis_kernel_param_1];
	ld.param.u64 	%rd2, [mul_axis_kernel_param_2];
	ld.param.u64 	%rd3, [mul_axis_kernel_param_3];
	ld.param.u32 	%r6, [mul_axis_kernel_param_5];
	ld.param.u32 	%r7, [mul_axis_kernel_param_6];
	ld.param.u32 	%r8, [mul_axis_kernel_param_7];
	ld.param.u32 	%r9, [mul_axis_kernel_param_8];
	mov.u32 	%r11, %nctaid.x;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %ctaid.x;
	mad.lo.s32 	%r14, %r12, %r11, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r1, %r10;
	@%p1 bra 	$L__BB19_6;

	mul.lo.s32 	%r18, %r7, %r6;
	mul.lo.s32 	%r2, %r18, %r8;
	mov.u32 	%r22, 0;
	setp.eq.s32 	%p2, %r9, 0;
	@%p2 bra 	$L__BB19_4;

	setp.ne.s32 	%p3, %r9, 1;
	@%p3 bra 	$L__BB19_5;

	div.s32 	%r19, %r1, %r2;
	mul.lo.s32 	%r20, %r8, %r7;
	rem.s32 	%r21, %r1, %r20;
	mad.lo.s32 	%r22, %r19, %r20, %r21;
	bra.uni 	$L__BB19_5;

$L__BB19_4:
	rem.s32 	%r22, %r1, %r2;

$L__BB19_5:
	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r22, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd6];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	st.global.f32 	[%rd11], %f3;

$L__BB19_6:
	ret;

}
	// .globl	mul_axis_back_left_kernel
.visible .entry mul_axis_back_left_kernel(
	.param .u32 mul_axis_back_left_kernel_param_0,
	.param .u64 mul_axis_back_left_kernel_param_1,
	.param .u64 mul_axis_back_left_kernel_param_2,
	.param .u64 mul_axis_back_left_kernel_param_3,
	.param .u32 mul_axis_back_left_kernel_param_4,
	.param .u32 mul_axis_back_left_kernel_param_5,
	.param .u32 mul_axis_back_left_kernel_param_6,
	.param .u32 mul_axis_back_left_kernel_param_7,
	.param .u32 mul_axis_back_left_kernel_param_8
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<23>;
	.reg .b64 	%rd<12>;


	ld.param.u32 	%r10, [mul_axis_back_left_kernel_param_0];
	ld.param.u64 	%rd1, [mul_axis_back_left_kernel_param_1];
	ld.param.u64 	%rd2, [mul_axis_back_left_kernel_param_2];
	ld.param.u64 	%rd3, [mul_axis_back_left_kernel_param_3];
	ld.param.u32 	%r6, [mul_axis_back_left_kernel_param_5];
	ld.param.u32 	%r7, [mul_axis_back_left_kernel_param_6];
	ld.param.u32 	%r8, [mul_axis_back_left_kernel_param_7];
	ld.param.u32 	%r9, [mul_axis_back_left_kernel_param_8];
	mov.u32 	%r11, %nctaid.x;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %ctaid.x;
	mad.lo.s32 	%r14, %r12, %r11, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r1, %r14, %r15, %r16;
	setp.ge.s32 	%p1, %r1, %r10;
	@%p1 bra 	$L__BB20_6;

	mul.lo.s32 	%r18, %r7, %r6;
	mul.lo.s32 	%r2, %r18, %r8;
	mov.u32 	%r22, 0;
	setp.eq.s32 	%p2, %r9, 0;
	@%p2 bra 	$L__BB20_4;

	setp.ne.s32 	%p3, %r9, 1;
	@%p3 bra 	$L__BB20_5;

	div.s32 	%r19, %r1, %r2;
	mul.lo.s32 	%r20, %r8, %r7;
	rem.s32 	%r21, %r1, %r20;
	mad.lo.s32 	%r22, %r19, %r20, %r21;
	bra.uni 	$L__BB20_5;

$L__BB20_4:
	rem.s32 	%r22, %r1, %r2;

$L__BB20_5:
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd1;
	mul.wide.s32 	%rd8, %r22, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd6];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	st.global.f32 	[%rd11], %f3;

$L__BB20_6:
	ret;

}
	// .globl	mul_axis_back_right_kernel
.visible .entry mul_axis_back_right_kernel(
	.param .u32 mul_axis_back_right_kernel_param_0,
	.param .u64 mul_axis_back_right_kernel_param_1,
	.param .u64 mul_axis_back_right_kernel_param_2,
	.param .u64 mul_axis_back_right_kernel_param_3,
	.param .u32 mul_axis_back_right_kernel_param_4,
	.param .u32 mul_axis_back_right_kernel_param_5,
	.param .u32 mul_axis_back_right_kernel_param_6,
	.param .u32 mul_axis_back_right_kernel_param_7,
	.param .u32 mul_axis_back_right_kernel_param_8
)
{
	.reg .pred 	%p<14>;
	.reg .f32 	%f<59>;
	.reg .b32 	%r<74>;
	.reg .b64 	%rd<35>;


	ld.param.u32 	%r40, [mul_axis_back_right_kernel_param_0];
	ld.param.u64 	%rd6, [mul_axis_back_right_kernel_param_1];
	ld.param.u64 	%rd7, [mul_axis_back_right_kernel_param_2];
	ld.param.u64 	%rd5, [mul_axis_back_right_kernel_param_3];
	ld.param.u32 	%r35, [mul_axis_back_right_kernel_param_4];
	ld.param.u32 	%r36, [mul_axis_back_right_kernel_param_5];
	ld.param.u32 	%r37, [mul_axis_back_right_kernel_param_6];
	ld.param.u32 	%r38, [mul_axis_back_right_kernel_param_7];
	ld.param.u32 	%r39, [mul_axis_back_right_kernel_param_8];
	cvta.to.global.u64 	%rd1, %rd7;
	cvta.to.global.u64 	%rd2, %rd6;
	mov.u32 	%r41, %nctaid.x;
	mov.u32 	%r42, %ctaid.y;
	mov.u32 	%r43, %ctaid.x;
	mad.lo.s32 	%r44, %r42, %r41, %r43;
	mov.u32 	%r45, %ntid.x;
	mul.lo.s32 	%r1, %r44, %r45;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r1, %r2;
	setp.ge.s32 	%p1, %r3, %r40;
	mov.f32 	%f58, 0f00000000;
	@%p1 bra 	$L__BB21_18;

	setp.eq.s32 	%p2, %r39, 0;
	@%p2 bra 	$L__BB21_10;

	setp.ne.s32 	%p3, %r39, 1;
	@%p3 bra 	$L__BB21_17;

	div.s32 	%r46, %r3, %r37;
	div.s32 	%r4, %r46, %r38;
	mul.lo.s32 	%r5, %r38, %r37;
	rem.s32 	%r6, %r3, %r5;
	setp.lt.s32 	%p4, %r36, 1;
	@%p4 bra 	$L__BB21_17;

	add.s32 	%r48, %r36, -1;
	and.b32  	%r68, %r36, 3;
	setp.lt.u32 	%p5, %r48, 3;
	mov.f32 	%f58, 0f00000000;
	mov.u32 	%r66, 0;
	@%p5 bra 	$L__BB21_7;

	shl.b32 	%r8, %r5, 2;
	mul.lo.s32 	%r50, %r4, %r38;
	mul.lo.s32 	%r51, %r50, %r37;
	mad.lo.s32 	%r64, %r51, %r36, %r6;
	sub.s32 	%r10, %r68, %r36;
	mul.wide.s32 	%rd3, %r5, 4;

$L__BB21_6:
	mul.wide.s32 	%rd8, %r64, 4;
	add.s64 	%rd9, %rd2, %rd8;
	add.s64 	%rd10, %rd1, %rd8;
	ld.global.f32 	%f19, [%rd10];
	ld.global.f32 	%f20, [%rd9];
	fma.rn.f32 	%f21, %f20, %f19, %f58;
	add.s64 	%rd11, %rd9, %rd3;
	add.s64 	%rd12, %rd10, %rd3;
	ld.global.f32 	%f22, [%rd12];
	ld.global.f32 	%f23, [%rd11];
	fma.rn.f32 	%f24, %f23, %f22, %f21;
	add.s64 	%rd13, %rd11, %rd3;
	add.s64 	%rd14, %rd12, %rd3;
	ld.global.f32 	%f25, [%rd14];
	ld.global.f32 	%f26, [%rd13];
	fma.rn.f32 	%f27, %f26, %f25, %f24;
	add.s64 	%rd15, %rd13, %rd3;
	add.s64 	%rd16, %rd14, %rd3;
	ld.global.f32 	%f28, [%rd16];
	ld.global.f32 	%f29, [%rd15];
	fma.rn.f32 	%f58, %f29, %f28, %f27;
	add.s32 	%r64, %r64, %r8;
	add.s32 	%r66, %r66, 4;
	add.s32 	%r52, %r10, %r66;
	setp.ne.s32 	%p6, %r52, 0;
	@%p6 bra 	$L__BB21_6;

$L__BB21_7:
	setp.eq.s32 	%p7, %r68, 0;
	@%p7 bra 	$L__BB21_17;

	mad.lo.s32 	%r53, %r4, %r36, %r66;
	mad.lo.s32 	%r67, %r5, %r53, %r6;

$L__BB21_9:
	.pragma "nounroll";
	mul.wide.s32 	%rd17, %r67, 4;
	add.s64 	%rd18, %rd2, %rd17;
	add.s64 	%rd19, %rd1, %rd17;
	ld.global.f32 	%f30, [%rd19];
	ld.global.f32 	%f31, [%rd18];
	fma.rn.f32 	%f58, %f31, %f30, %f58;
	add.s32 	%r67, %r67, %r5;
	add.s32 	%r68, %r68, -1;
	setp.eq.s32 	%p8, %r68, 0;
	@%p8 bra 	$L__BB21_17;
	bra.uni 	$L__BB21_9;

$L__BB21_10:
	setp.lt.s32 	%p9, %r35, 1;
	@%p9 bra 	$L__BB21_17;

	add.s32 	%r55, %r35, -1;
	and.b32  	%r73, %r35, 3;
	setp.lt.u32 	%p10, %r55, 3;
	mov.f32 	%f58, 0f00000000;
	mov.u32 	%r71, 0;
	@%p10 bra 	$L__BB21_14;

	mul.lo.s32 	%r57, %r38, %r37;
	mul.lo.s32 	%r58, %r57, %r36;
	shl.b32 	%r22, %r58, 2;
	sub.s32 	%r23, %r73, %r35;
	mul.wide.s32 	%rd4, %r58, 4;
	mov.u32 	%r69, %r3;

$L__BB21_13:
	mul.wide.s32 	%rd20, %r69, 4;
	add.s64 	%rd21, %rd2, %rd20;
	add.s64 	%rd22, %rd1, %rd20;
	ld.global.f32 	%f36, [%rd22];
	ld.global.f32 	%f37, [%rd21];
	fma.rn.f32 	%f38, %f37, %f36, %f58;
	add.s64 	%rd23, %rd21, %rd4;
	add.s64 	%rd24, %rd22, %rd4;
	ld.global.f32 	%f39, [%rd24];
	ld.global.f32 	%f40, [%rd23];
	fma.rn.f32 	%f41, %f40, %f39, %f38;
	add.s64 	%rd25, %rd23, %rd4;
	add.s64 	%rd26, %rd24, %rd4;
	ld.global.f32 	%f42, [%rd26];
	ld.global.f32 	%f43, [%rd25];
	fma.rn.f32 	%f44, %f43, %f42, %f41;
	add.s64 	%rd27, %rd25, %rd4;
	add.s64 	%rd28, %rd26, %rd4;
	ld.global.f32 	%f45, [%rd28];
	ld.global.f32 	%f46, [%rd27];
	fma.rn.f32 	%f58, %f46, %f45, %f44;
	add.s32 	%r69, %r69, %r22;
	add.s32 	%r71, %r71, 4;
	add.s32 	%r59, %r23, %r71;
	setp.ne.s32 	%p11, %r59, 0;
	@%p11 bra 	$L__BB21_13;

$L__BB21_14:
	setp.eq.s32 	%p12, %r73, 0;
	@%p12 bra 	$L__BB21_17;

	mul.lo.s32 	%r60, %r71, %r38;
	mul.lo.s32 	%r61, %r60, %r37;
	mad.lo.s32 	%r62, %r61, %r36, %r2;
	add.s32 	%r72, %r62, %r1;
	mul.lo.s32 	%r63, %r38, %r37;
	mul.lo.s32 	%r30, %r63, %r36;

$L__BB21_16:
	.pragma "nounroll";
	mul.wide.s32 	%rd29, %r72, 4;
	add.s64 	%rd30, %rd2, %rd29;
	add.s64 	%rd31, %rd1, %rd29;
	ld.global.f32 	%f47, [%rd31];
	ld.global.f32 	%f48, [%rd30];
	fma.rn.f32 	%f58, %f48, %f47, %f58;
	add.s32 	%r72, %r72, %r30;
	add.s32 	%r73, %r73, -1;
	setp.ne.s32 	%p13, %r73, 0;
	@%p13 bra 	$L__BB21_16;

$L__BB21_17:
	cvta.to.global.u64 	%rd32, %rd5;
	mul.wide.s32 	%rd33, %r3, 4;
	add.s64 	%rd34, %rd32, %rd33;
	st.global.f32 	[%rd34], %f58;

$L__BB21_18:
	ret;

}
	// .globl	expand_kernel
.visible .entry expand_kernel(
	.param .u32 expand_kernel_param_0,
	.param .u64 expand_kernel_param_1,
	.param .u64 expand_kernel_param_2,
	.param .u32 expand_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r3, [expand_kernel_param_0];
	ld.param.u64 	%rd1, [expand_kernel_param_1];
	ld.param.u64 	%rd2, [expand_kernel_param_2];
	ld.param.u32 	%r2, [expand_kernel_param_3];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %nctaid.x;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r6, %r5, %r4;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB22_2;

	cvta.to.global.u64 	%rd3, %rd1;
	rem.s32 	%r10, %r1, %r2;
	mul.wide.s32 	%rd4, %r10, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB22_2:
	ret;

}
	// .globl	sum_kernel
.visible .entry sum_kernel(
	.param .u32 sum_kernel_param_0,
	.param .u64 sum_kernel_param_1,
	.param .u64 sum_kernel_param_2
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r10, [sum_kernel_param_0];
	ld.param.u64 	%rd8, [sum_kernel_param_1];
	ld.param.u64 	%rd9, [sum_kernel_param_2];
	cvta.to.global.u64 	%rd1, %rd9;
	cvta.to.global.u64 	%rd2, %rd8;
	mov.u32 	%r11, %nctaid.x;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %ctaid.x;
	mad.lo.s32 	%r14, %r12, %r11, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.gt.s32 	%p1, %r17, 0;
	setp.lt.s32 	%p2, %r10, 1;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB23_7;

	add.s32 	%r19, %r10, -1;
	and.b32  	%r24, %r10, 3;
	setp.lt.u32 	%p4, %r19, 3;
	mov.u32 	%r23, 0;
	@%p4 bra 	$L__BB23_4;

	sub.s32 	%r22, %r10, %r24;
	ld.global.f32 	%f15, [%rd1];
	mov.u64 	%rd11, %rd2;

$L__BB23_3:
	ld.global.f32 	%f7, [%rd11];
	add.f32 	%f8, %f7, %f15;
	st.global.f32 	[%rd1], %f8;
	ld.global.f32 	%f9, [%rd11+4];
	add.f32 	%f10, %f9, %f8;
	st.global.f32 	[%rd1], %f10;
	ld.global.f32 	%f11, [%rd11+8];
	add.f32 	%f12, %f11, %f10;
	st.global.f32 	[%rd1], %f12;
	ld.global.f32 	%f13, [%rd11+12];
	add.f32 	%f15, %f13, %f12;
	st.global.f32 	[%rd1], %f15;
	add.s32 	%r23, %r23, 4;
	add.s64 	%rd11, %rd11, 16;
	add.s32 	%r22, %r22, -4;
	setp.ne.s32 	%p5, %r22, 0;
	@%p5 bra 	$L__BB23_3;

$L__BB23_4:
	setp.eq.s32 	%p6, %r24, 0;
	@%p6 bra 	$L__BB23_7;

	ld.global.f32 	%f16, [%rd1];
	mul.wide.s32 	%rd10, %r23, 4;
	add.s64 	%rd12, %rd2, %rd10;

$L__BB23_6:
	.pragma "nounroll";
	ld.global.f32 	%f14, [%rd12];
	add.f32 	%f16, %f14, %f16;
	st.global.f32 	[%rd1], %f16;
	add.s64 	%rd12, %rd12, 4;
	add.s32 	%r24, %r24, -1;
	setp.ne.s32 	%p7, %r24, 0;
	@%p7 bra 	$L__BB23_6;

$L__BB23_7:
	ret;

}
	// .globl	sum_channel_kernel
.visible .entry sum_channel_kernel(
	.param .u32 sum_channel_kernel_param_0,
	.param .u64 sum_channel_kernel_param_1,
	.param .u64 sum_channel_kernel_param_2,
	.param .u32 sum_channel_kernel_param_3,
	.param .u32 sum_channel_kernel_param_4,
	.param .u32 sum_channel_kernel_param_5
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<17>;
	.reg .b32 	%r<32>;
	.reg .b64 	%rd<18>;


	ld.param.u32 	%r16, [sum_channel_kernel_param_0];
	ld.param.u64 	%rd10, [sum_channel_kernel_param_1];
	ld.param.u64 	%rd9, [sum_channel_kernel_param_2];
	ld.param.u32 	%r13, [sum_channel_kernel_param_3];
	ld.param.u32 	%r14, [sum_channel_kernel_param_4];
	ld.param.u32 	%r15, [sum_channel_kernel_param_5];
	cvta.to.global.u64 	%rd1, %rd10;
	mov.u32 	%r17, %nctaid.x;
	mov.u32 	%r18, %ctaid.y;
	mov.u32 	%r19, %ctaid.x;
	mad.lo.s32 	%r20, %r18, %r17, %r19;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %tid.x;
	mad.lo.s32 	%r1, %r20, %r21, %r22;
	setp.ge.s32 	%p1, %r1, %r16;
	@%p1 bra 	$L__BB24_8;

	mul.lo.s32 	%r23, %r14, %r13;
	mul.lo.s32 	%r2, %r23, %r15;
	setp.lt.s32 	%p2, %r2, 1;
	@%p2 bra 	$L__BB24_8;

	mul.lo.s32 	%r3, %r2, %r1;
	cvta.to.global.u64 	%rd11, %rd9;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd2, %rd11, %rd12;
	and.b32  	%r31, %r2, 3;
	add.s32 	%r25, %r2, -1;
	setp.lt.u32 	%p3, %r25, 3;
	mov.u32 	%r30, 0;
	@%p3 bra 	$L__BB24_5;

	sub.s32 	%r29, %r2, %r31;
	ld.global.f32 	%f15, [%rd2];
	mul.wide.s32 	%rd13, %r3, 4;
	add.s64 	%rd14, %rd1, %rd13;
	add.s64 	%rd16, %rd14, 8;

$L__BB24_4:
	ld.global.f32 	%f7, [%rd16+-8];
	add.f32 	%f8, %f7, %f15;
	st.global.f32 	[%rd2], %f8;
	ld.global.f32 	%f9, [%rd16+-4];
	add.f32 	%f10, %f9, %f8;
	st.global.f32 	[%rd2], %f10;
	ld.global.f32 	%f11, [%rd16];
	add.f32 	%f12, %f11, %f10;
	st.global.f32 	[%rd2], %f12;
	ld.global.f32 	%f13, [%rd16+4];
	add.f32 	%f15, %f13, %f12;
	st.global.f32 	[%rd2], %f15;
	add.s32 	%r30, %r30, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r29, %r29, -4;
	setp.ne.s32 	%p4, %r29, 0;
	@%p4 bra 	$L__BB24_4;

$L__BB24_5:
	setp.eq.s32 	%p5, %r31, 0;
	@%p5 bra 	$L__BB24_8;

	ld.global.f32 	%f16, [%rd2];
	add.s32 	%r27, %r30, %r3;
	mul.wide.s32 	%rd15, %r27, 4;
	add.s64 	%rd17, %rd1, %rd15;

$L__BB24_7:
	.pragma "nounroll";
	ld.global.f32 	%f14, [%rd17];
	add.f32 	%f16, %f14, %f16;
	st.global.f32 	[%rd2], %f16;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p6, %r31, 0;
	@%p6 bra 	$L__BB24_7;

$L__BB24_8:
	ret;

}
	// .globl	sum_height_kernel
.visible .entry sum_height_kernel(
	.param .u32 sum_height_kernel_param_0,
	.param .u64 sum_height_kernel_param_1,
	.param .u64 sum_height_kernel_param_2,
	.param .u32 sum_height_kernel_param_3,
	.param .u32 sum_height_kernel_param_4,
	.param .u32 sum_height_kernel_param_5
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<19>;
	.reg .b32 	%r<31>;
	.reg .b64 	%rd<18>;


	ld.param.u32 	%r15, [sum_height_kernel_param_0];
	ld.param.u64 	%rd10, [sum_height_kernel_param_1];
	ld.param.u64 	%rd9, [sum_height_kernel_param_2];
	ld.param.u32 	%r13, [sum_height_kernel_param_4];
	ld.param.u32 	%r14, [sum_height_kernel_param_5];
	cvta.to.global.u64 	%rd1, %rd10;
	mov.u32 	%r16, %nctaid.x;
	mov.u32 	%r17, %ctaid.y;
	mov.u32 	%r18, %ctaid.x;
	mad.lo.s32 	%r19, %r17, %r16, %r18;
	mov.u32 	%r20, %ntid.x;
	mov.u32 	%r21, %tid.x;
	mad.lo.s32 	%r1, %r19, %r20, %r21;
	setp.ge.s32 	%p1, %r1, %r15;
	@%p1 bra 	$L__BB25_8;

	cvta.to.global.u64 	%rd11, %rd9;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd2, %rd11, %rd12;
	mov.u32 	%r29, 0;
	st.global.u32 	[%rd2], %r29;
	mul.lo.s32 	%r2, %r14, %r13;
	setp.lt.s32 	%p2, %r2, 1;
	@%p2 bra 	$L__BB25_8;

	mul.lo.s32 	%r3, %r2, %r1;
	and.b32  	%r30, %r2, 3;
	add.s32 	%r24, %r2, -1;
	setp.lt.u32 	%p3, %r24, 3;
	mov.f32 	%f17, 0f00000000;
	@%p3 bra 	$L__BB25_5;

	sub.s32 	%r28, %r2, %r30;
	mul.wide.s32 	%rd13, %r3, 4;
	add.s64 	%rd14, %rd1, %rd13;
	add.s64 	%rd16, %rd14, 8;
	mov.u32 	%r29, 0;

$L__BB25_4:
	ld.global.f32 	%f8, [%rd16+-8];
	add.f32 	%f9, %f8, %f17;
	st.global.f32 	[%rd2], %f9;
	ld.global.f32 	%f10, [%rd16+-4];
	add.f32 	%f11, %f10, %f9;
	st.global.f32 	[%rd2], %f11;
	ld.global.f32 	%f12, [%rd16];
	add.f32 	%f13, %f12, %f11;
	st.global.f32 	[%rd2], %f13;
	ld.global.f32 	%f14, [%rd16+4];
	add.f32 	%f17, %f14, %f13;
	st.global.f32 	[%rd2], %f17;
	add.s32 	%r29, %r29, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r28, %r28, -4;
	setp.ne.s32 	%p4, %r28, 0;
	@%p4 bra 	$L__BB25_4;

$L__BB25_5:
	setp.eq.s32 	%p5, %r30, 0;
	@%p5 bra 	$L__BB25_8;

	add.s32 	%r26, %r29, %r3;
	mul.wide.s32 	%rd15, %r26, 4;
	add.s64 	%rd17, %rd1, %rd15;

$L__BB25_7:
	.pragma "nounroll";
	ld.global.f32 	%f15, [%rd17];
	add.f32 	%f17, %f15, %f17;
	st.global.f32 	[%rd2], %f17;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r30, %r30, -1;
	setp.ne.s32 	%p6, %r30, 0;
	@%p6 bra 	$L__BB25_7;

$L__BB25_8:
	ret;

}
	// .globl	sum_pow_kernel
.visible .entry sum_pow_kernel(
	.param .u32 sum_pow_kernel_param_0,
	.param .f64 sum_pow_kernel_param_1,
	.param .u64 sum_pow_kernel_param_2,
	.param .u64 sum_pow_kernel_param_3
)
{
	.reg .pred 	%p<53>;
	.reg .f32 	%f<215>;
	.reg .b32 	%r<57>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r7, [sum_pow_kernel_param_0];
	ld.param.f64 	%fd1, [sum_pow_kernel_param_1];
	ld.param.u64 	%rd7, [sum_pow_kernel_param_2];
	ld.param.u64 	%rd8, [sum_pow_kernel_param_3];
	cvta.to.global.u64 	%rd1, %rd8;
	cvta.to.global.u64 	%rd9, %rd7;
	mov.u32 	%r8, %nctaid.x;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %ctaid.x;
	mad.lo.s32 	%r11, %r9, %r8, %r10;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r14, %r11, %r12, %r13;
	setp.gt.s32 	%p1, %r14, 0;
	setp.lt.s32 	%p2, %r7, 1;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB26_33;

	cvt.rn.f32.f64 	%f1, %fd1;
	mul.f32 	%f29, %f1, 0f3F000000;
	cvt.rzi.f32.f32 	%f30, %f29;
	add.f32 	%f31, %f30, %f30;
	sub.f32 	%f32, %f1, %f31;
	abs.f32 	%f33, %f32;
	setp.eq.f32 	%p4, %f33, 0f3F800000;
	abs.f32 	%f2, %f1;
	setp.gt.f32 	%p5, %f2, 0f77F684DF;
	mul.f32 	%f34, %f1, 0f39000000;
	selp.f32 	%f3, %f34, %f1, %p5;
	setp.ge.f32 	%p6, %f1, 0f00000000;
	selp.b32 	%r1, 2139095040, 0, %p6;
	@%p4 bra 	$L__BB26_17;
	bra.uni 	$L__BB26_2;

$L__BB26_17:
	or.b32  	%r4, %r1, -2147483648;
	mov.u32 	%r56, 0;

$L__BB26_18:
	ld.global.f32 	%f16, [%rd9];
	abs.f32 	%f17, %f16;
	setp.lt.f32 	%p29, %f17, 0f00800000;
	mul.f32 	%f118, %f17, 0f4B800000;
	selp.f32 	%f119, %f118, %f17, %p29;
	selp.f32 	%f120, 0fC3170000, 0fC2FE0000, %p29;
	mov.b32 	%r32, %f119;
	and.b32  	%r33, %r32, 8388607;
	or.b32  	%r34, %r33, 1065353216;
	mov.b32 	%f121, %r34;
	shr.u32 	%r35, %r32, 23;
	cvt.rn.f32.u32 	%f122, %r35;
	add.f32 	%f123, %f120, %f122;
	setp.gt.f32 	%p30, %f121, 0f3FB504F3;
	mul.f32 	%f124, %f121, 0f3F000000;
	add.f32 	%f125, %f123, 0f3F800000;
	selp.f32 	%f126, %f125, %f123, %p30;
	selp.f32 	%f127, %f124, %f121, %p30;
	add.f32 	%f128, %f127, 0fBF800000;
	add.f32 	%f129, %f127, 0f3F800000;
	rcp.approx.ftz.f32 	%f130, %f129;
	add.f32 	%f131, %f128, %f128;
	mul.f32 	%f132, %f131, %f130;
	mul.f32 	%f133, %f132, %f132;
	mov.f32 	%f134, 0f3C4CAF63;
	mov.f32 	%f135, 0f3B18F0FE;
	fma.rn.f32 	%f136, %f135, %f133, %f134;
	mov.f32 	%f137, 0f3DAAAABD;
	fma.rn.f32 	%f138, %f136, %f133, %f137;
	mul.rn.f32 	%f139, %f138, %f133;
	mul.rn.f32 	%f140, %f139, %f132;
	sub.f32 	%f141, %f128, %f132;
	add.f32 	%f142, %f141, %f141;
	neg.f32 	%f143, %f132;
	fma.rn.f32 	%f144, %f143, %f128, %f142;
	mul.rn.f32 	%f145, %f130, %f144;
	add.f32 	%f146, %f140, %f132;
	sub.f32 	%f147, %f132, %f146;
	add.f32 	%f148, %f140, %f147;
	add.f32 	%f149, %f145, %f148;
	add.f32 	%f150, %f146, %f149;
	sub.f32 	%f151, %f146, %f150;
	add.f32 	%f152, %f149, %f151;
	mov.f32 	%f153, 0f3F317200;
	mul.rn.f32 	%f154, %f126, %f153;
	mov.f32 	%f155, 0f35BFBE8E;
	mul.rn.f32 	%f156, %f126, %f155;
	add.f32 	%f157, %f154, %f150;
	sub.f32 	%f158, %f154, %f157;
	add.f32 	%f159, %f150, %f158;
	add.f32 	%f160, %f152, %f159;
	add.f32 	%f161, %f156, %f160;
	add.f32 	%f162, %f157, %f161;
	sub.f32 	%f163, %f157, %f162;
	add.f32 	%f164, %f161, %f163;
	mul.rn.f32 	%f165, %f3, %f162;
	neg.f32 	%f166, %f165;
	fma.rn.f32 	%f167, %f3, %f162, %f166;
	fma.rn.f32 	%f168, %f3, %f164, %f167;
	mov.f32 	%f169, 0f00000000;
	fma.rn.f32 	%f170, %f169, %f162, %f168;
	add.rn.f32 	%f171, %f165, %f170;
	neg.f32 	%f172, %f171;
	add.rn.f32 	%f173, %f165, %f172;
	add.rn.f32 	%f174, %f173, %f170;
	mov.b32 	%r36, %f171;
	setp.eq.s32 	%p31, %r36, 1118925336;
	add.s32 	%r37, %r36, -1;
	mov.b32 	%f175, %r37;
	add.f32 	%f176, %f174, 0f37000000;
	selp.f32 	%f18, %f176, %f174, %p31;
	selp.f32 	%f177, %f175, %f171, %p31;
	mov.f32 	%f178, 0f3FB8AA3B;
	mul.rn.f32 	%f179, %f177, %f178;
	cvt.rzi.f32.f32 	%f180, %f179;
	abs.f32 	%f181, %f180;
	setp.gt.f32 	%p32, %f181, 0f42FC0000;
	mov.b32 	%r38, %f180;
	and.b32  	%r39, %r38, -2147483648;
	or.b32  	%r40, %r39, 1123811328;
	mov.b32 	%f182, %r40;
	selp.f32 	%f183, %f182, %f180, %p32;
	mov.f32 	%f184, 0fBF317218;
	fma.rn.f32 	%f185, %f183, %f184, %f177;
	mov.f32 	%f186, 0f3102E308;
	fma.rn.f32 	%f187, %f183, %f186, %f185;
	mul.f32 	%f188, %f187, 0f3FB8AA3B;
	add.f32 	%f189, %f183, 0f4B40007F;
	mov.b32 	%r41, %f189;
	shl.b32 	%r42, %r41, 23;
	mov.b32 	%f190, %r42;
	ex2.approx.ftz.f32 	%f191, %f188;
	mul.f32 	%f19, %f191, %f190;
	setp.eq.f32 	%p33, %f19, 0f7F800000;
	mov.f32 	%f212, 0f7F800000;
	@%p33 bra 	$L__BB26_20;

	fma.rn.f32 	%f212, %f19, %f18, %f19;

$L__BB26_20:
	setp.eq.f32 	%p34, %f16, 0f00000000;
	@%p34 bra 	$L__BB26_24;
	bra.uni 	$L__BB26_21;

$L__BB26_24:
	setp.lt.f32 	%p38, %f1, 0f00000000;
	add.f32 	%f195, %f16, %f16;
	mov.b32 	%r45, %f195;
	or.b32  	%r46, %r45, 2139095040;
	selp.b32 	%r47, %r46, %r45, %p38;
	mov.b32 	%f214, %r47;
	bra.uni 	$L__BB26_25;

$L__BB26_21:
	setp.geu.f32 	%p35, %f16, 0f00000000;
	setp.lt.f32 	%p36, %f16, 0f00000000;
	mov.b32 	%r43, %f212;
	xor.b32  	%r44, %r43, -2147483648;
	mov.b32 	%f192, %r44;
	selp.f32 	%f214, %f192, %f212, %p36;
	@%p35 bra 	$L__BB26_25;

	cvt.rzi.f32.f32 	%f193, %f1;
	setp.eq.f32 	%p37, %f193, %f1;
	@%p37 bra 	$L__BB26_25;

	mov.f32 	%f214, 0f7FFFFFFF;

$L__BB26_25:
	abs.f32 	%f205, %f16;
	add.f32 	%f196, %f205, %f2;
	mov.b32 	%r48, %f196;
	setp.lt.s32 	%p39, %r48, 2139095040;
	@%p39 bra 	$L__BB26_32;

	abs.f32 	%f206, %f16;
	setp.gtu.f32 	%p40, %f2, 0f7F800000;
	setp.gtu.f32 	%p41, %f206, 0f7F800000;
	or.pred  	%p42, %p41, %p40;
	@%p42 bra 	$L__BB26_31;
	bra.uni 	$L__BB26_27;

$L__BB26_31:
	add.f32 	%f214, %f16, %f1;
	bra.uni 	$L__BB26_32;

$L__BB26_27:
	setp.eq.f32 	%p43, %f2, 0f7F800000;
	@%p43 bra 	$L__BB26_30;
	bra.uni 	$L__BB26_28;

$L__BB26_30:
	abs.f32 	%f208, %f16;
	setp.lt.f32 	%p46, %f1, 0f00000000;
	setp.gt.f32 	%p47, %f208, 0f3F800000;
	selp.b32 	%r50, 2139095040, 0, %p47;
	xor.b32  	%r51, %r50, 2139095040;
	selp.b32 	%r52, %r51, %r50, %p46;
	mov.b32 	%f197, %r52;
	setp.eq.f32 	%p48, %f16, 0fBF800000;
	selp.f32 	%f214, 0f3F800000, %f197, %p48;
	bra.uni 	$L__BB26_32;

$L__BB26_28:
	abs.f32 	%f207, %f16;
	setp.neu.f32 	%p44, %f207, 0f7F800000;
	@%p44 bra 	$L__BB26_32;

	setp.lt.f32 	%p45, %f16, 0f00000000;
	selp.b32 	%r49, %r4, %r1, %p45;
	mov.b32 	%f214, %r49;

$L__BB26_32:
	ld.param.u32 	%r54, [sum_pow_kernel_param_0];
	setp.eq.f32 	%p49, %f16, 0f3F800000;
	setp.eq.f32 	%p50, %f1, 0f00000000;
	or.pred  	%p51, %p50, %p49;
	selp.f32 	%f198, 0f3F800000, %f214, %p51;
	ld.global.f32 	%f199, [%rd1];
	add.f32 	%f200, %f199, %f198;
	st.global.f32 	[%rd1], %f200;
	add.s64 	%rd9, %rd9, 4;
	add.s32 	%r56, %r56, 1;
	setp.lt.s32 	%p52, %r56, %r54;
	@%p52 bra 	$L__BB26_18;
	bra.uni 	$L__BB26_33;

$L__BB26_2:
	setp.lt.f32 	%p7, %f1, 0f00000000;
	selp.f32 	%f4, 0f7F800000, 0f00000000, %p7;
	mov.b32 	%f5, %r1;
	mov.u32 	%r55, 0;

$L__BB26_3:
	ld.global.f32 	%f6, [%rd9];
	abs.f32 	%f7, %f6;
	setp.lt.f32 	%p8, %f7, 0f00800000;
	mul.f32 	%f36, %f7, 0f4B800000;
	selp.f32 	%f37, %f36, %f7, %p8;
	selp.f32 	%f38, 0fC3170000, 0fC2FE0000, %p8;
	mov.b32 	%r16, %f37;
	and.b32  	%r17, %r16, 8388607;
	or.b32  	%r18, %r17, 1065353216;
	mov.b32 	%f39, %r18;
	shr.u32 	%r19, %r16, 23;
	cvt.rn.f32.u32 	%f40, %r19;
	add.f32 	%f41, %f38, %f40;
	setp.gt.f32 	%p9, %f39, 0f3FB504F3;
	mul.f32 	%f42, %f39, 0f3F000000;
	add.f32 	%f43, %f41, 0f3F800000;
	selp.f32 	%f44, %f43, %f41, %p9;
	selp.f32 	%f45, %f42, %f39, %p9;
	add.f32 	%f46, %f45, 0fBF800000;
	add.f32 	%f47, %f45, 0f3F800000;
	rcp.approx.ftz.f32 	%f48, %f47;
	add.f32 	%f49, %f46, %f46;
	mul.f32 	%f50, %f49, %f48;
	mul.f32 	%f51, %f50, %f50;
	mov.f32 	%f52, 0f3C4CAF63;
	mov.f32 	%f53, 0f3B18F0FE;
	fma.rn.f32 	%f54, %f53, %f51, %f52;
	mov.f32 	%f55, 0f3DAAAABD;
	fma.rn.f32 	%f56, %f54, %f51, %f55;
	mul.rn.f32 	%f57, %f56, %f51;
	mul.rn.f32 	%f58, %f57, %f50;
	sub.f32 	%f59, %f46, %f50;
	add.f32 	%f60, %f59, %f59;
	neg.f32 	%f61, %f50;
	fma.rn.f32 	%f62, %f61, %f46, %f60;
	mul.rn.f32 	%f63, %f48, %f62;
	add.f32 	%f64, %f58, %f50;
	sub.f32 	%f65, %f50, %f64;
	add.f32 	%f66, %f58, %f65;
	add.f32 	%f67, %f63, %f66;
	add.f32 	%f68, %f64, %f67;
	sub.f32 	%f69, %f64, %f68;
	add.f32 	%f70, %f67, %f69;
	mov.f32 	%f71, 0f3F317200;
	mul.rn.f32 	%f72, %f44, %f71;
	mov.f32 	%f73, 0f35BFBE8E;
	mul.rn.f32 	%f74, %f44, %f73;
	add.f32 	%f75, %f72, %f68;
	sub.f32 	%f76, %f72, %f75;
	add.f32 	%f77, %f68, %f76;
	add.f32 	%f78, %f70, %f77;
	add.f32 	%f79, %f74, %f78;
	add.f32 	%f80, %f75, %f79;
	sub.f32 	%f81, %f75, %f80;
	add.f32 	%f82, %f79, %f81;
	mul.rn.f32 	%f83, %f3, %f80;
	neg.f32 	%f84, %f83;
	fma.rn.f32 	%f85, %f3, %f80, %f84;
	fma.rn.f32 	%f86, %f3, %f82, %f85;
	mov.f32 	%f87, 0f00000000;
	fma.rn.f32 	%f88, %f87, %f80, %f86;
	add.rn.f32 	%f89, %f83, %f88;
	neg.f32 	%f90, %f89;
	add.rn.f32 	%f91, %f83, %f90;
	add.rn.f32 	%f92, %f91, %f88;
	mov.b32 	%r20, %f89;
	setp.eq.s32 	%p10, %r20, 1118925336;
	add.s32 	%r21, %r20, -1;
	mov.b32 	%f93, %r21;
	add.f32 	%f94, %f92, 0f37000000;
	selp.f32 	%f8, %f94, %f92, %p10;
	selp.f32 	%f95, %f93, %f89, %p10;
	mov.f32 	%f96, 0f3FB8AA3B;
	mul.rn.f32 	%f97, %f95, %f96;
	cvt.rzi.f32.f32 	%f98, %f97;
	abs.f32 	%f99, %f98;
	setp.gt.f32 	%p11, %f99, 0f42FC0000;
	mov.b32 	%r22, %f98;
	and.b32  	%r23, %r22, -2147483648;
	or.b32  	%r24, %r23, 1123811328;
	mov.b32 	%f100, %r24;
	selp.f32 	%f101, %f100, %f98, %p11;
	mov.f32 	%f102, 0fBF317218;
	fma.rn.f32 	%f103, %f101, %f102, %f95;
	mov.f32 	%f104, 0f3102E308;
	fma.rn.f32 	%f105, %f101, %f104, %f103;
	mul.f32 	%f106, %f105, 0f3FB8AA3B;
	add.f32 	%f107, %f101, 0f4B40007F;
	mov.b32 	%r25, %f107;
	shl.b32 	%r26, %r25, 23;
	mov.b32 	%f108, %r26;
	ex2.approx.ftz.f32 	%f109, %f106;
	mul.f32 	%f9, %f109, %f108;
	setp.eq.f32 	%p12, %f9, 0f7F800000;
	mov.f32 	%f209, 0f7F800000;
	@%p12 bra 	$L__BB26_5;

	fma.rn.f32 	%f209, %f9, %f8, %f9;

$L__BB26_5:
	setp.eq.f32 	%p13, %f6, 0f00000000;
	mov.f32 	%f211, %f4;
	@%p13 bra 	$L__BB26_9;

	setp.geu.f32 	%p14, %f6, 0f00000000;
	mov.f32 	%f211, %f209;
	@%p14 bra 	$L__BB26_9;

	cvt.rzi.f32.f32 	%f110, %f1;
	setp.eq.f32 	%p15, %f110, %f1;
	mov.f32 	%f211, %f209;
	@%p15 bra 	$L__BB26_9;

	mov.f32 	%f211, 0f7FFFFFFF;

$L__BB26_9:
	abs.f32 	%f201, %f6;
	add.f32 	%f112, %f201, %f2;
	mov.b32 	%r27, %f112;
	setp.lt.s32 	%p16, %r27, 2139095040;
	@%p16 bra 	$L__BB26_16;

	abs.f32 	%f202, %f6;
	setp.gtu.f32 	%p17, %f2, 0f7F800000;
	setp.gtu.f32 	%p18, %f202, 0f7F800000;
	or.pred  	%p19, %p18, %p17;
	@%p19 bra 	$L__BB26_15;
	bra.uni 	$L__BB26_11;

$L__BB26_15:
	add.f32 	%f211, %f6, %f1;
	bra.uni 	$L__BB26_16;

$L__BB26_11:
	setp.eq.f32 	%p20, %f2, 0f7F800000;
	@%p20 bra 	$L__BB26_14;
	bra.uni 	$L__BB26_12;

$L__BB26_14:
	abs.f32 	%f204, %f6;
	setp.gt.f32 	%p23, %f204, 0f3F800000;
	selp.b32 	%r28, 2139095040, 0, %p23;
	xor.b32  	%r29, %r28, 2139095040;
	selp.b32 	%r30, %r29, %r28, %p7;
	mov.b32 	%f113, %r30;
	setp.eq.f32 	%p24, %f6, 0fBF800000;
	selp.f32 	%f211, 0f3F800000, %f113, %p24;
	bra.uni 	$L__BB26_16;

$L__BB26_12:
	abs.f32 	%f203, %f6;
	setp.neu.f32 	%p21, %f203, 0f7F800000;
	@%p21 bra 	$L__BB26_16;

	mov.f32 	%f211, %f5;

$L__BB26_16:
	ld.param.u32 	%r53, [sum_pow_kernel_param_0];
	setp.eq.f32 	%p25, %f6, 0f3F800000;
	setp.eq.f32 	%p26, %f1, 0f00000000;
	or.pred  	%p27, %p26, %p25;
	selp.f32 	%f114, 0f3F800000, %f211, %p27;
	ld.global.f32 	%f115, [%rd1];
	add.f32 	%f116, %f115, %f114;
	st.global.f32 	[%rd1], %f116;
	add.s64 	%rd9, %rd9, 4;
	add.s32 	%r55, %r55, 1;
	setp.lt.s32 	%p28, %r55, %r53;
	@%p28 bra 	$L__BB26_3;

$L__BB26_33:
	ret;

}
	// .globl	sum_pow_channel_kernel
.visible .entry sum_pow_channel_kernel(
	.param .u32 sum_pow_channel_kernel_param_0,
	.param .f64 sum_pow_channel_kernel_param_1,
	.param .u64 sum_pow_channel_kernel_param_2,
	.param .u64 sum_pow_channel_kernel_param_3,
	.param .u32 sum_pow_channel_kernel_param_4,
	.param .u32 sum_pow_channel_kernel_param_5,
	.param .u32 sum_pow_channel_kernel_param_6
)
{
	.reg .pred 	%p<52>;
	.reg .f32 	%f<215>;
	.reg .b32 	%r<61>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<15>;


	ld.param.u32 	%r12, [sum_pow_channel_kernel_param_0];
	ld.param.f64 	%fd1, [sum_pow_channel_kernel_param_1];
	ld.param.u64 	%rd7, [sum_pow_channel_kernel_param_2];
	ld.param.u64 	%rd8, [sum_pow_channel_kernel_param_3];
	ld.param.u32 	%r9, [sum_pow_channel_kernel_param_4];
	ld.param.u32 	%r10, [sum_pow_channel_kernel_param_5];
	ld.param.u32 	%r11, [sum_pow_channel_kernel_param_6];
	mov.u32 	%r13, %nctaid.x;
	mov.u32 	%r14, %ctaid.y;
	mov.u32 	%r15, %ctaid.x;
	mad.lo.s32 	%r16, %r14, %r13, %r15;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB27_34;

	mul.lo.s32 	%r19, %r10, %r9;
	mul.lo.s32 	%r2, %r19, %r11;
	setp.lt.s32 	%p2, %r2, 1;
	@%p2 bra 	$L__BB27_34;

	mul.lo.s32 	%r20, %r2, %r1;
	cvt.rn.f32.f64 	%f1, %fd1;
	mul.f32 	%f29, %f1, 0f3F000000;
	cvt.rzi.f32.f32 	%f30, %f29;
	add.f32 	%f31, %f30, %f30;
	sub.f32 	%f32, %f1, %f31;
	abs.f32 	%f33, %f32;
	setp.eq.f32 	%p3, %f33, 0f3F800000;
	abs.f32 	%f2, %f1;
	setp.gt.f32 	%p4, %f2, 0f77F684DF;
	mul.f32 	%f34, %f1, 0f39000000;
	selp.f32 	%f3, %f34, %f1, %p4;
	cvta.to.global.u64 	%rd9, %rd8;
	mul.wide.s32 	%rd10, %r1, 4;
	add.s64 	%rd1, %rd9, %rd10;
	setp.ge.f32 	%p5, %f1, 0f00000000;
	selp.b32 	%r3, 2139095040, 0, %p5;
	cvta.to.global.u64 	%rd11, %rd7;
	mul.wide.s32 	%rd12, %r20, 4;
	add.s64 	%rd13, %rd11, %rd12;
	@%p3 bra 	$L__BB27_18;
	bra.uni 	$L__BB27_3;

$L__BB27_18:
	or.b32  	%r6, %r3, -2147483648;
	mov.u32 	%r60, 0;

$L__BB27_19:
	ld.global.f32 	%f16, [%rd13];
	abs.f32 	%f17, %f16;
	setp.lt.f32 	%p28, %f17, 0f00800000;
	mul.f32 	%f118, %f17, 0f4B800000;
	selp.f32 	%f119, %f118, %f17, %p28;
	selp.f32 	%f120, 0fC3170000, 0fC2FE0000, %p28;
	mov.b32 	%r38, %f119;
	and.b32  	%r39, %r38, 8388607;
	or.b32  	%r40, %r39, 1065353216;
	mov.b32 	%f121, %r40;
	shr.u32 	%r41, %r38, 23;
	cvt.rn.f32.u32 	%f122, %r41;
	add.f32 	%f123, %f120, %f122;
	setp.gt.f32 	%p29, %f121, 0f3FB504F3;
	mul.f32 	%f124, %f121, 0f3F000000;
	add.f32 	%f125, %f123, 0f3F800000;
	selp.f32 	%f126, %f125, %f123, %p29;
	selp.f32 	%f127, %f124, %f121, %p29;
	add.f32 	%f128, %f127, 0fBF800000;
	add.f32 	%f129, %f127, 0f3F800000;
	rcp.approx.ftz.f32 	%f130, %f129;
	add.f32 	%f131, %f128, %f128;
	mul.f32 	%f132, %f131, %f130;
	mul.f32 	%f133, %f132, %f132;
	mov.f32 	%f134, 0f3C4CAF63;
	mov.f32 	%f135, 0f3B18F0FE;
	fma.rn.f32 	%f136, %f135, %f133, %f134;
	mov.f32 	%f137, 0f3DAAAABD;
	fma.rn.f32 	%f138, %f136, %f133, %f137;
	mul.rn.f32 	%f139, %f138, %f133;
	mul.rn.f32 	%f140, %f139, %f132;
	sub.f32 	%f141, %f128, %f132;
	add.f32 	%f142, %f141, %f141;
	neg.f32 	%f143, %f132;
	fma.rn.f32 	%f144, %f143, %f128, %f142;
	mul.rn.f32 	%f145, %f130, %f144;
	add.f32 	%f146, %f140, %f132;
	sub.f32 	%f147, %f132, %f146;
	add.f32 	%f148, %f140, %f147;
	add.f32 	%f149, %f145, %f148;
	add.f32 	%f150, %f146, %f149;
	sub.f32 	%f151, %f146, %f150;
	add.f32 	%f152, %f149, %f151;
	mov.f32 	%f153, 0f3F317200;
	mul.rn.f32 	%f154, %f126, %f153;
	mov.f32 	%f155, 0f35BFBE8E;
	mul.rn.f32 	%f156, %f126, %f155;
	add.f32 	%f157, %f154, %f150;
	sub.f32 	%f158, %f154, %f157;
	add.f32 	%f159, %f150, %f158;
	add.f32 	%f160, %f152, %f159;
	add.f32 	%f161, %f156, %f160;
	add.f32 	%f162, %f157, %f161;
	sub.f32 	%f163, %f157, %f162;
	add.f32 	%f164, %f161, %f163;
	mul.rn.f32 	%f165, %f3, %f162;
	neg.f32 	%f166, %f165;
	fma.rn.f32 	%f167, %f3, %f162, %f166;
	fma.rn.f32 	%f168, %f3, %f164, %f167;
	mov.f32 	%f169, 0f00000000;
	fma.rn.f32 	%f170, %f169, %f162, %f168;
	add.rn.f32 	%f171, %f165, %f170;
	neg.f32 	%f172, %f171;
	add.rn.f32 	%f173, %f165, %f172;
	add.rn.f32 	%f174, %f173, %f170;
	mov.b32 	%r42, %f171;
	setp.eq.s32 	%p30, %r42, 1118925336;
	add.s32 	%r43, %r42, -1;
	mov.b32 	%f175, %r43;
	add.f32 	%f176, %f174, 0f37000000;
	selp.f32 	%f18, %f176, %f174, %p30;
	selp.f32 	%f177, %f175, %f171, %p30;
	mov.f32 	%f178, 0f3FB8AA3B;
	mul.rn.f32 	%f179, %f177, %f178;
	cvt.rzi.f32.f32 	%f180, %f179;
	abs.f32 	%f181, %f180;
	setp.gt.f32 	%p31, %f181, 0f42FC0000;
	mov.b32 	%r44, %f180;
	and.b32  	%r45, %r44, -2147483648;
	or.b32  	%r46, %r45, 1123811328;
	mov.b32 	%f182, %r46;
	selp.f32 	%f183, %f182, %f180, %p31;
	mov.f32 	%f184, 0fBF317218;
	fma.rn.f32 	%f185, %f183, %f184, %f177;
	mov.f32 	%f186, 0f3102E308;
	fma.rn.f32 	%f187, %f183, %f186, %f185;
	mul.f32 	%f188, %f187, 0f3FB8AA3B;
	add.f32 	%f189, %f183, 0f4B40007F;
	mov.b32 	%r47, %f189;
	shl.b32 	%r48, %r47, 23;
	mov.b32 	%f190, %r48;
	ex2.approx.ftz.f32 	%f191, %f188;
	mul.f32 	%f19, %f191, %f190;
	setp.eq.f32 	%p32, %f19, 0f7F800000;
	mov.f32 	%f212, 0f7F800000;
	@%p32 bra 	$L__BB27_21;

	fma.rn.f32 	%f212, %f19, %f18, %f19;

$L__BB27_21:
	setp.eq.f32 	%p33, %f16, 0f00000000;
	@%p33 bra 	$L__BB27_25;
	bra.uni 	$L__BB27_22;

$L__BB27_25:
	setp.lt.f32 	%p37, %f1, 0f00000000;
	add.f32 	%f195, %f16, %f16;
	mov.b32 	%r51, %f195;
	or.b32  	%r52, %r51, 2139095040;
	selp.b32 	%r53, %r52, %r51, %p37;
	mov.b32 	%f214, %r53;
	bra.uni 	$L__BB27_26;

$L__BB27_22:
	setp.geu.f32 	%p34, %f16, 0f00000000;
	setp.lt.f32 	%p35, %f16, 0f00000000;
	mov.b32 	%r49, %f212;
	xor.b32  	%r50, %r49, -2147483648;
	mov.b32 	%f192, %r50;
	selp.f32 	%f214, %f192, %f212, %p35;
	@%p34 bra 	$L__BB27_26;

	cvt.rzi.f32.f32 	%f193, %f1;
	setp.eq.f32 	%p36, %f193, %f1;
	@%p36 bra 	$L__BB27_26;

	mov.f32 	%f214, 0f7FFFFFFF;

$L__BB27_26:
	abs.f32 	%f205, %f16;
	add.f32 	%f196, %f205, %f2;
	mov.b32 	%r54, %f196;
	setp.lt.s32 	%p38, %r54, 2139095040;
	@%p38 bra 	$L__BB27_33;

	abs.f32 	%f206, %f16;
	setp.gtu.f32 	%p39, %f2, 0f7F800000;
	setp.gtu.f32 	%p40, %f206, 0f7F800000;
	or.pred  	%p41, %p40, %p39;
	@%p41 bra 	$L__BB27_32;
	bra.uni 	$L__BB27_28;

$L__BB27_32:
	add.f32 	%f214, %f16, %f1;
	bra.uni 	$L__BB27_33;

$L__BB27_28:
	setp.eq.f32 	%p42, %f2, 0f7F800000;
	@%p42 bra 	$L__BB27_31;
	bra.uni 	$L__BB27_29;

$L__BB27_31:
	abs.f32 	%f208, %f16;
	setp.lt.f32 	%p45, %f1, 0f00000000;
	setp.gt.f32 	%p46, %f208, 0f3F800000;
	selp.b32 	%r56, 2139095040, 0, %p46;
	xor.b32  	%r57, %r56, 2139095040;
	selp.b32 	%r58, %r57, %r56, %p45;
	mov.b32 	%f197, %r58;
	setp.eq.f32 	%p47, %f16, 0fBF800000;
	selp.f32 	%f214, 0f3F800000, %f197, %p47;
	bra.uni 	$L__BB27_33;

$L__BB27_29:
	abs.f32 	%f207, %f16;
	setp.neu.f32 	%p43, %f207, 0f7F800000;
	@%p43 bra 	$L__BB27_33;

	setp.lt.f32 	%p44, %f16, 0f00000000;
	selp.b32 	%r55, %r6, %r3, %p44;
	mov.b32 	%f214, %r55;

$L__BB27_33:
	setp.eq.f32 	%p48, %f16, 0f3F800000;
	setp.eq.f32 	%p49, %f1, 0f00000000;
	or.pred  	%p50, %p49, %p48;
	selp.f32 	%f198, 0f3F800000, %f214, %p50;
	ld.global.f32 	%f199, [%rd1];
	add.f32 	%f200, %f199, %f198;
	st.global.f32 	[%rd1], %f200;
	add.s64 	%rd13, %rd13, 4;
	add.s32 	%r60, %r60, 1;
	setp.lt.s32 	%p51, %r60, %r2;
	@%p51 bra 	$L__BB27_19;
	bra.uni 	$L__BB27_34;

$L__BB27_3:
	setp.lt.f32 	%p6, %f1, 0f00000000;
	selp.f32 	%f4, 0f7F800000, 0f00000000, %p6;
	mov.b32 	%f5, %r3;
	mov.u32 	%r59, 0;

$L__BB27_4:
	ld.global.f32 	%f6, [%rd13];
	abs.f32 	%f7, %f6;
	setp.lt.f32 	%p7, %f7, 0f00800000;
	mul.f32 	%f36, %f7, 0f4B800000;
	selp.f32 	%f37, %f36, %f7, %p7;
	selp.f32 	%f38, 0fC3170000, 0fC2FE0000, %p7;
	mov.b32 	%r22, %f37;
	and.b32  	%r23, %r22, 8388607;
	or.b32  	%r24, %r23, 1065353216;
	mov.b32 	%f39, %r24;
	shr.u32 	%r25, %r22, 23;
	cvt.rn.f32.u32 	%f40, %r25;
	add.f32 	%f41, %f38, %f40;
	setp.gt.f32 	%p8, %f39, 0f3FB504F3;
	mul.f32 	%f42, %f39, 0f3F000000;
	add.f32 	%f43, %f41, 0f3F800000;
	selp.f32 	%f44, %f43, %f41, %p8;
	selp.f32 	%f45, %f42, %f39, %p8;
	add.f32 	%f46, %f45, 0fBF800000;
	add.f32 	%f47, %f45, 0f3F800000;
	rcp.approx.ftz.f32 	%f48, %f47;
	add.f32 	%f49, %f46, %f46;
	mul.f32 	%f50, %f49, %f48;
	mul.f32 	%f51, %f50, %f50;
	mov.f32 	%f52, 0f3C4CAF63;
	mov.f32 	%f53, 0f3B18F0FE;
	fma.rn.f32 	%f54, %f53, %f51, %f52;
	mov.f32 	%f55, 0f3DAAAABD;
	fma.rn.f32 	%f56, %f54, %f51, %f55;
	mul.rn.f32 	%f57, %f56, %f51;
	mul.rn.f32 	%f58, %f57, %f50;
	sub.f32 	%f59, %f46, %f50;
	add.f32 	%f60, %f59, %f59;
	neg.f32 	%f61, %f50;
	fma.rn.f32 	%f62, %f61, %f46, %f60;
	mul.rn.f32 	%f63, %f48, %f62;
	add.f32 	%f64, %f58, %f50;
	sub.f32 	%f65, %f50, %f64;
	add.f32 	%f66, %f58, %f65;
	add.f32 	%f67, %f63, %f66;
	add.f32 	%f68, %f64, %f67;
	sub.f32 	%f69, %f64, %f68;
	add.f32 	%f70, %f67, %f69;
	mov.f32 	%f71, 0f3F317200;
	mul.rn.f32 	%f72, %f44, %f71;
	mov.f32 	%f73, 0f35BFBE8E;
	mul.rn.f32 	%f74, %f44, %f73;
	add.f32 	%f75, %f72, %f68;
	sub.f32 	%f76, %f72, %f75;
	add.f32 	%f77, %f68, %f76;
	add.f32 	%f78, %f70, %f77;
	add.f32 	%f79, %f74, %f78;
	add.f32 	%f80, %f75, %f79;
	sub.f32 	%f81, %f75, %f80;
	add.f32 	%f82, %f79, %f81;
	mul.rn.f32 	%f83, %f3, %f80;
	neg.f32 	%f84, %f83;
	fma.rn.f32 	%f85, %f3, %f80, %f84;
	fma.rn.f32 	%f86, %f3, %f82, %f85;
	mov.f32 	%f87, 0f00000000;
	fma.rn.f32 	%f88, %f87, %f80, %f86;
	add.rn.f32 	%f89, %f83, %f88;
	neg.f32 	%f90, %f89;
	add.rn.f32 	%f91, %f83, %f90;
	add.rn.f32 	%f92, %f91, %f88;
	mov.b32 	%r26, %f89;
	setp.eq.s32 	%p9, %r26, 1118925336;
	add.s32 	%r27, %r26, -1;
	mov.b32 	%f93, %r27;
	add.f32 	%f94, %f92, 0f37000000;
	selp.f32 	%f8, %f94, %f92, %p9;
	selp.f32 	%f95, %f93, %f89, %p9;
	mov.f32 	%f96, 0f3FB8AA3B;
	mul.rn.f32 	%f97, %f95, %f96;
	cvt.rzi.f32.f32 	%f98, %f97;
	abs.f32 	%f99, %f98;
	setp.gt.f32 	%p10, %f99, 0f42FC0000;
	mov.b32 	%r28, %f98;
	and.b32  	%r29, %r28, -2147483648;
	or.b32  	%r30, %r29, 1123811328;
	mov.b32 	%f100, %r30;
	selp.f32 	%f101, %f100, %f98, %p10;
	mov.f32 	%f102, 0fBF317218;
	fma.rn.f32 	%f103, %f101, %f102, %f95;
	mov.f32 	%f104, 0f3102E308;
	fma.rn.f32 	%f105, %f101, %f104, %f103;
	mul.f32 	%f106, %f105, 0f3FB8AA3B;
	add.f32 	%f107, %f101, 0f4B40007F;
	mov.b32 	%r31, %f107;
	shl.b32 	%r32, %r31, 23;
	mov.b32 	%f108, %r32;
	ex2.approx.ftz.f32 	%f109, %f106;
	mul.f32 	%f9, %f109, %f108;
	setp.eq.f32 	%p11, %f9, 0f7F800000;
	mov.f32 	%f209, 0f7F800000;
	@%p11 bra 	$L__BB27_6;

	fma.rn.f32 	%f209, %f9, %f8, %f9;

$L__BB27_6:
	setp.eq.f32 	%p12, %f6, 0f00000000;
	mov.f32 	%f211, %f4;
	@%p12 bra 	$L__BB27_10;

	setp.geu.f32 	%p13, %f6, 0f00000000;
	mov.f32 	%f211, %f209;
	@%p13 bra 	$L__BB27_10;

	cvt.rzi.f32.f32 	%f110, %f1;
	setp.eq.f32 	%p14, %f110, %f1;
	mov.f32 	%f211, %f209;
	@%p14 bra 	$L__BB27_10;

	mov.f32 	%f211, 0f7FFFFFFF;

$L__BB27_10:
	abs.f32 	%f201, %f6;
	add.f32 	%f112, %f201, %f2;
	mov.b32 	%r33, %f112;
	setp.lt.s32 	%p15, %r33, 2139095040;
	@%p15 bra 	$L__BB27_17;

	abs.f32 	%f202, %f6;
	setp.gtu.f32 	%p16, %f2, 0f7F800000;
	setp.gtu.f32 	%p17, %f202, 0f7F800000;
	or.pred  	%p18, %p17, %p16;
	@%p18 bra 	$L__BB27_16;
	bra.uni 	$L__BB27_12;

$L__BB27_16:
	add.f32 	%f211, %f6, %f1;
	bra.uni 	$L__BB27_17;

$L__BB27_12:
	setp.eq.f32 	%p19, %f2, 0f7F800000;
	@%p19 bra 	$L__BB27_15;
	bra.uni 	$L__BB27_13;

$L__BB27_15:
	abs.f32 	%f204, %f6;
	setp.gt.f32 	%p22, %f204, 0f3F800000;
	selp.b32 	%r34, 2139095040, 0, %p22;
	xor.b32  	%r35, %r34, 2139095040;
	selp.b32 	%r36, %r35, %r34, %p6;
	mov.b32 	%f113, %r36;
	setp.eq.f32 	%p23, %f6, 0fBF800000;
	selp.f32 	%f211, 0f3F800000, %f113, %p23;
	bra.uni 	$L__BB27_17;

$L__BB27_13:
	abs.f32 	%f203, %f6;
	setp.neu.f32 	%p20, %f203, 0f7F800000;
	@%p20 bra 	$L__BB27_17;

	mov.f32 	%f211, %f5;

$L__BB27_17:
	setp.eq.f32 	%p24, %f6, 0f3F800000;
	setp.eq.f32 	%p25, %f1, 0f00000000;
	or.pred  	%p26, %p25, %p24;
	selp.f32 	%f114, 0f3F800000, %f211, %p26;
	ld.global.f32 	%f115, [%rd1];
	add.f32 	%f116, %f115, %f114;
	st.global.f32 	[%rd1], %f116;
	add.s64 	%rd13, %rd13, 4;
	add.s32 	%r59, %r59, 1;
	setp.lt.s32 	%p27, %r59, %r2;
	@%p27 bra 	$L__BB27_4;

$L__BB27_34:
	ret;

}
	// .globl	sum_pow_height_kernel
.visible .entry sum_pow_height_kernel(
	.param .u32 sum_pow_height_kernel_param_0,
	.param .f64 sum_pow_height_kernel_param_1,
	.param .u64 sum_pow_height_kernel_param_2,
	.param .u64 sum_pow_height_kernel_param_3,
	.param .u32 sum_pow_height_kernel_param_4,
	.param .u32 sum_pow_height_kernel_param_5,
	.param .u32 sum_pow_height_kernel_param_6
)
{
	.reg .pred 	%p<52>;
	.reg .f32 	%f<219>;
	.reg .b32 	%r<60>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<15>;


	ld.param.u32 	%r11, [sum_pow_height_kernel_param_0];
	ld.param.f64 	%fd1, [sum_pow_height_kernel_param_1];
	ld.param.u64 	%rd7, [sum_pow_height_kernel_param_2];
	ld.param.u64 	%rd8, [sum_pow_height_kernel_param_3];
	ld.param.u32 	%r9, [sum_pow_height_kernel_param_5];
	ld.param.u32 	%r10, [sum_pow_height_kernel_param_6];
	mov.u32 	%r12, %nctaid.x;
	mov.u32 	%r13, %ctaid.y;
	mov.u32 	%r14, %ctaid.x;
	mad.lo.s32 	%r15, %r13, %r12, %r14;
	mov.u32 	%r16, %ntid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	setp.ge.s32 	%p1, %r1, %r11;
	@%p1 bra 	$L__BB28_34;

	cvta.to.global.u64 	%rd9, %rd8;
	mul.wide.s32 	%rd10, %r1, 4;
	add.s64 	%rd1, %rd9, %rd10;
	mov.u32 	%r18, 0;
	st.global.u32 	[%rd1], %r18;
	mul.lo.s32 	%r2, %r10, %r9;
	setp.lt.s32 	%p2, %r2, 1;
	@%p2 bra 	$L__BB28_34;

	mul.lo.s32 	%r19, %r2, %r1;
	cvt.rn.f32.f64 	%f1, %fd1;
	mul.f32 	%f33, %f1, 0f3F000000;
	cvt.rzi.f32.f32 	%f34, %f33;
	add.f32 	%f35, %f34, %f34;
	sub.f32 	%f36, %f1, %f35;
	abs.f32 	%f37, %f36;
	setp.eq.f32 	%p3, %f37, 0f3F800000;
	abs.f32 	%f2, %f1;
	setp.gt.f32 	%p4, %f2, 0f77F684DF;
	mul.f32 	%f38, %f1, 0f39000000;
	selp.f32 	%f3, %f38, %f1, %p4;
	setp.ge.f32 	%p5, %f1, 0f00000000;
	selp.b32 	%r3, 2139095040, 0, %p5;
	cvta.to.global.u64 	%rd11, %rd7;
	mul.wide.s32 	%rd12, %r19, 4;
	add.s64 	%rd13, %rd11, %rd12;
	@%p3 bra 	$L__BB28_18;
	bra.uni 	$L__BB28_3;

$L__BB28_18:
	or.b32  	%r6, %r3, -2147483648;
	mov.u32 	%r59, 0;
	mov.f32 	%f120, 0f00000000;
	mov.f32 	%f215, %f120;

$L__BB28_19:
	ld.global.f32 	%f19, [%rd13];
	abs.f32 	%f20, %f19;
	setp.lt.f32 	%p28, %f20, 0f00800000;
	mul.f32 	%f122, %f20, 0f4B800000;
	selp.f32 	%f123, %f122, %f20, %p28;
	selp.f32 	%f124, 0fC3170000, 0fC2FE0000, %p28;
	mov.b32 	%r37, %f123;
	and.b32  	%r38, %r37, 8388607;
	or.b32  	%r39, %r38, 1065353216;
	mov.b32 	%f125, %r39;
	shr.u32 	%r40, %r37, 23;
	cvt.rn.f32.u32 	%f126, %r40;
	add.f32 	%f127, %f124, %f126;
	setp.gt.f32 	%p29, %f125, 0f3FB504F3;
	mul.f32 	%f128, %f125, 0f3F000000;
	add.f32 	%f129, %f127, 0f3F800000;
	selp.f32 	%f130, %f129, %f127, %p29;
	selp.f32 	%f131, %f128, %f125, %p29;
	add.f32 	%f132, %f131, 0fBF800000;
	add.f32 	%f133, %f131, 0f3F800000;
	rcp.approx.ftz.f32 	%f134, %f133;
	add.f32 	%f135, %f132, %f132;
	mul.f32 	%f136, %f135, %f134;
	mul.f32 	%f137, %f136, %f136;
	mov.f32 	%f138, 0f3C4CAF63;
	mov.f32 	%f139, 0f3B18F0FE;
	fma.rn.f32 	%f140, %f139, %f137, %f138;
	mov.f32 	%f141, 0f3DAAAABD;
	fma.rn.f32 	%f142, %f140, %f137, %f141;
	mul.rn.f32 	%f143, %f142, %f137;
	mul.rn.f32 	%f144, %f143, %f136;
	sub.f32 	%f145, %f132, %f136;
	add.f32 	%f146, %f145, %f145;
	neg.f32 	%f147, %f136;
	fma.rn.f32 	%f148, %f147, %f132, %f146;
	mul.rn.f32 	%f149, %f134, %f148;
	add.f32 	%f150, %f144, %f136;
	sub.f32 	%f151, %f136, %f150;
	add.f32 	%f152, %f144, %f151;
	add.f32 	%f153, %f149, %f152;
	add.f32 	%f154, %f150, %f153;
	sub.f32 	%f155, %f150, %f154;
	add.f32 	%f156, %f153, %f155;
	mov.f32 	%f157, 0f3F317200;
	mul.rn.f32 	%f158, %f130, %f157;
	mov.f32 	%f159, 0f35BFBE8E;
	mul.rn.f32 	%f160, %f130, %f159;
	add.f32 	%f161, %f158, %f154;
	sub.f32 	%f162, %f158, %f161;
	add.f32 	%f163, %f154, %f162;
	add.f32 	%f164, %f156, %f163;
	add.f32 	%f165, %f160, %f164;
	add.f32 	%f166, %f161, %f165;
	sub.f32 	%f167, %f161, %f166;
	add.f32 	%f168, %f165, %f167;
	mul.rn.f32 	%f169, %f3, %f166;
	neg.f32 	%f170, %f169;
	fma.rn.f32 	%f171, %f3, %f166, %f170;
	fma.rn.f32 	%f172, %f3, %f168, %f171;
	fma.rn.f32 	%f174, %f120, %f166, %f172;
	add.rn.f32 	%f175, %f169, %f174;
	neg.f32 	%f176, %f175;
	add.rn.f32 	%f177, %f169, %f176;
	add.rn.f32 	%f178, %f177, %f174;
	mov.b32 	%r41, %f175;
	setp.eq.s32 	%p30, %r41, 1118925336;
	add.s32 	%r42, %r41, -1;
	mov.b32 	%f179, %r42;
	add.f32 	%f180, %f178, 0f37000000;
	selp.f32 	%f21, %f180, %f178, %p30;
	selp.f32 	%f181, %f179, %f175, %p30;
	mov.f32 	%f182, 0f3FB8AA3B;
	mul.rn.f32 	%f183, %f181, %f182;
	cvt.rzi.f32.f32 	%f184, %f183;
	abs.f32 	%f185, %f184;
	setp.gt.f32 	%p31, %f185, 0f42FC0000;
	mov.b32 	%r43, %f184;
	and.b32  	%r44, %r43, -2147483648;
	or.b32  	%r45, %r44, 1123811328;
	mov.b32 	%f186, %r45;
	selp.f32 	%f187, %f186, %f184, %p31;
	mov.f32 	%f188, 0fBF317218;
	fma.rn.f32 	%f189, %f187, %f188, %f181;
	mov.f32 	%f190, 0f3102E308;
	fma.rn.f32 	%f191, %f187, %f190, %f189;
	mul.f32 	%f192, %f191, 0f3FB8AA3B;
	add.f32 	%f193, %f187, 0f4B40007F;
	mov.b32 	%r46, %f193;
	shl.b32 	%r47, %r46, 23;
	mov.b32 	%f194, %r47;
	ex2.approx.ftz.f32 	%f195, %f192;
	mul.f32 	%f22, %f195, %f194;
	setp.eq.f32 	%p32, %f22, 0f7F800000;
	mov.f32 	%f216, 0f7F800000;
	@%p32 bra 	$L__BB28_21;

	fma.rn.f32 	%f216, %f22, %f21, %f22;

$L__BB28_21:
	setp.eq.f32 	%p33, %f19, 0f00000000;
	@%p33 bra 	$L__BB28_25;
	bra.uni 	$L__BB28_22;

$L__BB28_25:
	setp.lt.f32 	%p37, %f1, 0f00000000;
	add.f32 	%f199, %f19, %f19;
	mov.b32 	%r50, %f199;
	or.b32  	%r51, %r50, 2139095040;
	selp.b32 	%r52, %r51, %r50, %p37;
	mov.b32 	%f218, %r52;
	bra.uni 	$L__BB28_26;

$L__BB28_22:
	setp.geu.f32 	%p34, %f19, 0f00000000;
	setp.lt.f32 	%p35, %f19, 0f00000000;
	mov.b32 	%r48, %f216;
	xor.b32  	%r49, %r48, -2147483648;
	mov.b32 	%f196, %r49;
	selp.f32 	%f218, %f196, %f216, %p35;
	@%p34 bra 	$L__BB28_26;

	cvt.rzi.f32.f32 	%f197, %f1;
	setp.eq.f32 	%p36, %f197, %f1;
	@%p36 bra 	$L__BB28_26;

	mov.f32 	%f218, 0f7FFFFFFF;

$L__BB28_26:
	abs.f32 	%f207, %f19;
	add.f32 	%f200, %f207, %f2;
	mov.b32 	%r53, %f200;
	setp.lt.s32 	%p38, %r53, 2139095040;
	@%p38 bra 	$L__BB28_33;

	abs.f32 	%f208, %f19;
	setp.gtu.f32 	%p39, %f2, 0f7F800000;
	setp.gtu.f32 	%p40, %f208, 0f7F800000;
	or.pred  	%p41, %p40, %p39;
	@%p41 bra 	$L__BB28_32;
	bra.uni 	$L__BB28_28;

$L__BB28_32:
	add.f32 	%f218, %f19, %f1;
	bra.uni 	$L__BB28_33;

$L__BB28_28:
	setp.eq.f32 	%p42, %f2, 0f7F800000;
	@%p42 bra 	$L__BB28_31;
	bra.uni 	$L__BB28_29;

$L__BB28_31:
	abs.f32 	%f210, %f19;
	setp.lt.f32 	%p45, %f1, 0f00000000;
	setp.gt.f32 	%p46, %f210, 0f3F800000;
	selp.b32 	%r55, 2139095040, 0, %p46;
	xor.b32  	%r56, %r55, 2139095040;
	selp.b32 	%r57, %r56, %r55, %p45;
	mov.b32 	%f201, %r57;
	setp.eq.f32 	%p47, %f19, 0fBF800000;
	selp.f32 	%f218, 0f3F800000, %f201, %p47;
	bra.uni 	$L__BB28_33;

$L__BB28_29:
	abs.f32 	%f209, %f19;
	setp.neu.f32 	%p43, %f209, 0f7F800000;
	@%p43 bra 	$L__BB28_33;

	setp.lt.f32 	%p44, %f19, 0f00000000;
	selp.b32 	%r54, %r6, %r3, %p44;
	mov.b32 	%f218, %r54;

$L__BB28_33:
	setp.eq.f32 	%p48, %f19, 0f3F800000;
	setp.eq.f32 	%p49, %f1, 0f00000000;
	or.pred  	%p50, %p49, %p48;
	selp.f32 	%f202, 0f3F800000, %f218, %p50;
	add.f32 	%f215, %f215, %f202;
	st.global.f32 	[%rd1], %f215;
	add.s64 	%rd13, %rd13, 4;
	add.s32 	%r59, %r59, 1;
	setp.lt.s32 	%p51, %r59, %r2;
	@%p51 bra 	$L__BB28_19;
	bra.uni 	$L__BB28_34;

$L__BB28_3:
	setp.lt.f32 	%p6, %f1, 0f00000000;
	mov.f32 	%f39, 0f00000000;
	selp.f32 	%f4, 0f7F800000, 0f00000000, %p6;
	mov.b32 	%f5, %r3;
	mov.u32 	%r58, 0;
	mov.f32 	%f211, %f39;

$L__BB28_4:
	ld.global.f32 	%f7, [%rd13];
	abs.f32 	%f8, %f7;
	setp.lt.f32 	%p7, %f8, 0f00800000;
	mul.f32 	%f41, %f8, 0f4B800000;
	selp.f32 	%f42, %f41, %f8, %p7;
	selp.f32 	%f43, 0fC3170000, 0fC2FE0000, %p7;
	mov.b32 	%r21, %f42;
	and.b32  	%r22, %r21, 8388607;
	or.b32  	%r23, %r22, 1065353216;
	mov.b32 	%f44, %r23;
	shr.u32 	%r24, %r21, 23;
	cvt.rn.f32.u32 	%f45, %r24;
	add.f32 	%f46, %f43, %f45;
	setp.gt.f32 	%p8, %f44, 0f3FB504F3;
	mul.f32 	%f47, %f44, 0f3F000000;
	add.f32 	%f48, %f46, 0f3F800000;
	selp.f32 	%f49, %f48, %f46, %p8;
	selp.f32 	%f50, %f47, %f44, %p8;
	add.f32 	%f51, %f50, 0fBF800000;
	add.f32 	%f52, %f50, 0f3F800000;
	rcp.approx.ftz.f32 	%f53, %f52;
	add.f32 	%f54, %f51, %f51;
	mul.f32 	%f55, %f54, %f53;
	mul.f32 	%f56, %f55, %f55;
	mov.f32 	%f57, 0f3C4CAF63;
	mov.f32 	%f58, 0f3B18F0FE;
	fma.rn.f32 	%f59, %f58, %f56, %f57;
	mov.f32 	%f60, 0f3DAAAABD;
	fma.rn.f32 	%f61, %f59, %f56, %f60;
	mul.rn.f32 	%f62, %f61, %f56;
	mul.rn.f32 	%f63, %f62, %f55;
	sub.f32 	%f64, %f51, %f55;
	add.f32 	%f65, %f64, %f64;
	neg.f32 	%f66, %f55;
	fma.rn.f32 	%f67, %f66, %f51, %f65;
	mul.rn.f32 	%f68, %f53, %f67;
	add.f32 	%f69, %f63, %f55;
	sub.f32 	%f70, %f55, %f69;
	add.f32 	%f71, %f63, %f70;
	add.f32 	%f72, %f68, %f71;
	add.f32 	%f73, %f69, %f72;
	sub.f32 	%f74, %f69, %f73;
	add.f32 	%f75, %f72, %f74;
	mov.f32 	%f76, 0f3F317200;
	mul.rn.f32 	%f77, %f49, %f76;
	mov.f32 	%f78, 0f35BFBE8E;
	mul.rn.f32 	%f79, %f49, %f78;
	add.f32 	%f80, %f77, %f73;
	sub.f32 	%f81, %f77, %f80;
	add.f32 	%f82, %f73, %f81;
	add.f32 	%f83, %f75, %f82;
	add.f32 	%f84, %f79, %f83;
	add.f32 	%f85, %f80, %f84;
	sub.f32 	%f86, %f80, %f85;
	add.f32 	%f87, %f84, %f86;
	mul.rn.f32 	%f88, %f3, %f85;
	neg.f32 	%f89, %f88;
	fma.rn.f32 	%f90, %f3, %f85, %f89;
	fma.rn.f32 	%f91, %f3, %f87, %f90;
	fma.rn.f32 	%f93, %f39, %f85, %f91;
	add.rn.f32 	%f94, %f88, %f93;
	neg.f32 	%f95, %f94;
	add.rn.f32 	%f96, %f88, %f95;
	add.rn.f32 	%f97, %f96, %f93;
	mov.b32 	%r25, %f94;
	setp.eq.s32 	%p9, %r25, 1118925336;
	add.s32 	%r26, %r25, -1;
	mov.b32 	%f98, %r26;
	add.f32 	%f99, %f97, 0f37000000;
	selp.f32 	%f9, %f99, %f97, %p9;
	selp.f32 	%f100, %f98, %f94, %p9;
	mov.f32 	%f101, 0f3FB8AA3B;
	mul.rn.f32 	%f102, %f100, %f101;
	cvt.rzi.f32.f32 	%f103, %f102;
	abs.f32 	%f104, %f103;
	setp.gt.f32 	%p10, %f104, 0f42FC0000;
	mov.b32 	%r27, %f103;
	and.b32  	%r28, %r27, -2147483648;
	or.b32  	%r29, %r28, 1123811328;
	mov.b32 	%f105, %r29;
	selp.f32 	%f106, %f105, %f103, %p10;
	mov.f32 	%f107, 0fBF317218;
	fma.rn.f32 	%f108, %f106, %f107, %f100;
	mov.f32 	%f109, 0f3102E308;
	fma.rn.f32 	%f110, %f106, %f109, %f108;
	mul.f32 	%f111, %f110, 0f3FB8AA3B;
	add.f32 	%f112, %f106, 0f4B40007F;
	mov.b32 	%r30, %f112;
	shl.b32 	%r31, %r30, 23;
	mov.b32 	%f113, %r31;
	ex2.approx.ftz.f32 	%f114, %f111;
	mul.f32 	%f10, %f114, %f113;
	setp.eq.f32 	%p11, %f10, 0f7F800000;
	mov.f32 	%f212, 0f7F800000;
	@%p11 bra 	$L__BB28_6;

	fma.rn.f32 	%f212, %f10, %f9, %f10;

$L__BB28_6:
	setp.eq.f32 	%p12, %f7, 0f00000000;
	mov.f32 	%f214, %f4;
	@%p12 bra 	$L__BB28_10;

	setp.geu.f32 	%p13, %f7, 0f00000000;
	mov.f32 	%f214, %f212;
	@%p13 bra 	$L__BB28_10;

	cvt.rzi.f32.f32 	%f115, %f1;
	setp.eq.f32 	%p14, %f115, %f1;
	mov.f32 	%f214, %f212;
	@%p14 bra 	$L__BB28_10;

	mov.f32 	%f214, 0f7FFFFFFF;

$L__BB28_10:
	abs.f32 	%f203, %f7;
	add.f32 	%f117, %f203, %f2;
	mov.b32 	%r32, %f117;
	setp.lt.s32 	%p15, %r32, 2139095040;
	@%p15 bra 	$L__BB28_17;

	abs.f32 	%f204, %f7;
	setp.gtu.f32 	%p16, %f2, 0f7F800000;
	setp.gtu.f32 	%p17, %f204, 0f7F800000;
	or.pred  	%p18, %p17, %p16;
	@%p18 bra 	$L__BB28_16;
	bra.uni 	$L__BB28_12;

$L__BB28_16:
	add.f32 	%f214, %f7, %f1;
	bra.uni 	$L__BB28_17;

$L__BB28_12:
	setp.eq.f32 	%p19, %f2, 0f7F800000;
	@%p19 bra 	$L__BB28_15;
	bra.uni 	$L__BB28_13;

$L__BB28_15:
	abs.f32 	%f206, %f7;
	setp.gt.f32 	%p22, %f206, 0f3F800000;
	selp.b32 	%r33, 2139095040, 0, %p22;
	xor.b32  	%r34, %r33, 2139095040;
	selp.b32 	%r35, %r34, %r33, %p6;
	mov.b32 	%f118, %r35;
	setp.eq.f32 	%p23, %f7, 0fBF800000;
	selp.f32 	%f214, 0f3F800000, %f118, %p23;
	bra.uni 	$L__BB28_17;

$L__BB28_13:
	abs.f32 	%f205, %f7;
	setp.neu.f32 	%p20, %f205, 0f7F800000;
	@%p20 bra 	$L__BB28_17;

	mov.f32 	%f214, %f5;

$L__BB28_17:
	setp.eq.f32 	%p24, %f7, 0f3F800000;
	setp.eq.f32 	%p25, %f1, 0f00000000;
	or.pred  	%p26, %p25, %p24;
	selp.f32 	%f119, 0f3F800000, %f214, %p26;
	add.f32 	%f211, %f211, %f119;
	st.global.f32 	[%rd1], %f211;
	add.s64 	%rd13, %rd13, 4;
	add.s32 	%r58, %r58, 1;
	setp.lt.s32 	%p27, %r58, %r2;
	@%p27 bra 	$L__BB28_4;

$L__BB28_34:
	ret;

}
	// .globl	max_kernel
.visible .entry max_kernel(
	.param .u32 max_kernel_param_0,
	.param .u64 max_kernel_param_1,
	.param .u64 max_kernel_param_2
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<25>;
	.reg .b32 	%r<25>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r10, [max_kernel_param_0];
	ld.param.u64 	%rd8, [max_kernel_param_1];
	ld.param.u64 	%rd7, [max_kernel_param_2];
	cvta.to.global.u64 	%rd1, %rd8;
	mov.u32 	%r11, %nctaid.x;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %ctaid.x;
	mad.lo.s32 	%r14, %r12, %r11, %r13;
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %tid.x;
	mad.lo.s32 	%r17, %r14, %r15, %r16;
	setp.gt.s32 	%p1, %r17, 0;
	@%p1 bra 	$L__BB29_9;

	setp.lt.s32 	%p2, %r10, 1;
	mov.f32 	%f24, 0fFF7FFFFF;
	@%p2 bra 	$L__BB29_8;

	add.s32 	%r19, %r10, -1;
	and.b32  	%r24, %r10, 3;
	setp.lt.u32 	%p3, %r19, 3;
	mov.f32 	%f24, 0fFF7FFFFF;
	mov.u32 	%r23, 0;
	@%p3 bra 	$L__BB29_5;

	sub.s32 	%r22, %r10, %r24;
	mov.u64 	%rd11, %rd1;

$L__BB29_4:
	ld.global.f32 	%f12, [%rd11];
	setp.le.f32 	%p4, %f24, %f12;
	selp.f32 	%f13, %f12, %f24, %p4;
	ld.global.f32 	%f14, [%rd11+4];
	setp.le.f32 	%p5, %f13, %f14;
	selp.f32 	%f15, %f14, %f13, %p5;
	ld.global.f32 	%f16, [%rd11+8];
	setp.le.f32 	%p6, %f15, %f16;
	selp.f32 	%f17, %f16, %f15, %p6;
	ld.global.f32 	%f18, [%rd11+12];
	setp.le.f32 	%p7, %f17, %f18;
	selp.f32 	%f24, %f18, %f17, %p7;
	add.s32 	%r23, %r23, 4;
	add.s64 	%rd11, %rd11, 16;
	add.s32 	%r22, %r22, -4;
	setp.ne.s32 	%p8, %r22, 0;
	@%p8 bra 	$L__BB29_4;

$L__BB29_5:
	setp.eq.s32 	%p9, %r24, 0;
	@%p9 bra 	$L__BB29_8;

	mul.wide.s32 	%rd9, %r23, 4;
	add.s64 	%rd12, %rd1, %rd9;

$L__BB29_7:
	.pragma "nounroll";
	ld.global.f32 	%f19, [%rd12];
	setp.le.f32 	%p10, %f24, %f19;
	selp.f32 	%f24, %f19, %f24, %p10;
	add.s64 	%rd12, %rd12, 4;
	add.s32 	%r24, %r24, -1;
	setp.ne.s32 	%p11, %r24, 0;
	@%p11 bra 	$L__BB29_7;

$L__BB29_8:
	cvta.to.global.u64 	%rd10, %rd7;
	st.global.f32 	[%rd10], %f24;

$L__BB29_9:
	ret;

}
	// .globl	max_channel_kernel
.visible .entry max_channel_kernel(
	.param .u32 max_channel_kernel_param_0,
	.param .u64 max_channel_kernel_param_1,
	.param .u64 max_channel_kernel_param_2,
	.param .u32 max_channel_kernel_param_3,
	.param .u32 max_channel_kernel_param_4,
	.param .u32 max_channel_kernel_param_5
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<25>;
	.reg .b32 	%r<32>;
	.reg .b64 	%rd<18>;


	ld.param.u32 	%r16, [max_channel_kernel_param_0];
	ld.param.u64 	%rd9, [max_channel_kernel_param_1];
	ld.param.u64 	%rd8, [max_channel_kernel_param_2];
	ld.param.u32 	%r13, [max_channel_kernel_param_3];
	ld.param.u32 	%r14, [max_channel_kernel_param_4];
	ld.param.u32 	%r15, [max_channel_kernel_param_5];
	cvta.to.global.u64 	%rd1, %rd9;
	mov.u32 	%r17, %nctaid.x;
	mov.u32 	%r18, %ctaid.y;
	mov.u32 	%r19, %ctaid.x;
	mad.lo.s32 	%r20, %r18, %r17, %r19;
	mov.u32 	%r21, %ntid.x;
	mov.u32 	%r22, %tid.x;
	mad.lo.s32 	%r1, %r20, %r21, %r22;
	setp.ge.s32 	%p1, %r1, %r16;
	@%p1 bra 	$L__BB30_9;

	mul.lo.s32 	%r23, %r14, %r13;
	mul.lo.s32 	%r2, %r23, %r15;
	setp.lt.s32 	%p2, %r2, 1;
	mov.f32 	%f24, 0fFF7FFFFF;
	@%p2 bra 	$L__BB30_8;

	mul.lo.s32 	%r3, %r2, %r1;
	and.b32  	%r31, %r2, 3;
	add.s32 	%r25, %r2, -1;
	setp.lt.u32 	%p3, %r25, 3;
	mov.f32 	%f24, 0fFF7FFFFF;
	mov.u32 	%r30, 0;
	@%p3 bra 	$L__BB30_5;

	sub.s32 	%r29, %r2, %r31;
	mul.wide.s32 	%rd10, %r3, 4;
	add.s64 	%rd11, %rd1, %rd10;
	add.s64 	%rd16, %rd11, 8;

$L__BB30_4:
	ld.global.f32 	%f12, [%rd16+-8];
	setp.le.f32 	%p4, %f24, %f12;
	selp.f32 	%f13, %f12, %f24, %p4;
	ld.global.f32 	%f14, [%rd16+-4];
	setp.le.f32 	%p5, %f13, %f14;
	selp.f32 	%f15, %f14, %f13, %p5;
	ld.global.f32 	%f16, [%rd16];
	setp.le.f32 	%p6, %f15, %f16;
	selp.f32 	%f17, %f16, %f15, %p6;
	ld.global.f32 	%f18, [%rd16+4];
	setp.le.f32 	%p7, %f17, %f18;
	selp.f32 	%f24, %f18, %f17, %p7;
	add.s32 	%r30, %r30, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r29, %r29, -4;
	setp.ne.s32 	%p8, %r29, 0;
	@%p8 bra 	$L__BB30_4;

$L__BB30_5:
	setp.eq.s32 	%p9, %r31, 0;
	@%p9 bra 	$L__BB30_8;

	add.s32 	%r27, %r30, %r3;
	mul.wide.s32 	%rd12, %r27, 4;
	add.s64 	%rd17, %rd1, %rd12;

$L__BB30_7:
	.pragma "nounroll";
	ld.global.f32 	%f19, [%rd17];
	setp.le.f32 	%p10, %f24, %f19;
	selp.f32 	%f24, %f19, %f24, %p10;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r31, %r31, -1;
	setp.ne.s32 	%p11, %r31, 0;
	@%p11 bra 	$L__BB30_7;

$L__BB30_8:
	cvta.to.global.u64 	%rd13, %rd8;
	mul.wide.s32 	%rd14, %r1, 4;
	add.s64 	%rd15, %rd13, %rd14;
	st.global.f32 	[%rd15], %f24;

$L__BB30_9:
	ret;

}
	// .globl	max_backward_kernel
.visible .entry max_backward_kernel(
	.param .u32 max_backward_kernel_param_0,
	.param .u64 max_backward_kernel_param_1,
	.param .u64 max_backward_kernel_param_2,
	.param .u64 max_backward_kernel_param_3
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<22>;
	.reg .b32 	%r<51>;
	.reg .b64 	%rd<17>;


	ld.param.u32 	%r20, [max_backward_kernel_param_0];
	ld.param.u64 	%rd7, [max_backward_kernel_param_1];
	ld.param.u64 	%rd9, [max_backward_kernel_param_2];
	ld.param.u64 	%rd8, [max_backward_kernel_param_3];
	cvta.to.global.u64 	%rd1, %rd9;
	mov.u32 	%r21, %nctaid.x;
	mov.u32 	%r22, %ctaid.y;
	mov.u32 	%r23, %ctaid.x;
	mad.lo.s32 	%r24, %r22, %r21, %r23;
	mov.u32 	%r25, %ntid.x;
	mov.u32 	%r26, %tid.x;
	mad.lo.s32 	%r27, %r24, %r25, %r26;
	setp.gt.s32 	%p1, %r27, 0;
	@%p1 bra 	$L__BB31_9;

	setp.lt.s32 	%p2, %r20, 1;
	mov.u32 	%r50, 0;
	@%p2 bra 	$L__BB31_8;

	add.s32 	%r32, %r20, -1;
	and.b32  	%r49, %r20, 3;
	setp.lt.u32 	%p3, %r32, 3;
	mov.f32 	%f20, 0fFF7FFFFF;
	mov.u32 	%r45, 0;
	mov.u32 	%r50, %r45;
	@%p3 bra 	$L__BB31_5;

	sub.s32 	%r43, %r20, %r49;
	mov.u64 	%rd15, %rd1;

$L__BB31_4:
	ld.global.f32 	%f8, [%rd15];
	setp.gtu.f32 	%p4, %f20, %f8;
	selp.f32 	%f9, %f20, %f8, %p4;
	selp.b32 	%r35, %r50, %r45, %p4;
	ld.global.f32 	%f10, [%rd15+4];
	setp.gtu.f32 	%p5, %f9, %f10;
	selp.f32 	%f11, %f9, %f10, %p5;
	add.s32 	%r36, %r45, 1;
	selp.b32 	%r37, %r35, %r36, %p5;
	ld.global.f32 	%f12, [%rd15+8];
	setp.gtu.f32 	%p6, %f11, %f12;
	selp.f32 	%f13, %f11, %f12, %p6;
	add.s32 	%r38, %r45, 2;
	selp.b32 	%r39, %r37, %r38, %p6;
	ld.global.f32 	%f14, [%rd15+12];
	setp.gtu.f32 	%p7, %f13, %f14;
	selp.f32 	%f20, %f13, %f14, %p7;
	add.s32 	%r40, %r45, 3;
	selp.b32 	%r50, %r39, %r40, %p7;
	add.s32 	%r45, %r45, 4;
	add.s64 	%rd15, %rd15, 16;
	add.s32 	%r43, %r43, -4;
	setp.ne.s32 	%p8, %r43, 0;
	@%p8 bra 	$L__BB31_4;

$L__BB31_5:
	setp.eq.s32 	%p9, %r49, 0;
	@%p9 bra 	$L__BB31_8;

	mul.wide.s32 	%rd10, %r45, 4;
	add.s64 	%rd16, %rd1, %rd10;

$L__BB31_7:
	.pragma "nounroll";
	ld.global.f32 	%f15, [%rd16];
	setp.gtu.f32 	%p10, %f20, %f15;
	selp.f32 	%f20, %f20, %f15, %p10;
	selp.b32 	%r50, %r50, %r45, %p10;
	add.s32 	%r45, %r45, 1;
	add.s64 	%rd16, %rd16, 4;
	add.s32 	%r49, %r49, -1;
	setp.ne.s32 	%p11, %r49, 0;
	@%p11 bra 	$L__BB31_7;

$L__BB31_8:
	cvta.to.global.u64 	%rd11, %rd8;
	mul.wide.s32 	%rd12, %r50, 4;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.f32 	%f16, [%rd13];
	cvta.to.global.u64 	%rd14, %rd7;
	ld.global.f32 	%f17, [%rd14];
	add.f32 	%f18, %f17, %f16;
	st.global.f32 	[%rd13], %f18;

$L__BB31_9:
	ret;

}
	// .globl	max_channel_backward_kernel
.visible .entry max_channel_backward_kernel(
	.param .u32 max_channel_backward_kernel_param_0,
	.param .u64 max_channel_backward_kernel_param_1,
	.param .u64 max_channel_backward_kernel_param_2,
	.param .u64 max_channel_backward_kernel_param_3,
	.param .u32 max_channel_backward_kernel_param_4,
	.param .u32 max_channel_backward_kernel_param_5,
	.param .u32 max_channel_backward_kernel_param_6
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<22>;
	.reg .b32 	%r<58>;
	.reg .b64 	%rd<18>;


	ld.param.u32 	%r26, [max_channel_backward_kernel_param_0];
	ld.param.u64 	%rd5, [max_channel_backward_kernel_param_1];
	ld.param.u64 	%rd7, [max_channel_backward_kernel_param_2];
	ld.param.u64 	%rd6, [max_channel_backward_kernel_param_3];
	ld.param.u32 	%r23, [max_channel_backward_kernel_param_4];
	ld.param.u32 	%r24, [max_channel_backward_kernel_param_5];
	ld.param.u32 	%r25, [max_channel_backward_kernel_param_6];
	cvta.to.global.u64 	%rd1, %rd7;
	mov.u32 	%r27, %nctaid.x;
	mov.u32 	%r28, %ctaid.y;
	mov.u32 	%r29, %ctaid.x;
	mad.lo.s32 	%r30, %r28, %r27, %r29;
	mov.u32 	%r31, %ntid.x;
	mov.u32 	%r32, %tid.x;
	mad.lo.s32 	%r1, %r30, %r31, %r32;
	setp.ge.s32 	%p1, %r1, %r26;
	@%p1 bra 	$L__BB32_9;

	mul.lo.s32 	%r34, %r24, %r23;
	mul.lo.s32 	%r2, %r34, %r25;
	setp.lt.s32 	%p2, %r2, 1;
	mov.u32 	%r57, 0;
	@%p2 bra 	$L__BB32_8;

	mul.lo.s32 	%r3, %r2, %r1;
	and.b32  	%r56, %r2, 3;
	add.s32 	%r38, %r2, -1;
	setp.lt.u32 	%p3, %r38, 3;
	mov.f32 	%f20, 0fFF7FFFFF;
	mov.u32 	%r52, 0;
	mov.u32 	%r57, %r52;
	@%p3 bra 	$L__BB32_5;

	sub.s32 	%r50, %r2, %r56;

$L__BB32_4:
	add.s32 	%r41, %r52, %r3;
	mul.wide.s32 	%rd8, %r41, 4;
	add.s64 	%rd9, %rd1, %rd8;
	ld.global.f32 	%f8, [%rd9];
	setp.gtu.f32 	%p4, %f20, %f8;
	selp.f32 	%f9, %f20, %f8, %p4;
	selp.b32 	%r42, %r57, %r41, %p4;
	add.s32 	%r43, %r41, 1;
	ld.global.f32 	%f10, [%rd9+4];
	setp.gtu.f32 	%p5, %f9, %f10;
	selp.f32 	%f11, %f9, %f10, %p5;
	selp.b32 	%r44, %r42, %r43, %p5;
	add.s32 	%r45, %r41, 2;
	ld.global.f32 	%f12, [%rd9+8];
	setp.gtu.f32 	%p6, %f11, %f12;
	selp.f32 	%f13, %f11, %f12, %p6;
	selp.b32 	%r46, %r44, %r45, %p6;
	add.s32 	%r47, %r41, 3;
	ld.global.f32 	%f14, [%rd9+12];
	setp.gtu.f32 	%p7, %f13, %f14;
	selp.f32 	%f20, %f13, %f14, %p7;
	selp.b32 	%r57, %r46, %r47, %p7;
	add.s32 	%r52, %r52, 4;
	add.s32 	%r50, %r50, -4;
	setp.ne.s32 	%p8, %r50, 0;
	@%p8 bra 	$L__BB32_4;

$L__BB32_5:
	setp.eq.s32 	%p9, %r56, 0;
	@%p9 bra 	$L__BB32_8;

	add.s32 	%r54, %r52, %r3;
	mul.wide.s32 	%rd10, %r54, 4;
	add.s64 	%rd17, %rd1, %rd10;

$L__BB32_7:
	.pragma "nounroll";
	ld.global.f32 	%f15, [%rd17];
	setp.gtu.f32 	%p10, %f20, %f15;
	selp.f32 	%f20, %f20, %f15, %p10;
	selp.b32 	%r57, %r57, %r54, %p10;
	add.s32 	%r54, %r54, 1;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r56, %r56, -1;
	setp.ne.s32 	%p11, %r56, 0;
	@%p11 bra 	$L__BB32_7;

$L__BB32_8:
	cvta.to.global.u64 	%rd11, %rd5;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd13, %rd11, %rd12;
	cvta.to.global.u64 	%rd14, %rd6;
	mul.wide.s32 	%rd15, %r57, 4;
	add.s64 	%rd16, %rd14, %rd15;
	ld.global.f32 	%f16, [%rd16];
	ld.global.f32 	%f17, [%rd13];
	add.f32 	%f18, %f17, %f16;
	st.global.f32 	[%rd16], %f18;

$L__BB32_9:
	ret;

}
	// .globl	add_scalar_kernel
.visible .entry add_scalar_kernel(
	.param .u32 add_scalar_kernel_param_0,
	.param .u64 add_scalar_kernel_param_1,
	.param .f32 add_scalar_kernel_param_2,
	.param .u64 add_scalar_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [add_scalar_kernel_param_0];
	ld.param.u64 	%rd1, [add_scalar_kernel_param_1];
	ld.param.f32 	%f1, [add_scalar_kernel_param_2];
	ld.param.u64 	%rd2, [add_scalar_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB33_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f3;

$L__BB33_2:
	ret;

}
	// .globl	add_number_kernel
.visible .entry add_number_kernel(
	.param .u32 add_number_kernel_param_0,
	.param .u64 add_number_kernel_param_1,
	.param .u64 add_number_kernel_param_2,
	.param .u32 add_number_kernel_param_3,
	.param .u32 add_number_kernel_param_4,
	.param .u32 add_number_kernel_param_5,
	.param .u32 add_number_kernel_param_6,
	.param .u32 add_number_kernel_param_7
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<27>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r6, [add_number_kernel_param_0];
	ld.param.u64 	%rd1, [add_number_kernel_param_1];
	ld.param.u64 	%rd2, [add_number_kernel_param_2];
	ld.param.u32 	%r2, [add_number_kernel_param_4];
	ld.param.u32 	%r3, [add_number_kernel_param_5];
	ld.param.u32 	%r4, [add_number_kernel_param_6];
	ld.param.u32 	%r5, [add_number_kernel_param_7];
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %nctaid.x;
	mov.u32 	%r9, %ctaid.y;
	mad.lo.s32 	%r10, %r9, %r8, %r7;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r1, %r10, %r11, %r12;
	setp.ge.s32 	%p1, %r1, %r6;
	@%p1 bra 	$L__BB34_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.lo.s32 	%r13, %r3, %r2;
	mul.lo.s32 	%r14, %r13, %r4;
	div.s32 	%r15, %r1, %r14;
	add.s32 	%r16, %r15, %r5;
	div.s32 	%r17, %r1, %r3;
	div.s32 	%r18, %r17, %r4;
	rem.s32 	%r19, %r18, %r2;
	div.s32 	%r20, %r1, %r4;
	rem.s32 	%r21, %r20, %r3;
	mad.lo.s32 	%r22, %r19, %r3, %r21;
	mul.lo.s32 	%r23, %r20, %r4;
	sub.s32 	%r24, %r1, %r23;
	mad.lo.s32 	%r25, %r16, %r14, %r24;
	mad.lo.s32 	%r26, %r22, %r4, %r25;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.s32 	%rd7, %r26, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd5];
	add.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd8], %f3;

$L__BB34_2:
	ret;

}
	// .globl	add_channel_kernel
.visible .entry add_channel_kernel(
	.param .u32 add_channel_kernel_param_0,
	.param .u64 add_channel_kernel_param_1,
	.param .u64 add_channel_kernel_param_2,
	.param .u32 add_channel_kernel_param_3,
	.param .u32 add_channel_kernel_param_4,
	.param .u32 add_channel_kernel_param_5,
	.param .u32 add_channel_kernel_param_6,
	.param .u32 add_channel_kernel_param_7
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<31>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r2, [add_channel_kernel_param_0];
	ld.param.u64 	%rd1, [add_channel_kernel_param_1];
	ld.param.u64 	%rd2, [add_channel_kernel_param_2];
	ld.param.u32 	%r3, [add_channel_kernel_param_3];
	ld.param.u32 	%r4, [add_channel_kernel_param_4];
	ld.param.u32 	%r5, [add_channel_kernel_param_5];
	ld.param.u32 	%r6, [add_channel_kernel_param_6];
	ld.param.u32 	%r7, [add_channel_kernel_param_7];
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %nctaid.x;
	mov.u32 	%r10, %ctaid.y;
	mad.lo.s32 	%r11, %r10, %r9, %r8;
	mov.u32 	%r12, %ntid.x;
	mov.u32 	%r13, %tid.x;
	mad.lo.s32 	%r1, %r11, %r12, %r13;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB35_2;

	cvta.to.global.u64 	%rd3, %rd2;
	div.s32 	%r14, %r2, %r3;
	div.s32 	%r15, %r14, %r5;
	div.s32 	%r16, %r15, %r6;
	mul.lo.s32 	%r17, %r6, %r5;
	mul.lo.s32 	%r18, %r17, %r16;
	div.s32 	%r19, %r1, %r18;
	div.s32 	%r20, %r1, %r5;
	div.s32 	%r21, %r20, %r6;
	rem.s32 	%r22, %r21, %r16;
	div.s32 	%r23, %r1, %r6;
	rem.s32 	%r24, %r23, %r5;
	mad.lo.s32 	%r25, %r19, %r4, %r7;
	add.s32 	%r26, %r25, %r22;
	mad.lo.s32 	%r27, %r26, %r5, %r24;
	mul.lo.s32 	%r28, %r23, %r6;
	sub.s32 	%r29, %r1, %r28;
	mad.lo.s32 	%r30, %r27, %r6, %r29;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.s32 	%rd7, %r30, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd5];
	add.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd8], %f3;

$L__BB35_2:
	ret;

}
	// .globl	sub_kernel
.visible .entry sub_kernel(
	.param .u32 sub_kernel_param_0,
	.param .u64 sub_kernel_param_1,
	.param .u64 sub_kernel_param_2,
	.param .u64 sub_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [sub_kernel_param_0];
	ld.param.u64 	%rd1, [sub_kernel_param_1];
	ld.param.u64 	%rd2, [sub_kernel_param_2];
	ld.param.u64 	%rd3, [sub_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB36_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	sub.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB36_2:
	ret;

}
	// .globl	sub_axis_kernel
.visible .entry sub_axis_kernel(
	.param .u32 sub_axis_kernel_param_0,
	.param .u64 sub_axis_kernel_param_1,
	.param .u64 sub_axis_kernel_param_2,
	.param .u64 sub_axis_kernel_param_3,
	.param .u32 sub_axis_kernel_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<12>;


	ld.param.u32 	%r3, [sub_axis_kernel_param_0];
	ld.param.u64 	%rd1, [sub_axis_kernel_param_1];
	ld.param.u64 	%rd2, [sub_axis_kernel_param_2];
	ld.param.u64 	%rd3, [sub_axis_kernel_param_3];
	ld.param.u32 	%r2, [sub_axis_kernel_param_4];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %nctaid.x;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r6, %r5, %r4;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB37_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	div.s32 	%r10, %r1, %r2;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r10, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd6];
	sub.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	st.global.f32 	[%rd11], %f3;

$L__BB37_2:
	ret;

}
	// .globl	sub_scalar_kernel
.visible .entry sub_scalar_kernel(
	.param .u32 sub_scalar_kernel_param_0,
	.param .u64 sub_scalar_kernel_param_1,
	.param .f32 sub_scalar_kernel_param_2,
	.param .u64 sub_scalar_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [sub_scalar_kernel_param_0];
	ld.param.u64 	%rd1, [sub_scalar_kernel_param_1];
	ld.param.f32 	%f1, [sub_scalar_kernel_param_2];
	ld.param.u64 	%rd2, [sub_scalar_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB38_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	sub.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f3;

$L__BB38_2:
	ret;

}
	// .globl	scalar_sub_kernel
.visible .entry scalar_sub_kernel(
	.param .u32 scalar_sub_kernel_param_0,
	.param .f32 scalar_sub_kernel_param_1,
	.param .u64 scalar_sub_kernel_param_2,
	.param .u64 scalar_sub_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [scalar_sub_kernel_param_0];
	ld.param.f32 	%f1, [scalar_sub_kernel_param_1];
	ld.param.u64 	%rd1, [scalar_sub_kernel_param_2];
	ld.param.u64 	%rd2, [scalar_sub_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB39_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	sub.f32 	%f3, %f1, %f2;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f3;

$L__BB39_2:
	ret;

}
	// .globl	bool_kernel
.visible .entry bool_kernel(
	.param .u32 bool_kernel_param_0,
	.param .u64 bool_kernel_param_1,
	.param .u64 bool_kernel_param_2,
	.param .u64 bool_kernel_param_3,
	.param .f32 bool_kernel_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<13>;


	ld.param.u32 	%r2, [bool_kernel_param_0];
	ld.param.u64 	%rd3, [bool_kernel_param_1];
	ld.param.u64 	%rd4, [bool_kernel_param_2];
	ld.param.u64 	%rd5, [bool_kernel_param_3];
	ld.param.f32 	%f1, [bool_kernel_param_4];
	mov.u32 	%r3, %nctaid.x;
	mov.u32 	%r4, %ctaid.y;
	mov.u32 	%r5, %ctaid.x;
	mad.lo.s32 	%r6, %r4, %r3, %r5;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB40_4;

	cvta.to.global.u64 	%rd6, %rd5;
	cvt.s64.s32 	%rd1, %r1;
	cvta.to.global.u64 	%rd7, %rd4;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f2, [%rd9];
	setp.eq.f32 	%p2, %f2, 0f3F800000;
	add.s64 	%rd2, %rd6, %rd8;
	@%p2 bra 	$L__BB40_3;
	bra.uni 	$L__BB40_2;

$L__BB40_3:
	st.global.f32 	[%rd2], %f1;
	bra.uni 	$L__BB40_4;

$L__BB40_2:
	cvta.to.global.u64 	%rd10, %rd3;
	shl.b64 	%rd11, %rd1, 2;
	add.s64 	%rd12, %rd10, %rd11;
	ld.global.f32 	%f3, [%rd12];
	st.global.f32 	[%rd2], %f3;

$L__BB40_4:
	ret;

}
	// .globl	mask_kernel
.visible .entry mask_kernel(
	.param .u32 mask_kernel_param_0,
	.param .u64 mask_kernel_param_1,
	.param .u64 mask_kernel_param_2,
	.param .u64 mask_kernel_param_3,
	.param .u32 mask_kernel_param_4,
	.param .f32 mask_kernel_param_5
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<14>;


	ld.param.u32 	%r3, [mask_kernel_param_0];
	ld.param.u64 	%rd3, [mask_kernel_param_1];
	ld.param.u64 	%rd4, [mask_kernel_param_2];
	ld.param.u64 	%rd5, [mask_kernel_param_3];
	ld.param.u32 	%r2, [mask_kernel_param_4];
	ld.param.f32 	%f1, [mask_kernel_param_5];
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mov.u32 	%r6, %ctaid.x;
	mad.lo.s32 	%r7, %r5, %r4, %r6;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB41_4;

	cvta.to.global.u64 	%rd6, %rd5;
	rem.s32 	%r10, %r1, %r2;
	cvta.to.global.u64 	%rd7, %rd4;
	mul.wide.s32 	%rd8, %r10, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f2, [%rd9];
	setp.eq.f32 	%p2, %f2, 0f3F800000;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd10, %r1, 4;
	add.s64 	%rd2, %rd6, %rd10;
	@%p2 bra 	$L__BB41_3;
	bra.uni 	$L__BB41_2;

$L__BB41_3:
	st.global.f32 	[%rd2], %f1;
	bra.uni 	$L__BB41_4;

$L__BB41_2:
	cvta.to.global.u64 	%rd11, %rd3;
	shl.b64 	%rd12, %rd1, 2;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.f32 	%f3, [%rd13];
	st.global.f32 	[%rd2], %f3;

$L__BB41_4:
	ret;

}
	// .globl	mul_kernel
.visible .entry mul_kernel(
	.param .u32 mul_kernel_param_0,
	.param .u64 mul_kernel_param_1,
	.param .u64 mul_kernel_param_2,
	.param .u64 mul_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [mul_kernel_param_0];
	ld.param.u64 	%rd1, [mul_kernel_param_1];
	ld.param.u64 	%rd2, [mul_kernel_param_2];
	ld.param.u64 	%rd3, [mul_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB42_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB42_2:
	ret;

}
	// .globl	mul_scalar_kernel
.visible .entry mul_scalar_kernel(
	.param .u32 mul_scalar_kernel_param_0,
	.param .u64 mul_scalar_kernel_param_1,
	.param .f32 mul_scalar_kernel_param_2,
	.param .u64 mul_scalar_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [mul_scalar_kernel_param_0];
	ld.param.u64 	%rd1, [mul_scalar_kernel_param_1];
	ld.param.f32 	%f1, [mul_scalar_kernel_param_2];
	ld.param.u64 	%rd2, [mul_scalar_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB43_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f3;

$L__BB43_2:
	ret;

}
	// .globl	mul_plus_kernel
.visible .entry mul_plus_kernel(
	.param .u32 mul_plus_kernel_param_0,
	.param .u64 mul_plus_kernel_param_1,
	.param .u64 mul_plus_kernel_param_2,
	.param .u64 mul_plus_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [mul_plus_kernel_param_0];
	ld.param.u64 	%rd1, [mul_plus_kernel_param_1];
	ld.param.u64 	%rd2, [mul_plus_kernel_param_2];
	ld.param.u64 	%rd3, [mul_plus_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB44_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	ld.global.f32 	%f3, [%rd10];
	fma.rn.f32 	%f4, %f2, %f1, %f3;
	st.global.f32 	[%rd10], %f4;

$L__BB44_2:
	ret;

}
	// .globl	mul_plus_scalar_kernel
.visible .entry mul_plus_scalar_kernel(
	.param .u32 mul_plus_scalar_kernel_param_0,
	.param .u64 mul_plus_scalar_kernel_param_1,
	.param .f32 mul_plus_scalar_kernel_param_2,
	.param .u64 mul_plus_scalar_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [mul_plus_scalar_kernel_param_0];
	ld.param.u64 	%rd1, [mul_plus_scalar_kernel_param_1];
	ld.param.f32 	%f1, [mul_plus_scalar_kernel_param_2];
	ld.param.u64 	%rd2, [mul_plus_scalar_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB45_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f3, [%rd7];
	fma.rn.f32 	%f4, %f2, %f1, %f3;
	st.global.f32 	[%rd7], %f4;

$L__BB45_2:
	ret;

}
	// .globl	mul_plus_scalar_axis_kernel
.visible .entry mul_plus_scalar_axis_kernel(
	.param .u32 mul_plus_scalar_axis_kernel_param_0,
	.param .u64 mul_plus_scalar_axis_kernel_param_1,
	.param .f32 mul_plus_scalar_axis_kernel_param_2,
	.param .u64 mul_plus_scalar_axis_kernel_param_3,
	.param .u32 mul_plus_scalar_axis_kernel_param_4
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<18>;


	ld.param.u32 	%r12, [mul_plus_scalar_axis_kernel_param_0];
	ld.param.u64 	%rd10, [mul_plus_scalar_axis_kernel_param_1];
	ld.param.f32 	%f7, [mul_plus_scalar_axis_kernel_param_2];
	ld.param.u64 	%rd9, [mul_plus_scalar_axis_kernel_param_3];
	ld.param.u32 	%r11, [mul_plus_scalar_axis_kernel_param_4];
	cvta.to.global.u64 	%rd1, %rd10;
	mov.u32 	%r13, %nctaid.x;
	mov.u32 	%r14, %ctaid.y;
	mov.u32 	%r15, %ctaid.x;
	mad.lo.s32 	%r16, %r14, %r13, %r15;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32 	%p1, %r1, %r12;
	setp.lt.s32 	%p2, %r11, 1;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB46_7;

	cvta.to.global.u64 	%rd11, %rd9;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd2, %rd11, %rd12;
	and.b32  	%r27, %r11, 3;
	add.s32 	%r20, %r11, -1;
	setp.lt.u32 	%p4, %r20, 3;
	mov.u32 	%r26, 0;
	@%p4 bra 	$L__BB46_4;

	sub.s32 	%r25, %r11, %r27;
	ld.global.f32 	%f16, [%rd2];
	mul.lo.s32 	%r22, %r11, %r1;
	mul.wide.s32 	%rd13, %r22, 4;
	add.s64 	%rd14, %rd1, %rd13;
	add.s64 	%rd16, %rd14, 8;

$L__BB46_3:
	ld.global.f32 	%f8, [%rd16+-8];
	fma.rn.f32 	%f9, %f8, %f7, %f16;
	st.global.f32 	[%rd2], %f9;
	ld.global.f32 	%f10, [%rd16+-4];
	fma.rn.f32 	%f11, %f10, %f7, %f9;
	st.global.f32 	[%rd2], %f11;
	ld.global.f32 	%f12, [%rd16];
	fma.rn.f32 	%f13, %f12, %f7, %f11;
	st.global.f32 	[%rd2], %f13;
	ld.global.f32 	%f14, [%rd16+4];
	fma.rn.f32 	%f16, %f14, %f7, %f13;
	st.global.f32 	[%rd2], %f16;
	add.s32 	%r26, %r26, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r25, %r25, -4;
	setp.ne.s32 	%p5, %r25, 0;
	@%p5 bra 	$L__BB46_3;

$L__BB46_4:
	setp.eq.s32 	%p6, %r27, 0;
	@%p6 bra 	$L__BB46_7;

	ld.global.f32 	%f17, [%rd2];
	mad.lo.s32 	%r23, %r11, %r1, %r26;
	mul.wide.s32 	%rd15, %r23, 4;
	add.s64 	%rd17, %rd1, %rd15;

$L__BB46_6:
	.pragma "nounroll";
	ld.global.f32 	%f15, [%rd17];
	fma.rn.f32 	%f17, %f15, %f7, %f17;
	st.global.f32 	[%rd2], %f17;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r27, %r27, -1;
	setp.ne.s32 	%p7, %r27, 0;
	@%p7 bra 	$L__BB46_6;

$L__BB46_7:
	ret;

}
	// .globl	div_kernel
.visible .entry div_kernel(
	.param .u32 div_kernel_param_0,
	.param .u64 div_kernel_param_1,
	.param .u64 div_kernel_param_2,
	.param .u64 div_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [div_kernel_param_0];
	ld.param.u64 	%rd1, [div_kernel_param_1];
	ld.param.u64 	%rd2, [div_kernel_param_2];
	ld.param.u64 	%rd3, [div_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB47_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	div.rn.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB47_2:
	ret;

}
	// .globl	div_axis_kernel
.visible .entry div_axis_kernel(
	.param .u32 div_axis_kernel_param_0,
	.param .u64 div_axis_kernel_param_1,
	.param .u64 div_axis_kernel_param_2,
	.param .u64 div_axis_kernel_param_3,
	.param .u32 div_axis_kernel_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<12>;


	ld.param.u32 	%r3, [div_axis_kernel_param_0];
	ld.param.u64 	%rd1, [div_axis_kernel_param_1];
	ld.param.u64 	%rd2, [div_axis_kernel_param_2];
	ld.param.u64 	%rd3, [div_axis_kernel_param_3];
	ld.param.u32 	%r2, [div_axis_kernel_param_4];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %nctaid.x;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r6, %r5, %r4;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB48_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	div.s32 	%r10, %r1, %r2;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r10, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd6];
	div.rn.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	st.global.f32 	[%rd11], %f3;

$L__BB48_2:
	ret;

}
	// .globl	div_scalar_kernel
.visible .entry div_scalar_kernel(
	.param .u32 div_scalar_kernel_param_0,
	.param .u64 div_scalar_kernel_param_1,
	.param .f32 div_scalar_kernel_param_2,
	.param .u64 div_scalar_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [div_scalar_kernel_param_0];
	ld.param.u64 	%rd1, [div_scalar_kernel_param_1];
	ld.param.f32 	%f1, [div_scalar_kernel_param_2];
	ld.param.u64 	%rd2, [div_scalar_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB49_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	div.rn.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f3;

$L__BB49_2:
	ret;

}
	// .globl	scalar_div_kernel
.visible .entry scalar_div_kernel(
	.param .u32 scalar_div_kernel_param_0,
	.param .u64 scalar_div_kernel_param_1,
	.param .f32 scalar_div_kernel_param_2,
	.param .u64 scalar_div_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [scalar_div_kernel_param_0];
	ld.param.u64 	%rd1, [scalar_div_kernel_param_1];
	ld.param.f32 	%f1, [scalar_div_kernel_param_2];
	ld.param.u64 	%rd2, [scalar_div_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB50_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	div.rn.f32 	%f3, %f1, %f2;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f3;

$L__BB50_2:
	ret;

}
	// .globl	div_bGrad_kernel
.visible .entry div_bGrad_kernel(
	.param .u32 div_bGrad_kernel_param_0,
	.param .u64 div_bGrad_kernel_param_1,
	.param .u64 div_bGrad_kernel_param_2,
	.param .u64 div_bGrad_kernel_param_3,
	.param .u64 div_bGrad_kernel_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<14>;


	ld.param.u32 	%r2, [div_bGrad_kernel_param_0];
	ld.param.u64 	%rd1, [div_bGrad_kernel_param_1];
	ld.param.u64 	%rd2, [div_bGrad_kernel_param_2];
	ld.param.u64 	%rd3, [div_bGrad_kernel_param_3];
	ld.param.u64 	%rd4, [div_bGrad_kernel_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB51_2;

	cvta.to.global.u64 	%rd5, %rd3;
	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd2;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	mul.f32 	%f3, %f2, %f1;
	add.s64 	%rd11, %rd5, %rd7;
	ld.global.f32 	%f4, [%rd11];
	mul.f32 	%f5, %f4, %f4;
	div.rn.f32 	%f6, %f3, %f5;
	cvta.to.global.u64 	%rd12, %rd4;
	add.s64 	%rd13, %rd12, %rd7;
	ld.global.f32 	%f7, [%rd13];
	sub.f32 	%f8, %f7, %f6;
	st.global.f32 	[%rd13], %f8;

$L__BB51_2:
	ret;

}
	// .globl	div_bGrad_axis_kernel
.visible .entry div_bGrad_axis_kernel(
	.param .u32 div_bGrad_axis_kernel_param_0,
	.param .u64 div_bGrad_axis_kernel_param_1,
	.param .u64 div_bGrad_axis_kernel_param_2,
	.param .u64 div_bGrad_axis_kernel_param_3,
	.param .u64 div_bGrad_axis_kernel_param_4,
	.param .u32 div_bGrad_axis_kernel_param_5
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<42>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<31>;


	ld.param.u32 	%r12, [div_bGrad_axis_kernel_param_0];
	ld.param.u64 	%rd19, [div_bGrad_axis_kernel_param_1];
	ld.param.u64 	%rd20, [div_bGrad_axis_kernel_param_2];
	ld.param.u64 	%rd17, [div_bGrad_axis_kernel_param_3];
	ld.param.u64 	%rd18, [div_bGrad_axis_kernel_param_4];
	ld.param.u32 	%r11, [div_bGrad_axis_kernel_param_5];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd19;
	mov.u32 	%r13, %nctaid.x;
	mov.u32 	%r14, %ctaid.y;
	mov.u32 	%r15, %ctaid.x;
	mad.lo.s32 	%r16, %r14, %r13, %r15;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32 	%p1, %r1, %r12;
	setp.lt.s32 	%p2, %r11, 1;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB52_7;

	cvta.to.global.u64 	%rd21, %rd17;
	mul.wide.s32 	%rd22, %r1, 4;
	add.s64 	%rd3, %rd21, %rd22;
	cvta.to.global.u64 	%rd23, %rd18;
	add.s64 	%rd4, %rd23, %rd22;
	and.b32  	%r27, %r11, 3;
	add.s32 	%r20, %r11, -1;
	setp.lt.u32 	%p4, %r20, 3;
	mov.u32 	%r26, 0;
	@%p4 bra 	$L__BB52_4;

	sub.s32 	%r25, %r11, %r27;
	ld.global.f32 	%f40, [%rd4];
	mul.lo.s32 	%r22, %r11, %r1;
	mul.wide.s32 	%rd24, %r22, 4;
	add.s64 	%rd25, %rd24, 8;
	add.s64 	%rd28, %rd2, %rd25;
	add.s64 	%rd27, %rd1, %rd25;

$L__BB52_3:
	ld.global.f32 	%f7, [%rd27+-8];
	ld.global.f32 	%f8, [%rd28+-8];
	mul.f32 	%f9, %f8, %f7;
	ld.global.f32 	%f10, [%rd3];
	mul.f32 	%f11, %f10, %f10;
	div.rn.f32 	%f12, %f9, %f11;
	sub.f32 	%f13, %f40, %f12;
	st.global.f32 	[%rd4], %f13;
	ld.global.f32 	%f14, [%rd27+-4];
	ld.global.f32 	%f15, [%rd28+-4];
	mul.f32 	%f16, %f15, %f14;
	ld.global.f32 	%f17, [%rd3];
	mul.f32 	%f18, %f17, %f17;
	div.rn.f32 	%f19, %f16, %f18;
	sub.f32 	%f20, %f13, %f19;
	st.global.f32 	[%rd4], %f20;
	ld.global.f32 	%f21, [%rd27];
	ld.global.f32 	%f22, [%rd28];
	mul.f32 	%f23, %f22, %f21;
	ld.global.f32 	%f24, [%rd3];
	mul.f32 	%f25, %f24, %f24;
	div.rn.f32 	%f26, %f23, %f25;
	sub.f32 	%f27, %f20, %f26;
	st.global.f32 	[%rd4], %f27;
	ld.global.f32 	%f28, [%rd27+4];
	ld.global.f32 	%f29, [%rd28+4];
	mul.f32 	%f30, %f29, %f28;
	ld.global.f32 	%f31, [%rd3];
	mul.f32 	%f32, %f31, %f31;
	div.rn.f32 	%f33, %f30, %f32;
	sub.f32 	%f40, %f27, %f33;
	st.global.f32 	[%rd4], %f40;
	add.s32 	%r26, %r26, 4;
	add.s64 	%rd28, %rd28, 16;
	add.s64 	%rd27, %rd27, 16;
	add.s32 	%r25, %r25, -4;
	setp.ne.s32 	%p5, %r25, 0;
	@%p5 bra 	$L__BB52_3;

$L__BB52_4:
	setp.eq.s32 	%p6, %r27, 0;
	@%p6 bra 	$L__BB52_7;

	ld.global.f32 	%f41, [%rd4];
	mad.lo.s32 	%r23, %r11, %r1, %r26;
	mul.wide.s32 	%rd26, %r23, 4;
	add.s64 	%rd30, %rd1, %rd26;
	add.s64 	%rd29, %rd2, %rd26;

$L__BB52_6:
	.pragma "nounroll";
	ld.global.f32 	%f34, [%rd30];
	ld.global.f32 	%f35, [%rd29];
	mul.f32 	%f36, %f35, %f34;
	ld.global.f32 	%f37, [%rd3];
	mul.f32 	%f38, %f37, %f37;
	div.rn.f32 	%f39, %f36, %f38;
	sub.f32 	%f41, %f41, %f39;
	st.global.f32 	[%rd4], %f41;
	add.s64 	%rd30, %rd30, 4;
	add.s64 	%rd29, %rd29, 4;
	add.s32 	%r27, %r27, -1;
	setp.ne.s32 	%p7, %r27, 0;
	@%p7 bra 	$L__BB52_6;

$L__BB52_7:
	ret;

}
	// .globl	div_scalar_bGrad_kernel
.visible .entry div_scalar_bGrad_kernel(
	.param .u32 div_scalar_bGrad_kernel_param_0,
	.param .u64 div_scalar_bGrad_kernel_param_1,
	.param .f32 div_scalar_bGrad_kernel_param_2,
	.param .u64 div_scalar_bGrad_kernel_param_3,
	.param .u64 div_scalar_bGrad_kernel_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [div_scalar_bGrad_kernel_param_0];
	ld.param.u64 	%rd1, [div_scalar_bGrad_kernel_param_1];
	ld.param.f32 	%f1, [div_scalar_bGrad_kernel_param_2];
	ld.param.u64 	%rd2, [div_scalar_bGrad_kernel_param_3];
	ld.param.u64 	%rd3, [div_scalar_bGrad_kernel_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB53_2;

	cvta.to.global.u64 	%rd4, %rd2;
	cvta.to.global.u64 	%rd5, %rd1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd7];
	mul.f32 	%f3, %f2, %f1;
	add.s64 	%rd8, %rd4, %rd6;
	ld.global.f32 	%f4, [%rd8];
	mul.f32 	%f5, %f4, %f4;
	div.rn.f32 	%f6, %f3, %f5;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd6;
	ld.global.f32 	%f7, [%rd10];
	sub.f32 	%f8, %f7, %f6;
	st.global.f32 	[%rd10], %f8;

$L__BB53_2:
	ret;

}
	// .globl	div_plus_kernel
.visible .entry div_plus_kernel(
	.param .u32 div_plus_kernel_param_0,
	.param .u64 div_plus_kernel_param_1,
	.param .u64 div_plus_kernel_param_2,
	.param .u64 div_plus_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [div_plus_kernel_param_0];
	ld.param.u64 	%rd1, [div_plus_kernel_param_1];
	ld.param.u64 	%rd2, [div_plus_kernel_param_2];
	ld.param.u64 	%rd3, [div_plus_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB54_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	div.rn.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	ld.global.f32 	%f4, [%rd10];
	add.f32 	%f5, %f4, %f3;
	st.global.f32 	[%rd10], %f5;

$L__BB54_2:
	ret;

}
	// .globl	div_plus_axis_kernel
.visible .entry div_plus_axis_kernel(
	.param .u32 div_plus_axis_kernel_param_0,
	.param .u64 div_plus_axis_kernel_param_1,
	.param .u64 div_plus_axis_kernel_param_2,
	.param .u64 div_plus_axis_kernel_param_3,
	.param .u32 div_plus_axis_kernel_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<12>;


	ld.param.u32 	%r3, [div_plus_axis_kernel_param_0];
	ld.param.u64 	%rd1, [div_plus_axis_kernel_param_1];
	ld.param.u64 	%rd2, [div_plus_axis_kernel_param_2];
	ld.param.u64 	%rd3, [div_plus_axis_kernel_param_3];
	ld.param.u32 	%r2, [div_plus_axis_kernel_param_4];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %nctaid.x;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r6, %r5, %r4;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB55_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	div.s32 	%r10, %r1, %r2;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r10, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd6];
	div.rn.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd5;
	ld.global.f32 	%f4, [%rd11];
	add.f32 	%f5, %f4, %f3;
	st.global.f32 	[%rd11], %f5;

$L__BB55_2:
	ret;

}
	// .globl	div_plus_scalar_kernel
.visible .entry div_plus_scalar_kernel(
	.param .u32 div_plus_scalar_kernel_param_0,
	.param .u64 div_plus_scalar_kernel_param_1,
	.param .f32 div_plus_scalar_kernel_param_2,
	.param .u64 div_plus_scalar_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [div_plus_scalar_kernel_param_0];
	ld.param.u64 	%rd1, [div_plus_scalar_kernel_param_1];
	ld.param.f32 	%f1, [div_plus_scalar_kernel_param_2];
	ld.param.u64 	%rd2, [div_plus_scalar_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB56_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	div.rn.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f4, [%rd7];
	add.f32 	%f5, %f4, %f3;
	st.global.f32 	[%rd7], %f5;

$L__BB56_2:
	ret;

}
	// .globl	scalar_plus_div_kernel
.visible .entry scalar_plus_div_kernel(
	.param .u32 scalar_plus_div_kernel_param_0,
	.param .u64 scalar_plus_div_kernel_param_1,
	.param .f32 scalar_plus_div_kernel_param_2,
	.param .u64 scalar_plus_div_kernel_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [scalar_plus_div_kernel_param_0];
	ld.param.u64 	%rd1, [scalar_plus_div_kernel_param_1];
	ld.param.f32 	%f1, [scalar_plus_div_kernel_param_2];
	ld.param.u64 	%rd2, [scalar_plus_div_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB57_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	div.rn.f32 	%f3, %f1, %f2;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f4, [%rd7];
	add.f32 	%f5, %f4, %f3;
	st.global.f32 	[%rd7], %f5;

$L__BB57_2:
	ret;

}
	// .globl	pow_kernel
.visible .entry pow_kernel(
	.param .u32 pow_kernel_param_0,
	.param .u64 pow_kernel_param_1,
	.param .f32 pow_kernel_param_2,
	.param .u64 pow_kernel_param_3
)
{
	.reg .pred 	%p<29>;
	.reg .f32 	%f<108>;
	.reg .b32 	%r<33>;
	.reg .b64 	%rd<10>;


	ld.param.u32 	%r2, [pow_kernel_param_0];
	ld.param.u64 	%rd3, [pow_kernel_param_1];
	ld.param.f32 	%f16, [pow_kernel_param_2];
	ld.param.u64 	%rd4, [pow_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p2, %r1, %r2;
	@%p2 bra 	$L__BB58_16;

	cvta.to.global.u64 	%rd5, %rd3;
	cvta.to.global.u64 	%rd1, %rd4;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	mul.f32 	%f18, %f16, 0f3F000000;
	cvt.rzi.f32.f32 	%f19, %f18;
	add.f32 	%f20, %f19, %f19;
	sub.f32 	%f21, %f16, %f20;
	abs.f32 	%f1, %f21;
	ld.global.f32 	%f2, [%rd7];
	abs.f32 	%f3, %f2;
	setp.lt.f32 	%p3, %f3, 0f00800000;
	mul.f32 	%f22, %f3, 0f4B800000;
	selp.f32 	%f23, %f22, %f3, %p3;
	selp.f32 	%f24, 0fC3170000, 0fC2FE0000, %p3;
	mov.b32 	%r9, %f23;
	and.b32  	%r10, %r9, 8388607;
	or.b32  	%r11, %r10, 1065353216;
	mov.b32 	%f25, %r11;
	shr.u32 	%r12, %r9, 23;
	cvt.rn.f32.u32 	%f26, %r12;
	add.f32 	%f27, %f24, %f26;
	setp.gt.f32 	%p4, %f25, 0f3FB504F3;
	mul.f32 	%f28, %f25, 0f3F000000;
	add.f32 	%f29, %f27, 0f3F800000;
	selp.f32 	%f30, %f29, %f27, %p4;
	selp.f32 	%f31, %f28, %f25, %p4;
	add.f32 	%f32, %f31, 0fBF800000;
	add.f32 	%f33, %f31, 0f3F800000;
	rcp.approx.ftz.f32 	%f34, %f33;
	add.f32 	%f35, %f32, %f32;
	mul.f32 	%f36, %f35, %f34;
	mul.f32 	%f37, %f36, %f36;
	mov.f32 	%f38, 0f3C4CAF63;
	mov.f32 	%f39, 0f3B18F0FE;
	fma.rn.f32 	%f40, %f39, %f37, %f38;
	mov.f32 	%f41, 0f3DAAAABD;
	fma.rn.f32 	%f42, %f40, %f37, %f41;
	mul.rn.f32 	%f43, %f42, %f37;
	mul.rn.f32 	%f44, %f43, %f36;
	sub.f32 	%f45, %f32, %f36;
	add.f32 	%f46, %f45, %f45;
	neg.f32 	%f47, %f36;
	fma.rn.f32 	%f48, %f47, %f32, %f46;
	mul.rn.f32 	%f49, %f34, %f48;
	add.f32 	%f50, %f44, %f36;
	sub.f32 	%f51, %f36, %f50;
	add.f32 	%f52, %f44, %f51;
	add.f32 	%f53, %f49, %f52;
	add.f32 	%f54, %f50, %f53;
	sub.f32 	%f55, %f50, %f54;
	add.f32 	%f56, %f53, %f55;
	mov.f32 	%f57, 0f3F317200;
	mul.rn.f32 	%f58, %f30, %f57;
	mov.f32 	%f59, 0f35BFBE8E;
	mul.rn.f32 	%f60, %f30, %f59;
	add.f32 	%f61, %f58, %f54;
	sub.f32 	%f62, %f58, %f61;
	add.f32 	%f63, %f54, %f62;
	add.f32 	%f64, %f56, %f63;
	add.f32 	%f65, %f60, %f64;
	add.f32 	%f66, %f61, %f65;
	sub.f32 	%f67, %f61, %f66;
	add.f32 	%f68, %f65, %f67;
	abs.f32 	%f4, %f16;
	setp.gt.f32 	%p5, %f4, 0f77F684DF;
	mul.f32 	%f69, %f16, 0f39000000;
	selp.f32 	%f70, %f69, %f16, %p5;
	mul.rn.f32 	%f71, %f70, %f66;
	neg.f32 	%f72, %f71;
	fma.rn.f32 	%f73, %f70, %f66, %f72;
	fma.rn.f32 	%f74, %f70, %f68, %f73;
	mov.f32 	%f75, 0f00000000;
	fma.rn.f32 	%f76, %f75, %f66, %f74;
	add.rn.f32 	%f77, %f71, %f76;
	neg.f32 	%f78, %f77;
	add.rn.f32 	%f79, %f71, %f78;
	add.rn.f32 	%f80, %f79, %f76;
	mov.b32 	%r13, %f77;
	setp.eq.s32 	%p6, %r13, 1118925336;
	add.s32 	%r14, %r13, -1;
	mov.b32 	%f81, %r14;
	add.f32 	%f82, %f80, 0f37000000;
	selp.f32 	%f5, %f82, %f80, %p6;
	selp.f32 	%f83, %f81, %f77, %p6;
	mov.f32 	%f84, 0f3FB8AA3B;
	mul.rn.f32 	%f85, %f83, %f84;
	cvt.rzi.f32.f32 	%f86, %f85;
	abs.f32 	%f87, %f86;
	setp.gt.f32 	%p7, %f87, 0f42FC0000;
	mov.b32 	%r15, %f86;
	and.b32  	%r16, %r15, -2147483648;
	or.b32  	%r17, %r16, 1123811328;
	mov.b32 	%f88, %r17;
	selp.f32 	%f89, %f88, %f86, %p7;
	mov.f32 	%f90, 0fBF317218;
	fma.rn.f32 	%f91, %f89, %f90, %f83;
	mov.f32 	%f92, 0f3102E308;
	fma.rn.f32 	%f93, %f89, %f92, %f91;
	mul.f32 	%f94, %f93, 0f3FB8AA3B;
	add.f32 	%f95, %f89, 0f4B40007F;
	mov.b32 	%r18, %f95;
	shl.b32 	%r19, %r18, 23;
	mov.b32 	%f96, %r19;
	ex2.approx.ftz.f32 	%f97, %f94;
	mul.f32 	%f6, %f97, %f96;
	setp.eq.f32 	%p8, %f6, 0f7F800000;
	mov.f32 	%f105, 0f7F800000;
	@%p8 bra 	$L__BB58_3;

	fma.rn.f32 	%f105, %f6, %f5, %f6;

$L__BB58_3:
	setp.lt.f32 	%p9, %f2, 0f00000000;
	setp.eq.f32 	%p10, %f1, 0f3F800000;
	and.pred  	%p1, %p9, %p10;
	setp.eq.f32 	%p11, %f2, 0f00000000;
	@%p11 bra 	$L__BB58_7;
	bra.uni 	$L__BB58_4;

$L__BB58_7:
	add.f32 	%f101, %f2, %f2;
	mov.b32 	%r22, %f101;
	selp.b32 	%r23, %r22, 0, %p10;
	or.b32  	%r24, %r23, 2139095040;
	setp.lt.f32 	%p15, %f16, 0f00000000;
	selp.b32 	%r25, %r24, %r23, %p15;
	mov.b32 	%f107, %r25;
	bra.uni 	$L__BB58_8;

$L__BB58_4:
	mov.b32 	%r20, %f105;
	xor.b32  	%r21, %r20, -2147483648;
	mov.b32 	%f98, %r21;
	selp.f32 	%f107, %f98, %f105, %p1;
	setp.geu.f32 	%p12, %f2, 0f00000000;
	@%p12 bra 	$L__BB58_8;

	cvt.rzi.f32.f32 	%f99, %f16;
	setp.eq.f32 	%p13, %f99, %f16;
	@%p13 bra 	$L__BB58_8;

	mov.f32 	%f107, 0f7FFFFFFF;

$L__BB58_8:
	add.f32 	%f102, %f3, %f4;
	mov.b32 	%r26, %f102;
	setp.lt.s32 	%p16, %r26, 2139095040;
	@%p16 bra 	$L__BB58_15;

	setp.gtu.f32 	%p17, %f3, 0f7F800000;
	setp.gtu.f32 	%p18, %f4, 0f7F800000;
	or.pred  	%p19, %p17, %p18;
	@%p19 bra 	$L__BB58_14;
	bra.uni 	$L__BB58_10;

$L__BB58_14:
	add.f32 	%f107, %f2, %f16;
	bra.uni 	$L__BB58_15;

$L__BB58_10:
	setp.eq.f32 	%p20, %f4, 0f7F800000;
	@%p20 bra 	$L__BB58_13;
	bra.uni 	$L__BB58_11;

$L__BB58_13:
	setp.gt.f32 	%p23, %f3, 0f3F800000;
	selp.b32 	%r30, 2139095040, 0, %p23;
	xor.b32  	%r31, %r30, 2139095040;
	setp.lt.f32 	%p24, %f16, 0f00000000;
	selp.b32 	%r32, %r31, %r30, %p24;
	mov.b32 	%f103, %r32;
	setp.eq.f32 	%p25, %f2, 0fBF800000;
	selp.f32 	%f107, 0f3F800000, %f103, %p25;
	bra.uni 	$L__BB58_15;

$L__BB58_11:
	setp.neu.f32 	%p21, %f3, 0f7F800000;
	@%p21 bra 	$L__BB58_15;

	setp.ge.f32 	%p22, %f16, 0f00000000;
	selp.b32 	%r27, 2139095040, 0, %p22;
	or.b32  	%r28, %r27, -2147483648;
	selp.b32 	%r29, %r28, %r27, %p1;
	mov.b32 	%f107, %r29;

$L__BB58_15:
	setp.eq.f32 	%p26, %f16, 0f00000000;
	setp.eq.f32 	%p27, %f2, 0f3F800000;
	or.pred  	%p28, %p26, %p27;
	selp.f32 	%f104, 0f3F800000, %f107, %p28;
	shl.b64 	%rd8, %rd2, 2;
	add.s64 	%rd9, %rd1, %rd8;
	st.global.f32 	[%rd9], %f104;

$L__BB58_16:
	ret;

}
	// .globl	sqrt_kernel
.visible .entry sqrt_kernel(
	.param .u32 sqrt_kernel_param_0,
	.param .u64 sqrt_kernel_param_1,
	.param .u64 sqrt_kernel_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [sqrt_kernel_param_0];
	ld.param.u64 	%rd1, [sqrt_kernel_param_1];
	ld.param.u64 	%rd2, [sqrt_kernel_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB59_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	sqrt.rn.f32 	%f2, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f2;

$L__BB59_2:
	ret;

}
	// .globl	log_kernel
.visible .entry log_kernel(
	.param .u32 log_kernel_param_0,
	.param .u64 log_kernel_param_1,
	.param .u64 log_kernel_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<36>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r2, [log_kernel_param_0];
	ld.param.u64 	%rd1, [log_kernel_param_1];
	ld.param.u64 	%rd2, [log_kernel_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB60_4;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f5, [%rd5];
	setp.lt.f32 	%p2, %f5, 0f00800000;
	mul.f32 	%f6, %f5, 0f4B000000;
	selp.f32 	%f1, %f6, %f5, %p2;
	selp.f32 	%f7, 0fC1B80000, 0f00000000, %p2;
	mov.b32 	%r9, %f1;
	add.s32 	%r10, %r9, -1059760811;
	and.b32  	%r11, %r10, -8388608;
	sub.s32 	%r12, %r9, %r11;
	mov.b32 	%f8, %r12;
	cvt.rn.f32.s32 	%f9, %r11;
	mov.f32 	%f10, 0f34000000;
	fma.rn.f32 	%f11, %f9, %f10, %f7;
	add.f32 	%f12, %f8, 0fBF800000;
	mov.f32 	%f13, 0f3E1039F6;
	mov.f32 	%f14, 0fBE055027;
	fma.rn.f32 	%f15, %f14, %f12, %f13;
	mov.f32 	%f16, 0fBDF8CDCC;
	fma.rn.f32 	%f17, %f15, %f12, %f16;
	mov.f32 	%f18, 0f3E0F2955;
	fma.rn.f32 	%f19, %f17, %f12, %f18;
	mov.f32 	%f20, 0fBE2AD8B9;
	fma.rn.f32 	%f21, %f19, %f12, %f20;
	mov.f32 	%f22, 0f3E4CED0B;
	fma.rn.f32 	%f23, %f21, %f12, %f22;
	mov.f32 	%f24, 0fBE7FFF22;
	fma.rn.f32 	%f25, %f23, %f12, %f24;
	mov.f32 	%f26, 0f3EAAAA78;
	fma.rn.f32 	%f27, %f25, %f12, %f26;
	mov.f32 	%f28, 0fBF000000;
	fma.rn.f32 	%f29, %f27, %f12, %f28;
	mul.f32 	%f30, %f12, %f29;
	fma.rn.f32 	%f31, %f30, %f12, %f12;
	mov.f32 	%f32, 0f3F317218;
	fma.rn.f32 	%f35, %f11, %f32, %f31;
	setp.lt.u32 	%p3, %r9, 2139095040;
	@%p3 bra 	$L__BB60_3;

	mov.f32 	%f33, 0f7F800000;
	fma.rn.f32 	%f35, %f1, %f33, %f33;

$L__BB60_3:
	setp.eq.f32 	%p4, %f1, 0f00000000;
	selp.f32 	%f34, 0fFF800000, %f35, %p4;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd8, %rd6, %rd4;
	st.global.f32 	[%rd8], %f34;

$L__BB60_4:
	ret;

}
	// .globl	exp_kernel
.visible .entry exp_kernel(
	.param .u32 exp_kernel_param_0,
	.param .u64 exp_kernel_param_1,
	.param .u64 exp_kernel_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<18>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [exp_kernel_param_0];
	ld.param.u64 	%rd1, [exp_kernel_param_1];
	ld.param.u64 	%rd2, [exp_kernel_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB61_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	mov.f32 	%f2, 0f3F000000;
	mov.f32 	%f3, 0f3BBB989D;
	fma.rn.f32 	%f4, %f1, %f3, %f2;
	mov.f32 	%f5, 0f3FB8AA3B;
	mov.f32 	%f6, 0f437C0000;
	cvt.sat.f32.f32 	%f7, %f4;
	mov.f32 	%f8, 0f4B400001;
	fma.rm.f32 	%f9, %f7, %f6, %f8;
	add.f32 	%f10, %f9, 0fCB40007F;
	neg.f32 	%f11, %f10;
	fma.rn.f32 	%f12, %f1, %f5, %f11;
	mov.f32 	%f13, 0f32A57060;
	fma.rn.f32 	%f14, %f1, %f13, %f12;
	mov.b32 	%r9, %f9;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f15, %r10;
	ex2.approx.ftz.f32 	%f16, %f14;
	mul.f32 	%f17, %f16, %f15;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f17;

$L__BB61_2:
	ret;

}
	// .globl	sin_kernel
.visible .entry sin_kernel(
	.param .u32 sin_kernel_param_0,
	.param .u64 sin_kernel_param_1,
	.param .u64 sin_kernel_param_2
)
{
	.local .align 4 .b8 	__local_depot62[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<12>;
	.reg .f32 	%f<38>;
	.reg .b32 	%r<61>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<31>;


	mov.u64 	%SPL, __local_depot62;
	ld.param.u32 	%r20, [sin_kernel_param_0];
	ld.param.u64 	%rd9, [sin_kernel_param_1];
	ld.param.u64 	%rd10, [sin_kernel_param_2];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r21, %nctaid.x;
	mov.u32 	%r22, %ctaid.y;
	mov.u32 	%r23, %ctaid.x;
	mad.lo.s32 	%r24, %r22, %r21, %r23;
	mov.u32 	%r25, %ntid.x;
	mov.u32 	%r26, %tid.x;
	mad.lo.s32 	%r1, %r24, %r25, %r26;
	setp.ge.s32 	%p1, %r1, %r20;
	@%p1 bra 	$L__BB62_14;

	cvta.to.global.u64 	%rd12, %rd9;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.f32 	%f1, [%rd14];
	mul.f32 	%f14, %f1, 0f3F22F983;
	cvt.rni.s32.f32 	%r60, %f14;
	cvt.rn.f32.s32 	%f15, %r60;
	mov.f32 	%f16, 0fBFC90FDA;
	fma.rn.f32 	%f17, %f15, %f16, %f1;
	mov.f32 	%f18, 0fB3A22168;
	fma.rn.f32 	%f19, %f15, %f18, %f17;
	mov.f32 	%f20, 0fA7C234C5;
	fma.rn.f32 	%f35, %f15, %f20, %f19;
	abs.f32 	%f3, %f1;
	setp.ltu.f32 	%p2, %f3, 0f47CE4780;
	@%p2 bra 	$L__BB62_9;

	setp.eq.f32 	%p3, %f3, 0f7F800000;
	@%p3 bra 	$L__BB62_8;
	bra.uni 	$L__BB62_3;

$L__BB62_8:
	mov.f32 	%f23, 0f00000000;
	mul.rn.f32 	%f35, %f1, %f23;
	mov.u32 	%r60, 0;
	bra.uni 	$L__BB62_9;

$L__BB62_3:
	mov.b32 	%r3, %f1;
	bfe.u32 	%r28, %r3, 23, 8;
	add.s32 	%r4, %r28, -128;
	shl.b32 	%r29, %r3, 8;
	or.b32  	%r5, %r29, -2147483648;
	shr.u32 	%r6, %r4, 5;
	mov.u64 	%rd30, 0;
	mov.u32 	%r57, 0;
	mov.u64 	%rd28, __cudart_i2opi_f;
	mov.u64 	%rd29, %rd1;

$L__BB62_4:
	.pragma "nounroll";
	ld.global.nc.u32 	%r30, [%rd28];
	mad.wide.u32 	%rd17, %r30, %r5, %rd30;
	shr.u64 	%rd30, %rd17, 32;
	st.local.u32 	[%rd29], %rd17;
	add.s64 	%rd29, %rd29, 4;
	add.s64 	%rd28, %rd28, 4;
	add.s32 	%r57, %r57, 1;
	setp.ne.s32 	%p4, %r57, 6;
	@%p4 bra 	$L__BB62_4;

	st.local.u32 	[%rd1+24], %rd30;
	mov.u32 	%r31, 4;
	sub.s32 	%r9, %r31, %r6;
	mov.u32 	%r32, 6;
	sub.s32 	%r33, %r32, %r6;
	mul.wide.s32 	%rd18, %r33, 4;
	add.s64 	%rd19, %rd1, %rd18;
	ld.local.u32 	%r58, [%rd19];
	ld.local.u32 	%r59, [%rd19+-4];
	and.b32  	%r12, %r4, 31;
	setp.eq.s32 	%p5, %r12, 0;
	@%p5 bra 	$L__BB62_7;

	mov.u32 	%r34, 32;
	sub.s32 	%r35, %r34, %r12;
	shr.u32 	%r36, %r59, %r35;
	shl.b32 	%r37, %r58, %r12;
	add.s32 	%r58, %r36, %r37;
	mul.wide.s32 	%rd20, %r9, 4;
	add.s64 	%rd21, %rd1, %rd20;
	ld.local.u32 	%r38, [%rd21];
	shr.u32 	%r39, %r38, %r35;
	shl.b32 	%r40, %r59, %r12;
	add.s32 	%r59, %r39, %r40;

$L__BB62_7:
	and.b32  	%r41, %r3, -2147483648;
	shr.u32 	%r42, %r59, 30;
	shl.b32 	%r43, %r58, 2;
	or.b32  	%r44, %r42, %r43;
	shr.u32 	%r45, %r44, 31;
	shr.u32 	%r46, %r58, 30;
	add.s32 	%r47, %r45, %r46;
	neg.s32 	%r48, %r47;
	setp.eq.s32 	%p6, %r41, 0;
	selp.b32 	%r60, %r47, %r48, %p6;
	setp.ne.s32 	%p7, %r45, 0;
	xor.b32  	%r49, %r41, -2147483648;
	selp.b32 	%r50, %r49, %r41, %p7;
	selp.b32 	%r51, -1, 0, %p7;
	xor.b32  	%r52, %r44, %r51;
	shl.b32 	%r53, %r59, 2;
	xor.b32  	%r54, %r53, %r51;
	cvt.u64.u32 	%rd22, %r52;
	cvt.u64.u32 	%rd23, %r54;
	bfi.b64 	%rd24, %rd22, %rd23, 32, 32;
	cvt.rn.f64.s64 	%fd1, %rd24;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f21, %fd2;
	setp.eq.s32 	%p8, %r50, 0;
	neg.f32 	%f22, %f21;
	selp.f32 	%f35, %f21, %f22, %p8;

$L__BB62_9:
	and.b32  	%r19, %r60, 1;
	setp.eq.s32 	%p9, %r19, 0;
	selp.f32 	%f7, %f35, 0f3F800000, %p9;
	mul.rn.f32 	%f8, %f35, %f35;
	mov.f32 	%f36, 0fB94D4153;
	@%p9 bra 	$L__BB62_11;

	mov.f32 	%f25, 0fBAB607ED;
	mov.f32 	%f26, 0f37CBAC00;
	fma.rn.f32 	%f36, %f26, %f8, %f25;

$L__BB62_11:
	selp.f32 	%f27, 0f3C0885E4, 0f3D2AAABB, %p9;
	fma.rn.f32 	%f28, %f36, %f8, %f27;
	selp.f32 	%f29, 0fBE2AAAA8, 0fBEFFFFFF, %p9;
	fma.rn.f32 	%f30, %f28, %f8, %f29;
	mov.f32 	%f31, 0f00000000;
	fma.rn.f32 	%f32, %f8, %f7, %f31;
	fma.rn.f32 	%f37, %f30, %f32, %f7;
	and.b32  	%r56, %r60, 2;
	setp.eq.s32 	%p11, %r56, 0;
	@%p11 bra 	$L__BB62_13;

	mov.f32 	%f34, 0fBF800000;
	fma.rn.f32 	%f37, %f37, %f34, %f31;

$L__BB62_13:
	cvta.to.global.u64 	%rd25, %rd10;
	shl.b64 	%rd26, %rd2, 2;
	add.s64 	%rd27, %rd25, %rd26;
	st.global.f32 	[%rd27], %f37;

$L__BB62_14:
	ret;

}
	// .globl	cos_kernel
.visible .entry cos_kernel(
	.param .u32 cos_kernel_param_0,
	.param .u64 cos_kernel_param_1,
	.param .u64 cos_kernel_param_2
)
{
	.local .align 4 .b8 	__local_depot63[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<12>;
	.reg .f32 	%f<38>;
	.reg .b32 	%r<62>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<31>;


	mov.u64 	%SPL, __local_depot63;
	ld.param.u32 	%r21, [cos_kernel_param_0];
	ld.param.u64 	%rd9, [cos_kernel_param_1];
	ld.param.u64 	%rd10, [cos_kernel_param_2];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r22, %nctaid.x;
	mov.u32 	%r23, %ctaid.y;
	mov.u32 	%r24, %ctaid.x;
	mad.lo.s32 	%r25, %r23, %r22, %r24;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %tid.x;
	mad.lo.s32 	%r1, %r25, %r26, %r27;
	setp.ge.s32 	%p1, %r1, %r21;
	@%p1 bra 	$L__BB63_14;

	cvta.to.global.u64 	%rd12, %rd9;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.f32 	%f1, [%rd14];
	mul.f32 	%f14, %f1, 0f3F22F983;
	cvt.rni.s32.f32 	%r61, %f14;
	cvt.rn.f32.s32 	%f15, %r61;
	mov.f32 	%f16, 0fBFC90FDA;
	fma.rn.f32 	%f17, %f15, %f16, %f1;
	mov.f32 	%f18, 0fB3A22168;
	fma.rn.f32 	%f19, %f15, %f18, %f17;
	mov.f32 	%f20, 0fA7C234C5;
	fma.rn.f32 	%f35, %f15, %f20, %f19;
	abs.f32 	%f3, %f1;
	setp.ltu.f32 	%p2, %f3, 0f47CE4780;
	@%p2 bra 	$L__BB63_9;

	setp.eq.f32 	%p3, %f3, 0f7F800000;
	@%p3 bra 	$L__BB63_8;
	bra.uni 	$L__BB63_3;

$L__BB63_8:
	mov.f32 	%f23, 0f00000000;
	mul.rn.f32 	%f35, %f1, %f23;
	mov.u32 	%r61, 0;
	bra.uni 	$L__BB63_9;

$L__BB63_3:
	mov.b32 	%r3, %f1;
	bfe.u32 	%r29, %r3, 23, 8;
	add.s32 	%r4, %r29, -128;
	shl.b32 	%r30, %r3, 8;
	or.b32  	%r5, %r30, -2147483648;
	shr.u32 	%r6, %r4, 5;
	mov.u64 	%rd30, 0;
	mov.u32 	%r58, 0;
	mov.u64 	%rd28, __cudart_i2opi_f;
	mov.u64 	%rd29, %rd1;

$L__BB63_4:
	.pragma "nounroll";
	ld.global.nc.u32 	%r31, [%rd28];
	mad.wide.u32 	%rd17, %r31, %r5, %rd30;
	shr.u64 	%rd30, %rd17, 32;
	st.local.u32 	[%rd29], %rd17;
	add.s64 	%rd29, %rd29, 4;
	add.s64 	%rd28, %rd28, 4;
	add.s32 	%r58, %r58, 1;
	setp.ne.s32 	%p4, %r58, 6;
	@%p4 bra 	$L__BB63_4;

	st.local.u32 	[%rd1+24], %rd30;
	mov.u32 	%r32, 4;
	sub.s32 	%r9, %r32, %r6;
	mov.u32 	%r33, 6;
	sub.s32 	%r34, %r33, %r6;
	mul.wide.s32 	%rd18, %r34, 4;
	add.s64 	%rd19, %rd1, %rd18;
	ld.local.u32 	%r59, [%rd19];
	ld.local.u32 	%r60, [%rd19+-4];
	and.b32  	%r12, %r4, 31;
	setp.eq.s32 	%p5, %r12, 0;
	@%p5 bra 	$L__BB63_7;

	mov.u32 	%r35, 32;
	sub.s32 	%r36, %r35, %r12;
	shr.u32 	%r37, %r60, %r36;
	shl.b32 	%r38, %r59, %r12;
	add.s32 	%r59, %r37, %r38;
	mul.wide.s32 	%rd20, %r9, 4;
	add.s64 	%rd21, %rd1, %rd20;
	ld.local.u32 	%r39, [%rd21];
	shr.u32 	%r40, %r39, %r36;
	shl.b32 	%r41, %r60, %r12;
	add.s32 	%r60, %r40, %r41;

$L__BB63_7:
	and.b32  	%r42, %r3, -2147483648;
	shr.u32 	%r43, %r60, 30;
	shl.b32 	%r44, %r59, 2;
	or.b32  	%r45, %r43, %r44;
	shr.u32 	%r46, %r45, 31;
	shr.u32 	%r47, %r59, 30;
	add.s32 	%r48, %r46, %r47;
	neg.s32 	%r49, %r48;
	setp.eq.s32 	%p6, %r42, 0;
	selp.b32 	%r61, %r48, %r49, %p6;
	setp.ne.s32 	%p7, %r46, 0;
	xor.b32  	%r50, %r42, -2147483648;
	selp.b32 	%r51, %r50, %r42, %p7;
	selp.b32 	%r52, -1, 0, %p7;
	xor.b32  	%r53, %r45, %r52;
	shl.b32 	%r54, %r60, 2;
	xor.b32  	%r55, %r54, %r52;
	cvt.u64.u32 	%rd22, %r53;
	cvt.u64.u32 	%rd23, %r55;
	bfi.b64 	%rd24, %rd22, %rd23, 32, 32;
	cvt.rn.f64.s64 	%fd1, %rd24;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f21, %fd2;
	setp.eq.s32 	%p8, %r51, 0;
	neg.f32 	%f22, %f21;
	selp.f32 	%f35, %f21, %f22, %p8;

$L__BB63_9:
	add.s32 	%r19, %r61, 1;
	and.b32  	%r20, %r19, 1;
	setp.eq.s32 	%p9, %r20, 0;
	selp.f32 	%f7, %f35, 0f3F800000, %p9;
	mul.rn.f32 	%f8, %f35, %f35;
	mov.f32 	%f36, 0fB94D4153;
	@%p9 bra 	$L__BB63_11;

	mov.f32 	%f25, 0fBAB607ED;
	mov.f32 	%f26, 0f37CBAC00;
	fma.rn.f32 	%f36, %f26, %f8, %f25;

$L__BB63_11:
	selp.f32 	%f27, 0f3C0885E4, 0f3D2AAABB, %p9;
	fma.rn.f32 	%f28, %f36, %f8, %f27;
	selp.f32 	%f29, 0fBE2AAAA8, 0fBEFFFFFF, %p9;
	fma.rn.f32 	%f30, %f28, %f8, %f29;
	mov.f32 	%f31, 0f00000000;
	fma.rn.f32 	%f32, %f8, %f7, %f31;
	fma.rn.f32 	%f37, %f30, %f32, %f7;
	and.b32  	%r57, %r19, 2;
	setp.eq.s32 	%p11, %r57, 0;
	@%p11 bra 	$L__BB63_13;

	mov.f32 	%f34, 0fBF800000;
	fma.rn.f32 	%f37, %f37, %f34, %f31;

$L__BB63_13:
	cvta.to.global.u64 	%rd25, %rd10;
	shl.b64 	%rd26, %rd2, 2;
	add.s64 	%rd27, %rd25, %rd26;
	st.global.f32 	[%rd27], %f37;

$L__BB63_14:
	ret;

}
	// .globl	tan_kernel
.visible .entry tan_kernel(
	.param .u32 tan_kernel_param_0,
	.param .u64 tan_kernel_param_1,
	.param .u64 tan_kernel_param_2
)
{
	.local .align 4 .b8 	__local_depot64[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<11>;
	.reg .f32 	%f<37>;
	.reg .b32 	%r<60>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<31>;


	mov.u64 	%SPL, __local_depot64;
	ld.param.u32 	%r19, [tan_kernel_param_0];
	ld.param.u64 	%rd9, [tan_kernel_param_1];
	ld.param.u64 	%rd10, [tan_kernel_param_2];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r20, %nctaid.x;
	mov.u32 	%r21, %ctaid.y;
	mov.u32 	%r22, %ctaid.x;
	mad.lo.s32 	%r23, %r21, %r20, %r22;
	mov.u32 	%r24, %ntid.x;
	mov.u32 	%r25, %tid.x;
	mad.lo.s32 	%r1, %r23, %r24, %r25;
	setp.ge.s32 	%p1, %r1, %r19;
	@%p1 bra 	$L__BB64_10;

	cvta.to.global.u64 	%rd12, %rd9;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.f32 	%f1, [%rd14];
	mul.f32 	%f7, %f1, 0f3F22F983;
	cvt.rni.s32.f32 	%r59, %f7;
	cvt.rn.f32.s32 	%f8, %r59;
	mov.f32 	%f9, 0fBFC90FDA;
	fma.rn.f32 	%f10, %f8, %f9, %f1;
	mov.f32 	%f11, 0fB3A22168;
	fma.rn.f32 	%f12, %f8, %f11, %f10;
	mov.f32 	%f13, 0fA7C234C5;
	fma.rn.f32 	%f36, %f8, %f13, %f12;
	abs.f32 	%f3, %f1;
	setp.ltu.f32 	%p2, %f3, 0f47CE4780;
	@%p2 bra 	$L__BB64_9;

	setp.eq.f32 	%p3, %f3, 0f7F800000;
	@%p3 bra 	$L__BB64_8;
	bra.uni 	$L__BB64_3;

$L__BB64_8:
	mov.f32 	%f16, 0f00000000;
	mul.rn.f32 	%f36, %f1, %f16;
	mov.u32 	%r59, 0;
	bra.uni 	$L__BB64_9;

$L__BB64_3:
	mov.b32 	%r3, %f1;
	bfe.u32 	%r27, %r3, 23, 8;
	add.s32 	%r4, %r27, -128;
	shl.b32 	%r28, %r3, 8;
	or.b32  	%r5, %r28, -2147483648;
	shr.u32 	%r6, %r4, 5;
	mov.u64 	%rd30, 0;
	mov.u32 	%r56, 0;
	mov.u64 	%rd28, __cudart_i2opi_f;
	mov.u64 	%rd29, %rd1;

$L__BB64_4:
	.pragma "nounroll";
	ld.global.nc.u32 	%r29, [%rd28];
	mad.wide.u32 	%rd17, %r29, %r5, %rd30;
	shr.u64 	%rd30, %rd17, 32;
	st.local.u32 	[%rd29], %rd17;
	add.s64 	%rd29, %rd29, 4;
	add.s64 	%rd28, %rd28, 4;
	add.s32 	%r56, %r56, 1;
	setp.ne.s32 	%p4, %r56, 6;
	@%p4 bra 	$L__BB64_4;

	st.local.u32 	[%rd1+24], %rd30;
	mov.u32 	%r30, 4;
	sub.s32 	%r9, %r30, %r6;
	mov.u32 	%r31, 6;
	sub.s32 	%r32, %r31, %r6;
	mul.wide.s32 	%rd18, %r32, 4;
	add.s64 	%rd19, %rd1, %rd18;
	ld.local.u32 	%r57, [%rd19];
	ld.local.u32 	%r58, [%rd19+-4];
	and.b32  	%r12, %r4, 31;
	setp.eq.s32 	%p5, %r12, 0;
	@%p5 bra 	$L__BB64_7;

	mov.u32 	%r33, 32;
	sub.s32 	%r34, %r33, %r12;
	shr.u32 	%r35, %r58, %r34;
	shl.b32 	%r36, %r57, %r12;
	add.s32 	%r57, %r35, %r36;
	mul.wide.s32 	%rd20, %r9, 4;
	add.s64 	%rd21, %rd1, %rd20;
	ld.local.u32 	%r37, [%rd21];
	shr.u32 	%r38, %r37, %r34;
	shl.b32 	%r39, %r58, %r12;
	add.s32 	%r58, %r38, %r39;

$L__BB64_7:
	and.b32  	%r40, %r3, -2147483648;
	shr.u32 	%r41, %r58, 30;
	shl.b32 	%r42, %r57, 2;
	or.b32  	%r43, %r41, %r42;
	shr.u32 	%r44, %r43, 31;
	shr.u32 	%r45, %r57, 30;
	add.s32 	%r46, %r44, %r45;
	neg.s32 	%r47, %r46;
	setp.eq.s32 	%p6, %r40, 0;
	selp.b32 	%r59, %r46, %r47, %p6;
	setp.ne.s32 	%p7, %r44, 0;
	xor.b32  	%r48, %r40, -2147483648;
	selp.b32 	%r49, %r48, %r40, %p7;
	selp.b32 	%r50, -1, 0, %p7;
	xor.b32  	%r51, %r43, %r50;
	shl.b32 	%r52, %r58, 2;
	xor.b32  	%r53, %r52, %r50;
	cvt.u64.u32 	%rd22, %r51;
	cvt.u64.u32 	%rd23, %r53;
	bfi.b64 	%rd24, %rd22, %rd23, 32, 32;
	cvt.rn.f64.s64 	%fd1, %rd24;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f14, %fd2;
	setp.eq.s32 	%p8, %r49, 0;
	neg.f32 	%f15, %f14;
	selp.f32 	%f36, %f14, %f15, %p8;

$L__BB64_9:
	mul.f32 	%f17, %f36, %f36;
	mov.f32 	%f18, 0f3B560000;
	mov.f32 	%f19, 0f3C190000;
	fma.rn.f32 	%f20, %f19, %f17, %f18;
	mov.f32 	%f21, 0f3CC70000;
	fma.rn.f32 	%f22, %f20, %f17, %f21;
	mov.f32 	%f23, 0f3D5B0000;
	fma.rn.f32 	%f24, %f22, %f17, %f23;
	mov.f32 	%f25, 0f3E089438;
	fma.rn.f32 	%f26, %f24, %f17, %f25;
	mov.f32 	%f27, 0f3EAAAA88;
	fma.rn.f32 	%f28, %f26, %f17, %f27;
	mul.rn.f32 	%f29, %f17, %f36;
	fma.rn.f32 	%f30, %f28, %f29, %f36;
	abs.f32 	%f31, %f36;
	setp.eq.f32 	%p9, %f31, 0f3A00B43C;
	selp.f32 	%f32, %f36, %f30, %p9;
	and.b32  	%r55, %r59, 1;
	setp.eq.b32 	%p10, %r55, 1;
	neg.f32 	%f33, %f32;
	rcp.approx.ftz.f32 	%f34, %f33;
	selp.f32 	%f35, %f34, %f32, %p10;
	cvta.to.global.u64 	%rd25, %rd10;
	shl.b64 	%rd26, %rd2, 2;
	add.s64 	%rd27, %rd25, %rd26;
	st.global.f32 	[%rd27], %f35;

$L__BB64_10:
	ret;

}
	// .globl	tan_back_kernel
.visible .entry tan_back_kernel(
	.param .u32 tan_back_kernel_param_0,
	.param .u64 tan_back_kernel_param_1,
	.param .u64 tan_back_kernel_param_2
)
{
	.local .align 4 .b8 	__local_depot65[28];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<28>;
	.reg .f32 	%f<141>;
	.reg .b32 	%r<76>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<31>;


	mov.u64 	%SPL, __local_depot65;
	ld.param.u32 	%r21, [tan_back_kernel_param_0];
	ld.param.u64 	%rd9, [tan_back_kernel_param_1];
	ld.param.u64 	%rd10, [tan_back_kernel_param_2];
	add.u64 	%rd1, %SPL, 0;
	mov.u32 	%r22, %nctaid.x;
	mov.u32 	%r23, %ctaid.y;
	mov.u32 	%r24, %ctaid.x;
	mad.lo.s32 	%r25, %r23, %r22, %r24;
	mov.u32 	%r26, %ntid.x;
	mov.u32 	%r27, %tid.x;
	mad.lo.s32 	%r1, %r25, %r26, %r27;
	setp.ge.s32 	%p2, %r1, %r21;
	@%p2 bra 	$L__BB65_26;

	cvta.to.global.u64 	%rd12, %rd9;
	cvt.s64.s32 	%rd2, %r1;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd14, %rd12, %rd13;
	ld.global.f32 	%f1, [%rd14];
	mul.f32 	%f26, %f1, 0f3F22F983;
	cvt.rni.s32.f32 	%r75, %f26;
	cvt.rn.f32.s32 	%f27, %r75;
	mov.f32 	%f28, 0fBFC90FDA;
	fma.rn.f32 	%f29, %f27, %f28, %f1;
	mov.f32 	%f30, 0fB3A22168;
	fma.rn.f32 	%f31, %f27, %f30, %f29;
	mov.f32 	%f32, 0fA7C234C5;
	fma.rn.f32 	%f135, %f27, %f32, %f31;
	abs.f32 	%f3, %f1;
	setp.ltu.f32 	%p3, %f3, 0f47CE4780;
	@%p3 bra 	$L__BB65_9;

	setp.eq.f32 	%p4, %f3, 0f7F800000;
	@%p4 bra 	$L__BB65_8;
	bra.uni 	$L__BB65_3;

$L__BB65_8:
	mov.f32 	%f35, 0f00000000;
	mul.rn.f32 	%f135, %f1, %f35;
	mov.u32 	%r75, 0;
	bra.uni 	$L__BB65_9;

$L__BB65_3:
	mov.b32 	%r3, %f1;
	bfe.u32 	%r29, %r3, 23, 8;
	add.s32 	%r4, %r29, -128;
	shl.b32 	%r30, %r3, 8;
	or.b32  	%r5, %r30, -2147483648;
	shr.u32 	%r6, %r4, 5;
	mov.u64 	%rd30, 0;
	mov.u32 	%r72, 0;
	mov.u64 	%rd28, __cudart_i2opi_f;
	mov.u64 	%rd29, %rd1;

$L__BB65_4:
	.pragma "nounroll";
	ld.global.nc.u32 	%r31, [%rd28];
	mad.wide.u32 	%rd17, %r31, %r5, %rd30;
	shr.u64 	%rd30, %rd17, 32;
	st.local.u32 	[%rd29], %rd17;
	add.s64 	%rd29, %rd29, 4;
	add.s64 	%rd28, %rd28, 4;
	add.s32 	%r72, %r72, 1;
	setp.ne.s32 	%p5, %r72, 6;
	@%p5 bra 	$L__BB65_4;

	st.local.u32 	[%rd1+24], %rd30;
	mov.u32 	%r32, 4;
	sub.s32 	%r9, %r32, %r6;
	mov.u32 	%r33, 6;
	sub.s32 	%r34, %r33, %r6;
	mul.wide.s32 	%rd18, %r34, 4;
	add.s64 	%rd19, %rd1, %rd18;
	ld.local.u32 	%r73, [%rd19];
	ld.local.u32 	%r74, [%rd19+-4];
	and.b32  	%r12, %r4, 31;
	setp.eq.s32 	%p6, %r12, 0;
	@%p6 bra 	$L__BB65_7;

	mov.u32 	%r35, 32;
	sub.s32 	%r36, %r35, %r12;
	shr.u32 	%r37, %r74, %r36;
	shl.b32 	%r38, %r73, %r12;
	add.s32 	%r73, %r37, %r38;
	mul.wide.s32 	%rd20, %r9, 4;
	add.s64 	%rd21, %rd1, %rd20;
	ld.local.u32 	%r39, [%rd21];
	shr.u32 	%r40, %r39, %r36;
	shl.b32 	%r41, %r74, %r12;
	add.s32 	%r74, %r40, %r41;

$L__BB65_7:
	and.b32  	%r42, %r3, -2147483648;
	shr.u32 	%r43, %r74, 30;
	shl.b32 	%r44, %r73, 2;
	or.b32  	%r45, %r43, %r44;
	shr.u32 	%r46, %r45, 31;
	shr.u32 	%r47, %r73, 30;
	add.s32 	%r48, %r46, %r47;
	neg.s32 	%r49, %r48;
	setp.eq.s32 	%p7, %r42, 0;
	selp.b32 	%r75, %r48, %r49, %p7;
	setp.ne.s32 	%p8, %r46, 0;
	xor.b32  	%r50, %r42, -2147483648;
	selp.b32 	%r51, %r50, %r42, %p8;
	selp.b32 	%r52, -1, 0, %p8;
	xor.b32  	%r53, %r45, %r52;
	shl.b32 	%r54, %r74, 2;
	xor.b32  	%r55, %r54, %r52;
	cvt.u64.u32 	%rd22, %r53;
	cvt.u64.u32 	%rd23, %r55;
	bfi.b64 	%rd24, %rd22, %rd23, 32, 32;
	cvt.rn.f64.s64 	%fd1, %rd24;
	mul.f64 	%fd2, %fd1, 0d3BF921FB54442D19;
	cvt.rn.f32.f64 	%f33, %fd2;
	setp.eq.s32 	%p9, %r51, 0;
	neg.f32 	%f34, %f33;
	selp.f32 	%f135, %f33, %f34, %p9;

$L__BB65_9:
	add.s32 	%r19, %r75, 1;
	and.b32  	%r20, %r19, 1;
	setp.eq.s32 	%p10, %r20, 0;
	selp.f32 	%f7, %f135, 0f3F800000, %p10;
	mul.rn.f32 	%f8, %f135, %f135;
	mov.f32 	%f136, 0fB94D4153;
	@%p10 bra 	$L__BB65_11;

	mov.f32 	%f37, 0fBAB607ED;
	mov.f32 	%f38, 0f37CBAC00;
	fma.rn.f32 	%f136, %f38, %f8, %f37;

$L__BB65_11:
	selp.f32 	%f39, 0f3C0885E4, 0f3D2AAABB, %p10;
	fma.rn.f32 	%f40, %f136, %f8, %f39;
	selp.f32 	%f41, 0fBE2AAAA8, 0fBEFFFFFF, %p10;
	fma.rn.f32 	%f42, %f40, %f8, %f41;
	mov.f32 	%f43, 0f00000000;
	fma.rn.f32 	%f44, %f8, %f7, %f43;
	fma.rn.f32 	%f137, %f42, %f44, %f7;
	and.b32  	%r57, %r19, 2;
	setp.eq.s32 	%p12, %r57, 0;
	@%p12 bra 	$L__BB65_13;

	mov.f32 	%f46, 0fBF800000;
	fma.rn.f32 	%f137, %f137, %f46, %f43;

$L__BB65_13:
	mov.f32 	%f48, 0f3F800000;
	cvt.rzi.f32.f32 	%f49, %f48;
	add.f32 	%f50, %f49, %f49;
	mov.f32 	%f51, 0f40000000;
	sub.f32 	%f52, %f51, %f50;
	abs.f32 	%f14, %f52;
	abs.f32 	%f15, %f137;
	setp.lt.f32 	%p13, %f15, 0f00800000;
	mul.f32 	%f53, %f15, 0f4B800000;
	selp.f32 	%f54, %f53, %f15, %p13;
	selp.f32 	%f55, 0fC3170000, 0fC2FE0000, %p13;
	mov.b32 	%r58, %f54;
	and.b32  	%r59, %r58, 8388607;
	or.b32  	%r60, %r59, 1065353216;
	mov.b32 	%f56, %r60;
	shr.u32 	%r61, %r58, 23;
	cvt.rn.f32.u32 	%f57, %r61;
	add.f32 	%f58, %f55, %f57;
	setp.gt.f32 	%p14, %f56, 0f3FB504F3;
	mul.f32 	%f59, %f56, 0f3F000000;
	add.f32 	%f60, %f58, 0f3F800000;
	selp.f32 	%f61, %f60, %f58, %p14;
	selp.f32 	%f62, %f59, %f56, %p14;
	add.f32 	%f63, %f62, 0fBF800000;
	add.f32 	%f64, %f62, 0f3F800000;
	rcp.approx.ftz.f32 	%f65, %f64;
	add.f32 	%f66, %f63, %f63;
	mul.f32 	%f67, %f66, %f65;
	mul.f32 	%f68, %f67, %f67;
	mov.f32 	%f69, 0f3C4CAF63;
	mov.f32 	%f70, 0f3B18F0FE;
	fma.rn.f32 	%f71, %f70, %f68, %f69;
	mov.f32 	%f72, 0f3DAAAABD;
	fma.rn.f32 	%f73, %f71, %f68, %f72;
	mul.rn.f32 	%f74, %f73, %f68;
	mul.rn.f32 	%f75, %f74, %f67;
	sub.f32 	%f76, %f63, %f67;
	add.f32 	%f77, %f76, %f76;
	neg.f32 	%f78, %f67;
	fma.rn.f32 	%f79, %f78, %f63, %f77;
	mul.rn.f32 	%f80, %f65, %f79;
	add.f32 	%f81, %f75, %f67;
	sub.f32 	%f82, %f67, %f81;
	add.f32 	%f83, %f75, %f82;
	add.f32 	%f84, %f80, %f83;
	add.f32 	%f85, %f81, %f84;
	sub.f32 	%f86, %f81, %f85;
	add.f32 	%f87, %f84, %f86;
	mov.f32 	%f88, 0f3F317200;
	mul.rn.f32 	%f89, %f61, %f88;
	mov.f32 	%f90, 0f35BFBE8E;
	mul.rn.f32 	%f91, %f61, %f90;
	add.f32 	%f92, %f89, %f85;
	sub.f32 	%f93, %f89, %f92;
	add.f32 	%f94, %f85, %f93;
	add.f32 	%f95, %f87, %f94;
	add.f32 	%f96, %f91, %f95;
	add.f32 	%f97, %f92, %f96;
	sub.f32 	%f98, %f92, %f97;
	add.f32 	%f99, %f96, %f98;
	mul.rn.f32 	%f100, %f51, %f97;
	neg.f32 	%f101, %f100;
	fma.rn.f32 	%f102, %f51, %f97, %f101;
	fma.rn.f32 	%f103, %f51, %f99, %f102;
	fma.rn.f32 	%f105, %f43, %f97, %f103;
	add.rn.f32 	%f106, %f100, %f105;
	neg.f32 	%f107, %f106;
	add.rn.f32 	%f108, %f100, %f107;
	add.rn.f32 	%f109, %f108, %f105;
	mov.b32 	%r62, %f106;
	setp.eq.s32 	%p15, %r62, 1118925336;
	add.s32 	%r63, %r62, -1;
	mov.b32 	%f110, %r63;
	add.f32 	%f111, %f109, 0f37000000;
	selp.f32 	%f16, %f111, %f109, %p15;
	selp.f32 	%f112, %f110, %f106, %p15;
	mov.f32 	%f113, 0f3FB8AA3B;
	mul.rn.f32 	%f114, %f112, %f113;
	cvt.rzi.f32.f32 	%f115, %f114;
	abs.f32 	%f116, %f115;
	setp.gt.f32 	%p16, %f116, 0f42FC0000;
	mov.b32 	%r64, %f115;
	and.b32  	%r65, %r64, -2147483648;
	or.b32  	%r66, %r65, 1123811328;
	mov.b32 	%f117, %r66;
	selp.f32 	%f118, %f117, %f115, %p16;
	mov.f32 	%f119, 0fBF317218;
	fma.rn.f32 	%f120, %f118, %f119, %f112;
	mov.f32 	%f121, 0f3102E308;
	fma.rn.f32 	%f122, %f118, %f121, %f120;
	mul.f32 	%f123, %f122, 0f3FB8AA3B;
	add.f32 	%f124, %f118, 0f4B40007F;
	mov.b32 	%r67, %f124;
	shl.b32 	%r68, %r67, 23;
	mov.b32 	%f125, %r68;
	ex2.approx.ftz.f32 	%f126, %f123;
	mul.f32 	%f17, %f126, %f125;
	setp.eq.f32 	%p17, %f17, 0f7F800000;
	mov.f32 	%f138, 0f7F800000;
	@%p17 bra 	$L__BB65_15;

	fma.rn.f32 	%f138, %f17, %f16, %f17;

$L__BB65_15:
	setp.lt.f32 	%p18, %f137, 0f00000000;
	setp.eq.f32 	%p19, %f14, 0f3F800000;
	and.pred  	%p1, %p18, %p19;
	setp.eq.f32 	%p20, %f137, 0f00000000;
	@%p20 bra 	$L__BB65_19;
	bra.uni 	$L__BB65_16;

$L__BB65_19:
	add.f32 	%f131, %f137, %f137;
	selp.f32 	%f140, %f131, 0f00000000, %p19;
	bra.uni 	$L__BB65_20;

$L__BB65_16:
	mov.b32 	%r69, %f138;
	xor.b32  	%r70, %r69, -2147483648;
	mov.b32 	%f127, %r70;
	selp.f32 	%f140, %f127, %f138, %p1;
	setp.geu.f32 	%p21, %f137, 0f00000000;
	@%p21 bra 	$L__BB65_20;

	mov.f32 	%f128, 0f40000000;
	cvt.rzi.f32.f32 	%f129, %f128;
	setp.eq.f32 	%p22, %f129, 0f40000000;
	@%p22 bra 	$L__BB65_20;

	mov.f32 	%f140, 0f7FFFFFFF;

$L__BB65_20:
	add.f32 	%f132, %f15, 0f40000000;
	mov.b32 	%r71, %f132;
	setp.lt.s32 	%p24, %r71, 2139095040;
	@%p24 bra 	$L__BB65_25;

	setp.gtu.f32 	%p25, %f15, 0f7F800000;
	@%p25 bra 	$L__BB65_24;
	bra.uni 	$L__BB65_22;

$L__BB65_24:
	add.f32 	%f140, %f137, 0f40000000;
	bra.uni 	$L__BB65_25;

$L__BB65_22:
	setp.neu.f32 	%p26, %f15, 0f7F800000;
	@%p26 bra 	$L__BB65_25;

	selp.f32 	%f140, 0fFF800000, 0f7F800000, %p1;

$L__BB65_25:
	rcp.rn.f32 	%f133, %f140;
	setp.eq.f32 	%p27, %f137, 0f3F800000;
	selp.f32 	%f134, 0f3F800000, %f133, %p27;
	cvta.to.global.u64 	%rd25, %rd10;
	shl.b64 	%rd26, %rd2, 2;
	add.s64 	%rd27, %rd25, %rd26;
	st.global.f32 	[%rd27], %f134;

$L__BB65_26:
	ret;

}
	// .globl	atan_kernel
.visible .entry atan_kernel(
	.param .u32 atan_kernel_param_0,
	.param .u64 atan_kernel_param_1,
	.param .u64 atan_kernel_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<26>;
	.reg .b32 	%r<13>;
	.reg .b64 	%rd<10>;


	ld.param.u32 	%r2, [atan_kernel_param_0];
	ld.param.u64 	%rd2, [atan_kernel_param_1];
	ld.param.u64 	%rd3, [atan_kernel_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB66_4;

	cvta.to.global.u64 	%rd4, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	abs.f32 	%f2, %f1;
	setp.leu.f32 	%p2, %f2, 0f3F800000;
	mov.f32 	%f25, %f2;
	@%p2 bra 	$L__BB66_3;

	rcp.rn.f32 	%f25, %f2;

$L__BB66_3:
	mul.rn.f32 	%f5, %f25, %f25;
	mov.f32 	%f6, 0fC0B59883;
	mov.f32 	%f7, 0fBF52C7EA;
	fma.rn.f32 	%f8, %f5, %f7, %f6;
	mov.f32 	%f9, 0fC0D21907;
	fma.rn.f32 	%f10, %f8, %f5, %f9;
	mul.f32 	%f11, %f5, %f10;
	mul.f32 	%f12, %f25, %f11;
	add.f32 	%f13, %f5, 0f41355DC0;
	mov.f32 	%f14, 0f41E6BD60;
	fma.rn.f32 	%f15, %f13, %f5, %f14;
	mov.f32 	%f16, 0f419D92C8;
	fma.rn.f32 	%f17, %f15, %f5, %f16;
	rcp.rn.f32 	%f18, %f17;
	fma.rn.f32 	%f19, %f12, %f18, %f25;
	mov.f32 	%f20, 0f3FC90FDB;
	sub.f32 	%f21, %f20, %f19;
	setp.gt.f32 	%p3, %f2, 0f3F800000;
	selp.f32 	%f22, %f21, %f19, %p3;
	mov.b32 	%r9, %f22;
	mov.b32 	%r10, %f1;
	and.b32  	%r11, %r10, -2147483648;
	or.b32  	%r12, %r11, %r9;
	mov.b32 	%f23, %r12;
	setp.le.f32 	%p4, %f2, 0f7F800000;
	selp.f32 	%f24, %f23, %f22, %p4;
	cvta.to.global.u64 	%rd7, %rd3;
	shl.b64 	%rd8, %rd1, 2;
	add.s64 	%rd9, %rd7, %rd8;
	st.global.f32 	[%rd9], %f24;

$L__BB66_4:
	ret;

}
	// .globl	atan_back_kernel
.visible .entry atan_back_kernel(
	.param .u32 atan_back_kernel_param_0,
	.param .u64 atan_back_kernel_param_1,
	.param .u64 atan_back_kernel_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [atan_back_kernel_param_0];
	ld.param.u64 	%rd1, [atan_back_kernel_param_1];
	ld.param.u64 	%rd2, [atan_back_kernel_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB67_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	fma.rn.f32 	%f2, %f1, %f1, 0f3F800000;
	rcp.rn.f32 	%f3, %f2;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f3;

$L__BB67_2:
	ret;

}
	// .globl	clamp_kernel
.visible .entry clamp_kernel(
	.param .u32 clamp_kernel_param_0,
	.param .u64 clamp_kernel_param_1,
	.param .f32 clamp_kernel_param_2,
	.param .f32 clamp_kernel_param_3,
	.param .u64 clamp_kernel_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [clamp_kernel_param_0];
	ld.param.u64 	%rd2, [clamp_kernel_param_1];
	ld.param.f32 	%f2, [clamp_kernel_param_2];
	ld.param.f32 	%f3, [clamp_kernel_param_3];
	ld.param.u64 	%rd3, [clamp_kernel_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB68_6;

	cvta.to.global.u64 	%rd4, %rd3;
	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	setp.lt.f32 	%p2, %f1, %f2;
	add.s64 	%rd1, %rd4, %rd6;
	@%p2 bra 	$L__BB68_5;
	bra.uni 	$L__BB68_2;

$L__BB68_5:
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB68_6;

$L__BB68_2:
	setp.gt.f32 	%p3, %f1, %f3;
	@%p3 bra 	$L__BB68_4;
	bra.uni 	$L__BB68_3;

$L__BB68_4:
	st.global.f32 	[%rd1], %f3;
	bra.uni 	$L__BB68_6;

$L__BB68_3:
	st.global.f32 	[%rd1], %f1;

$L__BB68_6:
	ret;

}
	// .globl	clamp_back_kernel
.visible .entry clamp_back_kernel(
	.param .u32 clamp_back_kernel_param_0,
	.param .u64 clamp_back_kernel_param_1,
	.param .f32 clamp_back_kernel_param_2,
	.param .f32 clamp_back_kernel_param_3,
	.param .u64 clamp_back_kernel_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [clamp_back_kernel_param_0];
	ld.param.u64 	%rd2, [clamp_back_kernel_param_1];
	ld.param.f32 	%f1, [clamp_back_kernel_param_2];
	ld.param.f32 	%f2, [clamp_back_kernel_param_3];
	ld.param.u64 	%rd3, [clamp_back_kernel_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB69_4;

	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f3, [%rd6];
	setp.lt.f32 	%p2, %f3, %f1;
	setp.gt.f32 	%p3, %f3, %f2;
	or.pred  	%p4, %p2, %p3;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd1, %rd7, %rd5;
	@%p4 bra 	$L__BB69_3;
	bra.uni 	$L__BB69_2;

$L__BB69_3:
	mov.u32 	%r10, 0;
	st.global.u32 	[%rd1], %r10;
	bra.uni 	$L__BB69_4;

$L__BB69_2:
	mov.u32 	%r9, 1065353216;
	st.global.u32 	[%rd1], %r9;

$L__BB69_4:
	ret;

}
	// .globl	maximum_kernel
.visible .entry maximum_kernel(
	.param .u32 maximum_kernel_param_0,
	.param .u64 maximum_kernel_param_1,
	.param .u64 maximum_kernel_param_2,
	.param .u64 maximum_kernel_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [maximum_kernel_param_0];
	ld.param.u64 	%rd2, [maximum_kernel_param_1];
	ld.param.u64 	%rd3, [maximum_kernel_param_2];
	ld.param.u64 	%rd4, [maximum_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB70_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd7];
	setp.ltu.f32 	%p2, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd1, %rd10, %rd6;
	@%p2 bra 	$L__BB70_3;
	bra.uni 	$L__BB70_2;

$L__BB70_3:
	st.global.f32 	[%rd1], %f1;
	bra.uni 	$L__BB70_4;

$L__BB70_2:
	st.global.f32 	[%rd1], %f2;

$L__BB70_4:
	ret;

}
	// .globl	minimum_kernel
.visible .entry minimum_kernel(
	.param .u32 minimum_kernel_param_0,
	.param .u64 minimum_kernel_param_1,
	.param .u64 minimum_kernel_param_2,
	.param .u64 minimum_kernel_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [minimum_kernel_param_0];
	ld.param.u64 	%rd2, [minimum_kernel_param_1];
	ld.param.u64 	%rd3, [minimum_kernel_param_2];
	ld.param.u64 	%rd4, [minimum_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB71_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd7];
	setp.lt.f32 	%p2, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd1, %rd10, %rd6;
	@%p2 bra 	$L__BB71_3;
	bra.uni 	$L__BB71_2;

$L__BB71_3:
	st.global.f32 	[%rd1], %f2;
	bra.uni 	$L__BB71_4;

$L__BB71_2:
	st.global.f32 	[%rd1], %f1;

$L__BB71_4:
	ret;

}
	// .globl	maximum_back_kernel
.visible .entry maximum_back_kernel(
	.param .u32 maximum_back_kernel_param_0,
	.param .u64 maximum_back_kernel_param_1,
	.param .u64 maximum_back_kernel_param_2,
	.param .u64 maximum_back_kernel_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [maximum_back_kernel_param_0];
	ld.param.u64 	%rd2, [maximum_back_kernel_param_1];
	ld.param.u64 	%rd3, [maximum_back_kernel_param_2];
	ld.param.u64 	%rd4, [maximum_back_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB72_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd7];
	setp.ltu.f32 	%p2, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd1, %rd10, %rd6;
	@%p2 bra 	$L__BB72_3;
	bra.uni 	$L__BB72_2;

$L__BB72_3:
	mov.u32 	%r10, 0;
	st.global.u32 	[%rd1], %r10;
	bra.uni 	$L__BB72_4;

$L__BB72_2:
	mov.u32 	%r9, 1065353216;
	st.global.u32 	[%rd1], %r9;

$L__BB72_4:
	ret;

}
	// .globl	minimum_back_kernel
.visible .entry minimum_back_kernel(
	.param .u32 minimum_back_kernel_param_0,
	.param .u64 minimum_back_kernel_param_1,
	.param .u64 minimum_back_kernel_param_2,
	.param .u64 minimum_back_kernel_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [minimum_back_kernel_param_0];
	ld.param.u64 	%rd2, [minimum_back_kernel_param_1];
	ld.param.u64 	%rd3, [minimum_back_kernel_param_2];
	ld.param.u64 	%rd4, [minimum_back_kernel_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB73_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f1, [%rd9];
	ld.global.f32 	%f2, [%rd7];
	setp.lt.f32 	%p2, %f2, %f1;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd1, %rd10, %rd6;
	@%p2 bra 	$L__BB73_3;
	bra.uni 	$L__BB73_2;

$L__BB73_3:
	mov.u32 	%r10, 1065353216;
	st.global.u32 	[%rd1], %r10;
	bra.uni 	$L__BB73_4;

$L__BB73_2:
	mov.u32 	%r9, 0;
	st.global.u32 	[%rd1], %r9;

$L__BB73_4:
	ret;

}
	// .globl	transpose_kernel
.visible .entry transpose_kernel(
	.param .u32 transpose_kernel_param_0,
	.param .u64 transpose_kernel_param_1,
	.param .u64 transpose_kernel_param_2,
	.param .u32 transpose_kernel_param_3,
	.param .u32 transpose_kernel_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r4, [transpose_kernel_param_0];
	ld.param.u64 	%rd1, [transpose_kernel_param_1];
	ld.param.u64 	%rd2, [transpose_kernel_param_2];
	ld.param.u32 	%r2, [transpose_kernel_param_3];
	ld.param.u32 	%r3, [transpose_kernel_param_4];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %nctaid.x;
	mov.u32 	%r7, %ctaid.y;
	mad.lo.s32 	%r8, %r7, %r6, %r5;
	mov.u32 	%r9, %ntid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	setp.ge.s32 	%p1, %r1, %r4;
	@%p1 bra 	$L__BB74_2;

	div.s32 	%r11, %r1, %r3;
	mul.lo.s32 	%r12, %r11, %r3;
	sub.s32 	%r13, %r1, %r12;
	cvta.to.global.u64 	%rd3, %rd1;
	mad.lo.s32 	%r14, %r11, %r3, %r13;
	mul.wide.s32 	%rd4, %r14, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	mad.lo.s32 	%r15, %r13, %r2, %r11;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r15, 4;
	add.s64 	%rd8, %rd6, %rd7;
	st.global.f32 	[%rd8], %f1;

$L__BB74_2:
	ret;

}
	// .globl	permute_kernel
.visible .entry permute_kernel(
	.param .u32 permute_kernel_param_0,
	.param .u64 permute_kernel_param_1,
	.param .u64 permute_kernel_param_2,
	.param .u64 permute_kernel_param_3,
	.param .u64 permute_kernel_param_4,
	.param .u64 permute_kernel_param_5,
	.param .u32 permute_kernel_param_6
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<80>;
	.reg .b64 	%rd<44>;


	ld.param.u32 	%r24, [permute_kernel_param_0];
	ld.param.u64 	%rd16, [permute_kernel_param_1];
	ld.param.u64 	%rd17, [permute_kernel_param_2];
	ld.param.u64 	%rd18, [permute_kernel_param_3];
	ld.param.u64 	%rd19, [permute_kernel_param_4];
	ld.param.u64 	%rd20, [permute_kernel_param_5];
	ld.param.u32 	%r23, [permute_kernel_param_6];
	cvta.to.global.u64 	%rd1, %rd19;
	cvta.to.global.u64 	%rd2, %rd18;
	cvta.to.global.u64 	%rd3, %rd20;
	mov.u32 	%r25, %nctaid.x;
	mov.u32 	%r26, %ctaid.y;
	mov.u32 	%r27, %ctaid.x;
	mad.lo.s32 	%r28, %r26, %r25, %r27;
	mov.u32 	%r29, %ntid.x;
	mov.u32 	%r30, %tid.x;
	mad.lo.s32 	%r1, %r28, %r29, %r30;
	setp.ge.s32 	%p1, %r1, %r24;
	@%p1 bra 	$L__BB75_10;

	setp.lt.s32 	%p2, %r23, 1;
	mov.u64 	%rd43, 0;
	@%p2 bra 	$L__BB75_9;

	add.s32 	%r34, %r23, -1;
	and.b32  	%r78, %r23, 3;
	setp.lt.u32 	%p3, %r34, 3;
	mov.u32 	%r73, 0;
	mov.u32 	%r79, %r73;
	mov.u32 	%r75, %r1;
	@%p3 bra 	$L__BB75_5;

	sub.s32 	%r71, %r23, %r78;
	mov.u64 	%rd39, %rd2;
	mov.u64 	%rd40, %rd3;
	mov.u32 	%r75, %r1;

$L__BB75_4:
	ld.global.u32 	%r37, [%rd40];
	div.s32 	%r38, %r75, %r37;
	ld.global.u32 	%r39, [%rd39];
	mul.wide.s32 	%rd22, %r39, 4;
	add.s64 	%rd23, %rd1, %rd22;
	ld.global.u32 	%r40, [%rd23];
	mad.lo.s32 	%r41, %r40, %r38, %r79;
	mul.lo.s32 	%r42, %r38, %r37;
	sub.s32 	%r43, %r75, %r42;
	ld.global.u32 	%r44, [%rd40+4];
	div.s32 	%r45, %r43, %r44;
	ld.global.u32 	%r46, [%rd39+4];
	mul.wide.s32 	%rd24, %r46, 4;
	add.s64 	%rd25, %rd1, %rd24;
	ld.global.u32 	%r47, [%rd25];
	mad.lo.s32 	%r48, %r47, %r45, %r41;
	mul.lo.s32 	%r49, %r45, %r44;
	sub.s32 	%r50, %r43, %r49;
	ld.global.u32 	%r51, [%rd40+8];
	div.s32 	%r52, %r50, %r51;
	ld.global.u32 	%r53, [%rd39+8];
	mul.wide.s32 	%rd26, %r53, 4;
	add.s64 	%rd27, %rd1, %rd26;
	ld.global.u32 	%r54, [%rd27];
	mad.lo.s32 	%r55, %r54, %r52, %r48;
	mul.lo.s32 	%r56, %r52, %r51;
	sub.s32 	%r57, %r50, %r56;
	ld.global.u32 	%r58, [%rd40+12];
	div.s32 	%r59, %r57, %r58;
	ld.global.u32 	%r60, [%rd39+12];
	mul.wide.s32 	%rd28, %r60, 4;
	add.s64 	%rd29, %rd1, %rd28;
	ld.global.u32 	%r61, [%rd29];
	mad.lo.s32 	%r79, %r61, %r59, %r55;
	mul.lo.s32 	%r62, %r59, %r58;
	sub.s32 	%r75, %r57, %r62;
	add.s32 	%r73, %r73, 4;
	add.s64 	%rd40, %rd40, 16;
	add.s64 	%rd39, %rd39, 16;
	add.s32 	%r71, %r71, -4;
	setp.ne.s32 	%p4, %r71, 0;
	@%p4 bra 	$L__BB75_4;

$L__BB75_5:
	setp.eq.s32 	%p5, %r78, 0;
	@%p5 bra 	$L__BB75_8;

	mul.wide.s32 	%rd30, %r73, 4;
	add.s64 	%rd42, %rd2, %rd30;
	add.s64 	%rd41, %rd3, %rd30;

$L__BB75_7:
	.pragma "nounroll";
	ld.global.u32 	%r63, [%rd41];
	div.s32 	%r64, %r75, %r63;
	ld.global.u32 	%r65, [%rd42];
	mul.wide.s32 	%rd31, %r65, 4;
	add.s64 	%rd32, %rd1, %rd31;
	ld.global.u32 	%r66, [%rd32];
	mad.lo.s32 	%r79, %r66, %r64, %r79;
	mul.lo.s32 	%r67, %r64, %r63;
	sub.s32 	%r75, %r75, %r67;
	add.s64 	%rd42, %rd42, 4;
	add.s64 	%rd41, %rd41, 4;
	add.s32 	%r78, %r78, -1;
	setp.ne.s32 	%p6, %r78, 0;
	@%p6 bra 	$L__BB75_7;

$L__BB75_8:
	cvt.s64.s32 	%rd43, %r79;

$L__BB75_9:
	cvta.to.global.u64 	%rd33, %rd16;
	shl.b64 	%rd34, %rd43, 2;
	add.s64 	%rd35, %rd33, %rd34;
	ld.global.f32 	%f1, [%rd35];
	cvta.to.global.u64 	%rd36, %rd17;
	mul.wide.s32 	%rd37, %r1, 4;
	add.s64 	%rd38, %rd36, %rd37;
	st.global.f32 	[%rd38], %f1;

$L__BB75_10:
	ret;

}
	// .globl	permute_add_kernel
.visible .entry permute_add_kernel(
	.param .u32 permute_add_kernel_param_0,
	.param .u64 permute_add_kernel_param_1,
	.param .u64 permute_add_kernel_param_2,
	.param .u64 permute_add_kernel_param_3,
	.param .u64 permute_add_kernel_param_4,
	.param .u64 permute_add_kernel_param_5,
	.param .u32 permute_add_kernel_param_6
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<80>;
	.reg .b64 	%rd<44>;


	ld.param.u32 	%r24, [permute_add_kernel_param_0];
	ld.param.u64 	%rd16, [permute_add_kernel_param_1];
	ld.param.u64 	%rd17, [permute_add_kernel_param_2];
	ld.param.u64 	%rd18, [permute_add_kernel_param_3];
	ld.param.u64 	%rd19, [permute_add_kernel_param_4];
	ld.param.u64 	%rd20, [permute_add_kernel_param_5];
	ld.param.u32 	%r23, [permute_add_kernel_param_6];
	cvta.to.global.u64 	%rd1, %rd19;
	cvta.to.global.u64 	%rd2, %rd18;
	cvta.to.global.u64 	%rd3, %rd20;
	mov.u32 	%r25, %nctaid.x;
	mov.u32 	%r26, %ctaid.y;
	mov.u32 	%r27, %ctaid.x;
	mad.lo.s32 	%r28, %r26, %r25, %r27;
	mov.u32 	%r29, %ntid.x;
	mov.u32 	%r30, %tid.x;
	mad.lo.s32 	%r1, %r28, %r29, %r30;
	setp.ge.s32 	%p1, %r1, %r24;
	@%p1 bra 	$L__BB76_10;

	setp.lt.s32 	%p2, %r23, 1;
	mov.u64 	%rd43, 0;
	@%p2 bra 	$L__BB76_9;

	add.s32 	%r34, %r23, -1;
	and.b32  	%r78, %r23, 3;
	setp.lt.u32 	%p3, %r34, 3;
	mov.u32 	%r73, 0;
	mov.u32 	%r79, %r73;
	mov.u32 	%r75, %r1;
	@%p3 bra 	$L__BB76_5;

	sub.s32 	%r71, %r23, %r78;
	mov.u64 	%rd39, %rd2;
	mov.u64 	%rd40, %rd3;
	mov.u32 	%r75, %r1;

$L__BB76_4:
	ld.global.u32 	%r37, [%rd40];
	div.s32 	%r38, %r75, %r37;
	ld.global.u32 	%r39, [%rd39];
	mul.wide.s32 	%rd22, %r39, 4;
	add.s64 	%rd23, %rd1, %rd22;
	ld.global.u32 	%r40, [%rd23];
	mad.lo.s32 	%r41, %r40, %r38, %r79;
	mul.lo.s32 	%r42, %r38, %r37;
	sub.s32 	%r43, %r75, %r42;
	ld.global.u32 	%r44, [%rd40+4];
	div.s32 	%r45, %r43, %r44;
	ld.global.u32 	%r46, [%rd39+4];
	mul.wide.s32 	%rd24, %r46, 4;
	add.s64 	%rd25, %rd1, %rd24;
	ld.global.u32 	%r47, [%rd25];
	mad.lo.s32 	%r48, %r47, %r45, %r41;
	mul.lo.s32 	%r49, %r45, %r44;
	sub.s32 	%r50, %r43, %r49;
	ld.global.u32 	%r51, [%rd40+8];
	div.s32 	%r52, %r50, %r51;
	ld.global.u32 	%r53, [%rd39+8];
	mul.wide.s32 	%rd26, %r53, 4;
	add.s64 	%rd27, %rd1, %rd26;
	ld.global.u32 	%r54, [%rd27];
	mad.lo.s32 	%r55, %r54, %r52, %r48;
	mul.lo.s32 	%r56, %r52, %r51;
	sub.s32 	%r57, %r50, %r56;
	ld.global.u32 	%r58, [%rd40+12];
	div.s32 	%r59, %r57, %r58;
	ld.global.u32 	%r60, [%rd39+12];
	mul.wide.s32 	%rd28, %r60, 4;
	add.s64 	%rd29, %rd1, %rd28;
	ld.global.u32 	%r61, [%rd29];
	mad.lo.s32 	%r79, %r61, %r59, %r55;
	mul.lo.s32 	%r62, %r59, %r58;
	sub.s32 	%r75, %r57, %r62;
	add.s32 	%r73, %r73, 4;
	add.s64 	%rd40, %rd40, 16;
	add.s64 	%rd39, %rd39, 16;
	add.s32 	%r71, %r71, -4;
	setp.ne.s32 	%p4, %r71, 0;
	@%p4 bra 	$L__BB76_4;

$L__BB76_5:
	setp.eq.s32 	%p5, %r78, 0;
	@%p5 bra 	$L__BB76_8;

	mul.wide.s32 	%rd30, %r73, 4;
	add.s64 	%rd42, %rd2, %rd30;
	add.s64 	%rd41, %rd3, %rd30;

$L__BB76_7:
	.pragma "nounroll";
	ld.global.u32 	%r63, [%rd41];
	div.s32 	%r64, %r75, %r63;
	ld.global.u32 	%r65, [%rd42];
	mul.wide.s32 	%rd31, %r65, 4;
	add.s64 	%rd32, %rd1, %rd31;
	ld.global.u32 	%r66, [%rd32];
	mad.lo.s32 	%r79, %r66, %r64, %r79;
	mul.lo.s32 	%r67, %r64, %r63;
	sub.s32 	%r75, %r75, %r67;
	add.s64 	%rd42, %rd42, 4;
	add.s64 	%rd41, %rd41, 4;
	add.s32 	%r78, %r78, -1;
	setp.ne.s32 	%p6, %r78, 0;
	@%p6 bra 	$L__BB76_7;

$L__BB76_8:
	cvt.s64.s32 	%rd43, %r79;

$L__BB76_9:
	cvta.to.global.u64 	%rd33, %rd17;
	mul.wide.s32 	%rd34, %r1, 4;
	add.s64 	%rd35, %rd33, %rd34;
	ld.global.f32 	%f1, [%rd35];
	cvta.to.global.u64 	%rd36, %rd16;
	shl.b64 	%rd37, %rd43, 2;
	add.s64 	%rd38, %rd36, %rd37;
	ld.global.f32 	%f2, [%rd38];
	add.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd35], %f3;

$L__BB76_10:
	ret;

}
	// .globl	mean_kernel
.visible .entry mean_kernel(
	.param .u32 mean_kernel_param_0,
	.param .u64 mean_kernel_param_1,
	.param .u64 mean_kernel_param_2,
	.param .u32 mean_kernel_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .f32 	%f<29>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<18>;


	ld.param.u32 	%r12, [mean_kernel_param_0];
	ld.param.u64 	%rd9, [mean_kernel_param_1];
	ld.param.u64 	%rd8, [mean_kernel_param_2];
	ld.param.u32 	%r11, [mean_kernel_param_3];
	cvta.to.global.u64 	%rd1, %rd9;
	mov.u32 	%r13, %nctaid.x;
	mov.u32 	%r14, %ctaid.y;
	mov.u32 	%r15, %ctaid.x;
	mad.lo.s32 	%r16, %r14, %r13, %r15;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32 	%p1, %r1, %r12;
	@%p1 bra 	$L__BB77_9;

	setp.lt.s32 	%p2, %r11, 1;
	mov.f32 	%f28, 0f00000000;
	@%p2 bra 	$L__BB77_8;

	add.s32 	%r20, %r11, -1;
	and.b32  	%r27, %r11, 3;
	setp.lt.u32 	%p3, %r20, 3;
	mov.f32 	%f28, 0f00000000;
	mov.u32 	%r26, 0;
	@%p3 bra 	$L__BB77_5;

	sub.s32 	%r25, %r11, %r27;
	mul.lo.s32 	%r22, %r11, %r1;
	mul.wide.s32 	%rd10, %r22, 4;
	add.s64 	%rd11, %rd1, %rd10;
	add.s64 	%rd16, %rd11, 8;

$L__BB77_4:
	ld.global.f32 	%f12, [%rd16+-8];
	add.f32 	%f13, %f28, %f12;
	ld.global.f32 	%f14, [%rd16+-4];
	add.f32 	%f15, %f13, %f14;
	ld.global.f32 	%f16, [%rd16];
	add.f32 	%f17, %f15, %f16;
	ld.global.f32 	%f18, [%rd16+4];
	add.f32 	%f28, %f17, %f18;
	add.s32 	%r26, %r26, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r25, %r25, -4;
	setp.ne.s32 	%p4, %r25, 0;
	@%p4 bra 	$L__BB77_4;

$L__BB77_5:
	setp.eq.s32 	%p5, %r27, 0;
	@%p5 bra 	$L__BB77_8;

	mad.lo.s32 	%r23, %r11, %r1, %r26;
	mul.wide.s32 	%rd12, %r23, 4;
	add.s64 	%rd17, %rd1, %rd12;

$L__BB77_7:
	.pragma "nounroll";
	ld.global.f32 	%f19, [%rd17];
	add.f32 	%f28, %f28, %f19;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r27, %r27, -1;
	setp.ne.s32 	%p6, %r27, 0;
	@%p6 bra 	$L__BB77_7;

$L__BB77_8:
	cvt.rn.f32.s32 	%f20, %r11;
	div.rn.f32 	%f21, %f28, %f20;
	cvta.to.global.u64 	%rd13, %rd8;
	mul.wide.s32 	%rd14, %r1, 4;
	add.s64 	%rd15, %rd13, %rd14;
	ld.global.f32 	%f22, [%rd15];
	add.f32 	%f23, %f21, %f22;
	st.global.f32 	[%rd15], %f23;

$L__BB77_9:
	ret;

}
	// .globl	mean_back_kernel
.visible .entry mean_back_kernel(
	.param .u32 mean_back_kernel_param_0,
	.param .u64 mean_back_kernel_param_1,
	.param .u64 mean_back_kernel_param_2,
	.param .u32 mean_back_kernel_param_3
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<12>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<18>;


	ld.param.u32 	%r12, [mean_back_kernel_param_0];
	ld.param.u64 	%rd9, [mean_back_kernel_param_1];
	ld.param.u64 	%rd10, [mean_back_kernel_param_2];
	ld.param.u32 	%r11, [mean_back_kernel_param_3];
	cvta.to.global.u64 	%rd1, %rd10;
	mov.u32 	%r13, %nctaid.x;
	mov.u32 	%r14, %ctaid.y;
	mov.u32 	%r15, %ctaid.x;
	mad.lo.s32 	%r16, %r14, %r13, %r15;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32 	%p1, %r1, %r12;
	setp.lt.s32 	%p2, %r11, 1;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB78_7;

	cvta.to.global.u64 	%rd11, %rd9;
	mul.wide.s32 	%rd12, %r1, 4;
	add.s64 	%rd2, %rd11, %rd12;
	cvt.rn.f32.s32 	%f1, %r11;
	and.b32  	%r27, %r11, 3;
	add.s32 	%r20, %r11, -1;
	setp.lt.u32 	%p4, %r20, 3;
	mov.u32 	%r26, 0;
	@%p4 bra 	$L__BB78_4;

	sub.s32 	%r25, %r11, %r27;
	mul.lo.s32 	%r22, %r11, %r1;
	mul.wide.s32 	%rd13, %r22, 4;
	add.s64 	%rd14, %rd1, %rd13;
	add.s64 	%rd16, %rd14, 8;

$L__BB78_3:
	ld.global.f32 	%f2, [%rd2];
	div.rn.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd16+-8], %f3;
	ld.global.f32 	%f4, [%rd2];
	div.rn.f32 	%f5, %f4, %f1;
	st.global.f32 	[%rd16+-4], %f5;
	ld.global.f32 	%f6, [%rd2];
	div.rn.f32 	%f7, %f6, %f1;
	st.global.f32 	[%rd16], %f7;
	ld.global.f32 	%f8, [%rd2];
	div.rn.f32 	%f9, %f8, %f1;
	st.global.f32 	[%rd16+4], %f9;
	add.s32 	%r26, %r26, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r25, %r25, -4;
	setp.ne.s32 	%p5, %r25, 0;
	@%p5 bra 	$L__BB78_3;

$L__BB78_4:
	setp.eq.s32 	%p6, %r27, 0;
	@%p6 bra 	$L__BB78_7;

	mad.lo.s32 	%r23, %r11, %r1, %r26;
	mul.wide.s32 	%rd15, %r23, 4;
	add.s64 	%rd17, %rd1, %rd15;

$L__BB78_6:
	.pragma "nounroll";
	ld.global.f32 	%f10, [%rd2];
	div.rn.f32 	%f11, %f10, %f1;
	st.global.f32 	[%rd17], %f11;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r27, %r27, -1;
	setp.ne.s32 	%p7, %r27, 0;
	@%p7 bra 	$L__BB78_6;

$L__BB78_7:
	ret;

}
	// .globl	cat_width_kernel
.visible .entry cat_width_kernel(
	.param .u32 cat_width_kernel_param_0,
	.param .u64 cat_width_kernel_param_1,
	.param .u64 cat_width_kernel_param_2,
	.param .u64 cat_width_kernel_param_3,
	.param .u32 cat_width_kernel_param_4
)
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<46>;
	.reg .b64 	%rd<37>;


	ld.param.u32 	%r17, [cat_width_kernel_param_0];
	ld.param.u64 	%rd11, [cat_width_kernel_param_1];
	ld.param.u64 	%rd12, [cat_width_kernel_param_2];
	ld.param.u64 	%rd13, [cat_width_kernel_param_3];
	ld.param.u32 	%r16, [cat_width_kernel_param_4];
	cvta.to.global.u64 	%rd1, %rd13;
	mov.u32 	%r18, %nctaid.x;
	mov.u32 	%r19, %ctaid.y;
	mov.u32 	%r20, %ctaid.x;
	mad.lo.s32 	%r21, %r19, %r18, %r20;
	mov.u32 	%r22, %ntid.x;
	mov.u32 	%r23, %tid.x;
	mad.lo.s32 	%r1, %r21, %r22, %r23;
	setp.ge.s32 	%p1, %r1, %r17;
	setp.lt.s32 	%p2, %r16, 1;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB79_7;

	mul.lo.s32 	%r2, %r1, %r16;
	shl.b32 	%r25, %r16, 1;
	max.s32 	%r3, %r25, 1;
	add.s32 	%r26, %r3, -1;
	and.b32  	%r45, %r3, 3;
	setp.lt.u32 	%p4, %r26, 3;
	mov.u32 	%r43, 0;
	@%p4 bra 	$L__BB79_4;

	sub.s32 	%r42, %r3, %r45;
	mul.wide.s32 	%rd14, %r2, 4;
	add.s64 	%rd35, %rd14, 4;
	shl.b32 	%r28, %r2, 1;
	mul.wide.s32 	%rd15, %r28, 4;
	add.s64 	%rd16, %rd1, %rd15;
	add.s64 	%rd34, %rd16, 8;

$L__BB79_3:
	div.s32 	%r29, %r43, %r16;
	setp.lt.s32 	%p5, %r29, 1;
	selp.b64 	%rd17, %rd11, %rd12, %p5;
	cvta.to.global.u64 	%rd18, %rd17;
	add.s64 	%rd19, %rd18, %rd35;
	ld.global.f32 	%f1, [%rd19+-4];
	st.global.f32 	[%rd34+-8], %f1;
	add.s32 	%r30, %r43, 1;
	div.s32 	%r31, %r30, %r16;
	setp.lt.s32 	%p6, %r31, 1;
	selp.b64 	%rd20, %rd11, %rd12, %p6;
	cvta.to.global.u64 	%rd21, %rd20;
	add.s64 	%rd22, %rd21, %rd35;
	ld.global.f32 	%f2, [%rd22+-4];
	st.global.f32 	[%rd34+-4], %f2;
	add.s32 	%r32, %r43, 2;
	div.s32 	%r33, %r32, %r16;
	setp.lt.s32 	%p7, %r33, 1;
	selp.b64 	%rd23, %rd11, %rd12, %p7;
	cvta.to.global.u64 	%rd24, %rd23;
	add.s64 	%rd25, %rd24, %rd35;
	ld.global.f32 	%f3, [%rd25];
	st.global.f32 	[%rd34], %f3;
	add.s32 	%r34, %r43, 3;
	div.s32 	%r35, %r34, %r16;
	setp.lt.s32 	%p8, %r35, 1;
	selp.b64 	%rd26, %rd11, %rd12, %p8;
	cvta.to.global.u64 	%rd27, %rd26;
	add.s64 	%rd28, %rd27, %rd35;
	ld.global.f32 	%f4, [%rd28];
	st.global.f32 	[%rd34+4], %f4;
	add.s32 	%r43, %r43, 4;
	add.s64 	%rd35, %rd35, 8;
	add.s64 	%rd34, %rd34, 16;
	add.s32 	%r42, %r42, -4;
	setp.ne.s32 	%p9, %r42, 0;
	@%p9 bra 	$L__BB79_3;

$L__BB79_4:
	setp.eq.s32 	%p10, %r45, 0;
	@%p10 bra 	$L__BB79_7;

	shl.b32 	%r36, %r2, 1;
	add.s32 	%r37, %r43, %r36;
	mul.wide.s32 	%rd29, %r37, 4;
	add.s64 	%rd36, %rd1, %rd29;

$L__BB79_6:
	.pragma "nounroll";
	div.s32 	%r38, %r43, %r16;
	setp.lt.s32 	%p11, %r38, 1;
	shr.u32 	%r39, %r43, 1;
	add.s32 	%r40, %r39, %r2;
	selp.b64 	%rd30, %rd11, %rd12, %p11;
	cvta.to.global.u64 	%rd31, %rd30;
	mul.wide.s32 	%rd32, %r40, 4;
	add.s64 	%rd33, %rd31, %rd32;
	ld.global.f32 	%f5, [%rd33];
	st.global.f32 	[%rd36], %f5;
	add.s32 	%r43, %r43, 1;
	add.s64 	%rd36, %rd36, 4;
	add.s32 	%r45, %r45, -1;
	setp.ne.s32 	%p12, %r45, 0;
	@%p12 bra 	$L__BB79_6;

$L__BB79_7:
	ret;

}
	// .globl	cat_width_back_kernel
.visible .entry cat_width_back_kernel(
	.param .u32 cat_width_back_kernel_param_0,
	.param .u64 cat_width_back_kernel_param_1,
	.param .u64 cat_width_back_kernel_param_2,
	.param .u64 cat_width_back_kernel_param_3,
	.param .u32 cat_width_back_kernel_param_4
)
{
	.reg .pred 	%p<13>;
	.reg .f32 	%f<6>;
	.reg .b32 	%r<46>;
	.reg .b64 	%rd<36>;


	ld.param.u32 	%r20, [cat_width_back_kernel_param_0];
	ld.param.u64 	%rd20, [cat_width_back_kernel_param_1];
	ld.param.u64 	%rd21, [cat_width_back_kernel_param_2];
	ld.param.u64 	%rd22, [cat_width_back_kernel_param_3];
	ld.param.u32 	%r19, [cat_width_back_kernel_param_4];
	cvta.to.global.u64 	%rd1, %rd20;
	cvta.to.global.u64 	%rd2, %rd21;
	cvta.to.global.u64 	%rd3, %rd22;
	mov.u32 	%r21, %nctaid.x;
	mov.u32 	%r22, %ctaid.y;
	mov.u32 	%r23, %ctaid.x;
	mad.lo.s32 	%r24, %r22, %r21, %r23;
	mov.u32 	%r25, %ntid.x;
	mov.u32 	%r26, %tid.x;
	mad.lo.s32 	%r1, %r24, %r25, %r26;
	setp.ge.s32 	%p1, %r1, %r20;
	setp.lt.s32 	%p2, %r19, 1;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB80_22;

	mul.lo.s32 	%r2, %r1, %r19;
	shl.b32 	%r28, %r19, 1;
	max.s32 	%r3, %r28, 1;
	add.s32 	%r29, %r3, -1;
	and.b32  	%r45, %r3, 3;
	setp.lt.u32 	%p4, %r29, 3;
	mov.u32 	%r44, 0;
	@%p4 bra 	$L__BB80_16;

	sub.s32 	%r42, %r3, %r45;
	mul.wide.s32 	%rd23, %r2, 4;
	add.s64 	%rd24, %rd23, 4;
	add.s64 	%rd34, %rd2, %rd24;
	shl.b32 	%r31, %r2, 1;
	mul.wide.s32 	%rd25, %r31, 4;
	add.s64 	%rd26, %rd3, %rd25;
	add.s64 	%rd33, %rd26, 8;
	add.s64 	%rd32, %rd1, %rd24;
	mov.u32 	%r41, 0;

$L__BB80_3:
	div.s32 	%r32, %r41, %r19;
	setp.lt.s32 	%p5, %r32, 1;
	add.s64 	%rd10, %rd33, -8;
	ld.global.f32 	%f1, [%rd33+-8];
	add.s64 	%rd11, %rd34, -4;
	add.s64 	%rd12, %rd32, -4;
	@%p5 bra 	$L__BB80_5;

	st.global.f32 	[%rd11], %f1;
	bra.uni 	$L__BB80_6;

$L__BB80_5:
	st.global.f32 	[%rd12], %f1;

$L__BB80_6:
	add.s32 	%r8, %r41, 1;
	div.s32 	%r33, %r8, %r19;
	setp.lt.s32 	%p6, %r33, 1;
	ld.global.f32 	%f2, [%rd10+4];
	@%p6 bra 	$L__BB80_8;

	st.global.f32 	[%rd11], %f2;
	bra.uni 	$L__BB80_9;

$L__BB80_8:
	st.global.f32 	[%rd12], %f2;

$L__BB80_9:
	add.s32 	%r9, %r8, 1;
	div.s32 	%r34, %r9, %r19;
	setp.lt.s32 	%p7, %r34, 1;
	ld.global.f32 	%f3, [%rd10+8];
	@%p7 bra 	$L__BB80_11;

	st.global.f32 	[%rd11+4], %f3;
	bra.uni 	$L__BB80_12;

$L__BB80_11:
	st.global.f32 	[%rd12+4], %f3;

$L__BB80_12:
	add.s32 	%r10, %r9, 1;
	div.s32 	%r35, %r10, %r19;
	setp.lt.s32 	%p8, %r35, 1;
	ld.global.f32 	%f4, [%rd10+12];
	@%p8 bra 	$L__BB80_14;

	st.global.f32 	[%rd11+4], %f4;
	bra.uni 	$L__BB80_15;

$L__BB80_14:
	st.global.f32 	[%rd12+4], %f4;

$L__BB80_15:
	add.s32 	%r44, %r41, 4;
	add.s64 	%rd34, %rd34, 8;
	add.s64 	%rd33, %rd33, 16;
	add.s64 	%rd32, %rd32, 8;
	add.s32 	%r42, %r42, -4;
	setp.ne.s32 	%p9, %r42, 0;
	add.s32 	%r41, %r10, 1;
	@%p9 bra 	$L__BB80_3;

$L__BB80_16:
	setp.eq.s32 	%p10, %r45, 0;
	@%p10 bra 	$L__BB80_22;

	shl.b32 	%r36, %r2, 1;
	add.s32 	%r37, %r44, %r36;
	mul.wide.s32 	%rd27, %r37, 4;
	add.s64 	%rd35, %rd3, %rd27;

$L__BB80_18:
	.pragma "nounroll";
	div.s32 	%r38, %r44, %r19;
	setp.lt.s32 	%p11, %r38, 1;
	ld.global.f32 	%f5, [%rd35];
	shr.u32 	%r39, %r44, 1;
	add.s32 	%r40, %r39, %r2;
	cvt.s64.s32 	%rd18, %r40;
	@%p11 bra 	$L__BB80_20;

	shl.b64 	%rd28, %rd18, 2;
	add.s64 	%rd29, %rd2, %rd28;
	st.global.f32 	[%rd29], %f5;
	bra.uni 	$L__BB80_21;

$L__BB80_20:
	shl.b64 	%rd30, %rd18, 2;
	add.s64 	%rd31, %rd1, %rd30;
	st.global.f32 	[%rd31], %f5;

$L__BB80_21:
	add.s32 	%r44, %r44, 1;
	add.s64 	%rd35, %rd35, 4;
	add.s32 	%r45, %r45, -1;
	setp.ne.s32 	%p12, %r45, 0;
	@%p12 bra 	$L__BB80_18;

$L__BB80_22:
	ret;

}
	// .globl	update_ema
.visible .entry update_ema(
	.param .u32 update_ema_param_0,
	.param .u64 update_ema_param_1,
	.param .u64 update_ema_param_2,
	.param .f32 update_ema_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [update_ema_param_0];
	ld.param.u64 	%rd1, [update_ema_param_1];
	ld.param.u64 	%rd2, [update_ema_param_2];
	ld.param.f32 	%f1, [update_ema_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB81_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f4, %f3, %f1;
	ld.global.f32 	%f5, [%rd7];
	mul.f32 	%f6, %f4, %f5;
	fma.rn.f32 	%f7, %f2, %f1, %f6;
	st.global.f32 	[%rd5], %f7;

$L__BB81_2:
	ret;

}

