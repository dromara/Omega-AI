//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31442593
// Cuda compilation tools, release 11.7, V11.7.99
// Based on NVVM 7.0.1
//

.version 7.7
.target sm_52
.address_size 64

	// .globl	upsample_kernel

.visible .entry upsample_kernel(
	.param .u32 upsample_kernel_param_0,
	.param .u64 upsample_kernel_param_1,
	.param .u32 upsample_kernel_param_2,
	.param .u32 upsample_kernel_param_3,
	.param .u32 upsample_kernel_param_4,
	.param .u32 upsample_kernel_param_5,
	.param .u32 upsample_kernel_param_6,
	.param .u32 upsample_kernel_param_7,
	.param .f32 upsample_kernel_param_8,
	.param .u64 upsample_kernel_param_9
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<32>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r8, [upsample_kernel_param_0];
	ld.param.u64 	%rd3, [upsample_kernel_param_1];
	ld.param.u32 	%r2, [upsample_kernel_param_2];
	ld.param.u32 	%r3, [upsample_kernel_param_3];
	ld.param.u32 	%r4, [upsample_kernel_param_4];
	ld.param.u32 	%r5, [upsample_kernel_param_5];
	ld.param.u32 	%r6, [upsample_kernel_param_6];
	ld.param.u32 	%r7, [upsample_kernel_param_7];
	ld.param.f32 	%f1, [upsample_kernel_param_8];
	ld.param.u64 	%rd4, [upsample_kernel_param_9];
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %nctaid.x;
	mov.u32 	%r11, %ctaid.y;
	mad.lo.s32 	%r12, %r11, %r10, %r9;
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %tid.x;
	mad.lo.s32 	%r1, %r12, %r13, %r14;
	setp.ge.s32 	%p1, %r1, %r8;
	@%p1 bra 	$L__BB0_4;

	cvta.to.global.u64 	%rd5, %rd4;
	mul.lo.s32 	%r15, %r6, %r2;
	div.s32 	%r16, %r1, %r15;
	mul.lo.s32 	%r17, %r16, %r15;
	sub.s32 	%r18, %r1, %r17;
	mul.lo.s32 	%r19, %r6, %r3;
	div.s32 	%r20, %r16, %r19;
	mul.lo.s32 	%r21, %r20, %r19;
	sub.s32 	%r22, %r16, %r21;
	div.s32 	%r23, %r20, %r4;
	mul.lo.s32 	%r24, %r23, %r4;
	sub.s32 	%r25, %r20, %r24;
	rem.s32 	%r26, %r23, %r5;
	div.s32 	%r27, %r18, %r6;
	div.s32 	%r28, %r22, %r6;
	mad.lo.s32 	%r29, %r26, %r4, %r25;
	mad.lo.s32 	%r30, %r29, %r3, %r28;
	mad.lo.s32 	%r31, %r30, %r2, %r27;
	cvta.to.global.u64 	%rd6, %rd3;
	mul.wide.s32 	%rd7, %r31, 4;
	add.s64 	%rd1, %rd6, %rd7;
	mul.wide.s32 	%rd8, %r1, 4;
	add.s64 	%rd2, %rd5, %rd8;
	setp.eq.s32 	%p2, %r7, 0;
	@%p2 bra 	$L__BB0_3;

	ld.global.f32 	%f2, [%rd1];
	mul.f32 	%f3, %f2, %f1;
	st.global.f32 	[%rd2], %f3;
	bra.uni 	$L__BB0_4;

$L__BB0_3:
	ld.global.f32 	%f4, [%rd2];
	mul.f32 	%f5, %f4, %f1;
	atom.global.add.f32 	%f6, [%rd1], %f5;

$L__BB0_4:
	ret;

}

