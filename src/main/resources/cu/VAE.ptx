//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-31833905
// Cuda compilation tools, release 11.8, V11.8.89
// Based on NVVM 7.0.1
//

.version 7.8
.target sm_52
.address_size 64

	// .globl	reparameterize_forward
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;
// _ZZ6CdistPE6shared has been demoted
.extern .shared .align 16 .b8 shm[];

.visible .entry reparameterize_forward(
	.param .u64 reparameterize_forward_param_0,
	.param .u64 reparameterize_forward_param_1,
	.param .u64 reparameterize_forward_param_2,
	.param .u64 reparameterize_forward_param_3,
	.param .u32 reparameterize_forward_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<22>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [reparameterize_forward_param_0];
	ld.param.u64 	%rd2, [reparameterize_forward_param_1];
	ld.param.u64 	%rd3, [reparameterize_forward_param_2];
	ld.param.u64 	%rd4, [reparameterize_forward_param_3];
	ld.param.u32 	%r2, [reparameterize_forward_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f1, [%rd9];
	mul.f32 	%f2, %f1, 0f3F000000;
	mov.f32 	%f3, 0f3F000000;
	mov.f32 	%f4, 0f3BBB989D;
	fma.rn.f32 	%f5, %f2, %f4, %f3;
	mov.f32 	%f6, 0f3FB8AA3B;
	mov.f32 	%f7, 0f437C0000;
	cvt.sat.f32.f32 	%f8, %f5;
	mov.f32 	%f9, 0f4B400001;
	fma.rm.f32 	%f10, %f8, %f7, %f9;
	add.f32 	%f11, %f10, 0fCB40007F;
	neg.f32 	%f12, %f11;
	fma.rn.f32 	%f13, %f2, %f6, %f12;
	mov.f32 	%f14, 0f32A57060;
	fma.rn.f32 	%f15, %f2, %f14, %f13;
	mov.b32 	%r9, %f10;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f16, %r10;
	ex2.approx.ftz.f32 	%f17, %f15;
	mul.f32 	%f18, %f17, %f16;
	ld.global.f32 	%f19, [%rd7];
	cvta.to.global.u64 	%rd10, %rd1;
	add.s64 	%rd11, %rd10, %rd6;
	ld.global.f32 	%f20, [%rd11];
	fma.rn.f32 	%f21, %f19, %f18, %f20;
	cvta.to.global.u64 	%rd12, %rd4;
	add.s64 	%rd13, %rd12, %rd6;
	st.global.f32 	[%rd13], %f21;

$L__BB0_2:
	ret;

}
	// .globl	reparameterize_backward
.visible .entry reparameterize_backward(
	.param .u64 reparameterize_backward_param_0,
	.param .u64 reparameterize_backward_param_1,
	.param .u64 reparameterize_backward_param_2,
	.param .u64 reparameterize_backward_param_3,
	.param .u64 reparameterize_backward_param_4,
	.param .u32 reparameterize_backward_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<28>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [reparameterize_backward_param_0];
	ld.param.u64 	%rd2, [reparameterize_backward_param_1];
	ld.param.u64 	%rd3, [reparameterize_backward_param_2];
	ld.param.u64 	%rd4, [reparameterize_backward_param_3];
	ld.param.u64 	%rd5, [reparameterize_backward_param_4];
	ld.param.u32 	%r2, [reparameterize_backward_param_5];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB1_2;

	cvta.to.global.u64 	%rd6, %rd5;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd11, %rd4;
	add.s64 	%rd12, %rd11, %rd7;
	ld.global.f32 	%f4, [%rd12];
	mul.f32 	%f5, %f4, 0f3F000000;
	mov.f32 	%f6, 0f3F000000;
	mov.f32 	%f7, 0f3BBB989D;
	fma.rn.f32 	%f8, %f5, %f7, %f6;
	mov.f32 	%f9, 0f3FB8AA3B;
	mov.f32 	%f10, 0f437C0000;
	cvt.sat.f32.f32 	%f11, %f8;
	mov.f32 	%f12, 0f4B400001;
	fma.rm.f32 	%f13, %f11, %f10, %f12;
	add.f32 	%f14, %f13, 0fCB40007F;
	neg.f32 	%f15, %f14;
	fma.rn.f32 	%f16, %f5, %f9, %f15;
	mov.f32 	%f17, 0f32A57060;
	fma.rn.f32 	%f18, %f5, %f17, %f16;
	mov.b32 	%r9, %f13;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f19, %r10;
	ex2.approx.ftz.f32 	%f20, %f18;
	mul.f32 	%f21, %f20, %f19;
	mul.f32 	%f22, %f3, %f21;
	cvta.to.global.u64 	%rd13, %rd2;
	add.s64 	%rd14, %rd13, %rd7;
	ld.global.f32 	%f23, [%rd14];
	fma.rn.f32 	%f24, %f22, 0f3F000000, %f23;
	st.global.f32 	[%rd14], %f24;
	cvta.to.global.u64 	%rd15, %rd1;
	add.s64 	%rd16, %rd15, %rd7;
	ld.global.f32 	%f25, [%rd16];
	ld.global.f32 	%f26, [%rd8];
	add.f32 	%f27, %f26, %f25;
	st.global.f32 	[%rd16], %f27;

$L__BB1_2:
	ret;

}
	// .globl	kl_loss
.visible .entry kl_loss(
	.param .u64 kl_loss_param_0,
	.param .u64 kl_loss_param_1,
	.param .f32 kl_loss_param_2,
	.param .u64 kl_loss_param_3,
	.param .u32 kl_loss_param_4
)
{
	.reg .pred 	%p<18>;
	.reg .f32 	%f<129>;
	.reg .b32 	%r<32>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd3, [kl_loss_param_0];
	ld.param.u64 	%rd4, [kl_loss_param_1];
	ld.param.u64 	%rd5, [kl_loss_param_3];
	ld.param.u32 	%r2, [kl_loss_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p2, %r1, %r2;
	@%p2 bra 	$L__BB2_14;

	cvta.to.global.u64 	%rd6, %rd4;
	cvta.to.global.u64 	%rd1, %rd5;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f1, [%rd8];
	mov.f32 	%f18, 0f3F800000;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	cvt.rzi.f32.f32 	%f19, %f18;
	add.f32 	%f20, %f19, %f19;
	mov.f32 	%f21, 0f40000000;
	sub.f32 	%f22, %f21, %f20;
	abs.f32 	%f3, %f22;
	ld.global.f32 	%f4, [%rd10];
	abs.f32 	%f5, %f4;
	setp.lt.f32 	%p3, %f5, 0f00800000;
	mul.f32 	%f23, %f5, 0f4B800000;
	selp.f32 	%f24, %f23, %f5, %p3;
	selp.f32 	%f25, 0fC3170000, 0fC2FE0000, %p3;
	mov.b32 	%r9, %f24;
	and.b32  	%r10, %r9, 8388607;
	or.b32  	%r11, %r10, 1065353216;
	mov.b32 	%f26, %r11;
	shr.u32 	%r12, %r9, 23;
	cvt.rn.f32.u32 	%f27, %r12;
	add.f32 	%f28, %f25, %f27;
	setp.gt.f32 	%p4, %f26, 0f3FB504F3;
	mul.f32 	%f29, %f26, 0f3F000000;
	add.f32 	%f30, %f28, 0f3F800000;
	selp.f32 	%f31, %f30, %f28, %p4;
	selp.f32 	%f32, %f29, %f26, %p4;
	add.f32 	%f33, %f32, 0fBF800000;
	add.f32 	%f34, %f32, 0f3F800000;
	rcp.approx.ftz.f32 	%f35, %f34;
	add.f32 	%f36, %f33, %f33;
	mul.f32 	%f37, %f36, %f35;
	mul.f32 	%f38, %f37, %f37;
	mov.f32 	%f39, 0f3C4CAF63;
	mov.f32 	%f40, 0f3B18F0FE;
	fma.rn.f32 	%f41, %f40, %f38, %f39;
	mov.f32 	%f42, 0f3DAAAABD;
	fma.rn.f32 	%f43, %f41, %f38, %f42;
	mul.rn.f32 	%f44, %f43, %f38;
	mul.rn.f32 	%f45, %f44, %f37;
	sub.f32 	%f46, %f33, %f37;
	add.f32 	%f47, %f46, %f46;
	neg.f32 	%f48, %f37;
	fma.rn.f32 	%f49, %f48, %f33, %f47;
	mul.rn.f32 	%f50, %f35, %f49;
	add.f32 	%f51, %f45, %f37;
	sub.f32 	%f52, %f37, %f51;
	add.f32 	%f53, %f45, %f52;
	add.f32 	%f54, %f50, %f53;
	add.f32 	%f55, %f51, %f54;
	sub.f32 	%f56, %f51, %f55;
	add.f32 	%f57, %f54, %f56;
	mov.f32 	%f58, 0f3F317200;
	mul.rn.f32 	%f59, %f31, %f58;
	mov.f32 	%f60, 0f35BFBE8E;
	mul.rn.f32 	%f61, %f31, %f60;
	add.f32 	%f62, %f59, %f55;
	sub.f32 	%f63, %f59, %f62;
	add.f32 	%f64, %f55, %f63;
	add.f32 	%f65, %f57, %f64;
	add.f32 	%f66, %f61, %f65;
	add.f32 	%f67, %f62, %f66;
	sub.f32 	%f68, %f62, %f67;
	add.f32 	%f69, %f66, %f68;
	mul.rn.f32 	%f70, %f21, %f67;
	neg.f32 	%f71, %f70;
	fma.rn.f32 	%f72, %f21, %f67, %f71;
	fma.rn.f32 	%f73, %f21, %f69, %f72;
	mov.f32 	%f74, 0f00000000;
	fma.rn.f32 	%f75, %f74, %f67, %f73;
	add.rn.f32 	%f76, %f70, %f75;
	neg.f32 	%f77, %f76;
	add.rn.f32 	%f78, %f70, %f77;
	add.rn.f32 	%f79, %f78, %f75;
	mov.b32 	%r13, %f76;
	setp.eq.s32 	%p5, %r13, 1118925336;
	add.s32 	%r14, %r13, -1;
	mov.b32 	%f80, %r14;
	add.f32 	%f81, %f79, 0f37000000;
	selp.f32 	%f6, %f81, %f79, %p5;
	selp.f32 	%f82, %f80, %f76, %p5;
	mov.f32 	%f83, 0f3FB8AA3B;
	mul.rn.f32 	%f84, %f82, %f83;
	cvt.rzi.f32.f32 	%f85, %f84;
	abs.f32 	%f86, %f85;
	setp.gt.f32 	%p6, %f86, 0f42FC0000;
	mov.b32 	%r15, %f85;
	and.b32  	%r16, %r15, -2147483648;
	or.b32  	%r17, %r16, 1123811328;
	mov.b32 	%f87, %r17;
	selp.f32 	%f88, %f87, %f85, %p6;
	mov.f32 	%f89, 0fBF317218;
	fma.rn.f32 	%f90, %f88, %f89, %f82;
	mov.f32 	%f91, 0f3102E308;
	fma.rn.f32 	%f92, %f88, %f91, %f90;
	mul.f32 	%f93, %f92, 0f3FB8AA3B;
	add.f32 	%f94, %f88, 0f4B40007F;
	mov.b32 	%r18, %f94;
	shl.b32 	%r19, %r18, 23;
	mov.b32 	%f95, %r19;
	ex2.approx.ftz.f32 	%f96, %f93;
	mul.f32 	%f7, %f96, %f95;
	setp.eq.f32 	%p7, %f7, 0f7F800000;
	mov.f32 	%f126, 0f7F800000;
	@%p7 bra 	$L__BB2_3;

	fma.rn.f32 	%f126, %f7, %f6, %f7;

$L__BB2_3:
	setp.lt.f32 	%p8, %f4, 0f00000000;
	setp.eq.f32 	%p9, %f3, 0f3F800000;
	and.pred  	%p1, %p8, %p9;
	setp.eq.f32 	%p10, %f4, 0f00000000;
	@%p10 bra 	$L__BB2_7;
	bra.uni 	$L__BB2_4;

$L__BB2_7:
	add.f32 	%f101, %f4, %f4;
	selp.f32 	%f128, %f101, 0f00000000, %p9;
	bra.uni 	$L__BB2_8;

$L__BB2_4:
	mov.b32 	%r20, %f126;
	xor.b32  	%r21, %r20, -2147483648;
	mov.b32 	%f97, %r21;
	selp.f32 	%f128, %f97, %f126, %p1;
	setp.geu.f32 	%p11, %f4, 0f00000000;
	@%p11 bra 	$L__BB2_8;

	mov.f32 	%f98, 0f40000000;
	cvt.rzi.f32.f32 	%f99, %f98;
	setp.eq.f32 	%p12, %f99, 0f40000000;
	@%p12 bra 	$L__BB2_8;

	mov.f32 	%f128, 0f7FFFFFFF;

$L__BB2_8:
	add.f32 	%f102, %f5, 0f40000000;
	mov.b32 	%r22, %f102;
	setp.lt.s32 	%p14, %r22, 2139095040;
	@%p14 bra 	$L__BB2_13;

	setp.gtu.f32 	%p15, %f5, 0f7F800000;
	@%p15 bra 	$L__BB2_12;
	bra.uni 	$L__BB2_10;

$L__BB2_12:
	add.f32 	%f128, %f4, 0f40000000;
	bra.uni 	$L__BB2_13;

$L__BB2_10:
	setp.neu.f32 	%p16, %f5, 0f7F800000;
	@%p16 bra 	$L__BB2_13;

	selp.f32 	%f128, 0fFF800000, 0f7F800000, %p1;

$L__BB2_13:
	mov.u32 	%r31, %ctaid.x;
	mov.u32 	%r30, %nctaid.x;
	mov.u32 	%r29, %ctaid.y;
	mov.u32 	%r28, %tid.x;
	mov.u32 	%r27, %ntid.x;
	mad.lo.s32 	%r26, %r29, %r30, %r31;
	mad.lo.s32 	%r25, %r26, %r27, %r28;
	cvt.s64.s32 	%rd13, %r25;
	ld.param.f32 	%f125, [kl_loss_param_2];
	add.f32 	%f124, %f1, 0f3F800000;
	setp.eq.f32 	%p17, %f4, 0f3F800000;
	selp.f32 	%f103, 0f3F800000, %f128, %p17;
	sub.f32 	%f104, %f124, %f103;
	mov.f32 	%f105, 0f3F000000;
	mov.f32 	%f106, 0f3BBB989D;
	fma.rn.f32 	%f107, %f1, %f106, %f105;
	mov.f32 	%f108, 0f3FB8AA3B;
	mov.f32 	%f109, 0f437C0000;
	cvt.sat.f32.f32 	%f110, %f107;
	mov.f32 	%f111, 0f4B400001;
	fma.rm.f32 	%f112, %f110, %f109, %f111;
	add.f32 	%f113, %f112, 0fCB40007F;
	neg.f32 	%f114, %f113;
	fma.rn.f32 	%f115, %f1, %f108, %f114;
	mov.f32 	%f116, 0f32A57060;
	fma.rn.f32 	%f117, %f1, %f116, %f115;
	mov.b32 	%r23, %f112;
	shl.b32 	%r24, %r23, 23;
	mov.b32 	%f118, %r24;
	ex2.approx.ftz.f32 	%f119, %f117;
	mul.f32 	%f120, %f119, %f118;
	sub.f32 	%f121, %f104, %f120;
	mul.f32 	%f122, %f121, 0fBF000000;
	mul.f32 	%f123, %f122, %f125;
	shl.b64 	%rd11, %rd13, 2;
	add.s64 	%rd12, %rd1, %rd11;
	st.global.f32 	[%rd12], %f123;

$L__BB2_14:
	ret;

}
	// .globl	kl_loss_back
.visible .entry kl_loss_back(
	.param .u64 kl_loss_back_param_0,
	.param .u64 kl_loss_back_param_1,
	.param .f32 kl_loss_back_param_2,
	.param .u64 kl_loss_back_param_3,
	.param .u64 kl_loss_back_param_4,
	.param .u32 kl_loss_back_param_5,
	.param .u32 kl_loss_back_param_6
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<25>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [kl_loss_back_param_0];
	ld.param.u64 	%rd2, [kl_loss_back_param_1];
	ld.param.f32 	%f1, [kl_loss_back_param_2];
	ld.param.u64 	%rd3, [kl_loss_back_param_3];
	ld.param.u64 	%rd4, [kl_loss_back_param_4];
	ld.param.u32 	%r2, [kl_loss_back_param_6];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB3_2;

	cvta.to.global.u64 	%rd5, %rd1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f2, [%rd7];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	st.global.f32 	[%rd9], %f3;
	cvta.to.global.u64 	%rd10, %rd2;
	add.s64 	%rd11, %rd10, %rd6;
	ld.global.f32 	%f4, [%rd11];
	mov.f32 	%f5, 0f3F000000;
	mov.f32 	%f6, 0f3BBB989D;
	fma.rn.f32 	%f7, %f4, %f6, %f5;
	mov.f32 	%f8, 0f3FB8AA3B;
	mov.f32 	%f9, 0f437C0000;
	cvt.sat.f32.f32 	%f10, %f7;
	mov.f32 	%f11, 0f4B400001;
	fma.rm.f32 	%f12, %f10, %f9, %f11;
	add.f32 	%f13, %f12, 0fCB40007F;
	neg.f32 	%f14, %f13;
	fma.rn.f32 	%f15, %f4, %f8, %f14;
	mov.f32 	%f16, 0f32A57060;
	fma.rn.f32 	%f17, %f4, %f16, %f15;
	mov.b32 	%r9, %f12;
	shl.b32 	%r10, %r9, 23;
	mov.b32 	%f18, %r10;
	ex2.approx.ftz.f32 	%f19, %f17;
	mul.f32 	%f20, %f19, %f18;
	mov.f32 	%f21, 0f3F800000;
	sub.f32 	%f22, %f21, %f20;
	mul.f32 	%f23, %f1, 0fBF000000;
	mul.f32 	%f24, %f23, %f22;
	cvta.to.global.u64 	%rd12, %rd4;
	add.s64 	%rd13, %rd12, %rd6;
	st.global.f32 	[%rd13], %f24;

$L__BB3_2:
	ret;

}
	// .globl	CdistP
.visible .entry CdistP(
	.param .u64 CdistP_param_0,
	.param .u64 CdistP_param_1,
	.param .u64 CdistP_param_2,
	.param .f64 CdistP_param_3,
	.param .u64 CdistP_param_4,
	.param .u64 CdistP_param_5,
	.param .u64 CdistP_param_6,
	.param .u64 CdistP_param_7,
	.param .u64 CdistP_param_8
)
{
	.reg .pred 	%p<99>;
	.reg .f32 	%f<42>;
	.reg .b32 	%r<127>;
	.reg .f64 	%fd<53>;
	.reg .b64 	%rd<73>;
	// demoted variable
	.shared .align 4 .b8 _ZZ6CdistPE6shared[1024];

	ld.param.u64 	%rd30, [CdistP_param_0];
	ld.param.u64 	%rd31, [CdistP_param_1];
	ld.param.u64 	%rd32, [CdistP_param_2];
	ld.param.f64 	%fd33, [CdistP_param_3];
	ld.param.u64 	%rd33, [CdistP_param_4];
	ld.param.u64 	%rd34, [CdistP_param_5];
	ld.param.u64 	%rd35, [CdistP_param_6];
	ld.param.u64 	%rd36, [CdistP_param_7];
	ld.param.u64 	%rd37, [CdistP_param_8];
	mov.u32 	%r30, %ctaid.x;
	cvt.u64.u32 	%rd1, %r30;
	and.b64  	%rd38, %rd35, -4294967296;
	setp.eq.s64 	%p2, %rd38, 0;
	@%p2 bra 	$L__BB4_2;

	div.s64 	%rd65, %rd1, %rd35;
	mul.lo.s64 	%rd39, %rd65, %rd35;
	sub.s64 	%rd66, %rd1, %rd39;
	bra.uni 	$L__BB4_3;

$L__BB4_2:
	cvt.u32.u64 	%r31, %rd35;
	cvt.u32.u64 	%r32, %rd1;
	div.u32 	%r33, %r32, %r31;
	mul.lo.s32 	%r34, %r33, %r31;
	sub.s32 	%r35, %r32, %r34;
	cvt.u64.u32 	%rd65, %r33;
	cvt.u64.u32 	%rd66, %r35;

$L__BB4_3:
	or.b64  	%rd40, %rd66, %rd33;
	and.b64  	%rd41, %rd40, -4294967296;
	setp.eq.s64 	%p3, %rd41, 0;
	@%p3 bra 	$L__BB4_5;

	div.s64 	%rd67, %rd66, %rd33;
	mul.lo.s64 	%rd42, %rd67, %rd33;
	sub.s64 	%rd68, %rd66, %rd42;
	bra.uni 	$L__BB4_6;

$L__BB4_5:
	cvt.u32.u64 	%r36, %rd33;
	cvt.u32.u64 	%r37, %rd66;
	div.u32 	%r38, %r37, %r36;
	mul.lo.s32 	%r39, %r38, %r36;
	sub.s32 	%r40, %r37, %r39;
	cvt.u64.u32 	%rd67, %r38;
	cvt.u64.u32 	%rd68, %r40;

$L__BB4_6:
	cvta.to.global.u64 	%rd43, %rd30;
	mov.u32 	%r1, %ntid.x;
	mul.lo.s64 	%rd44, %rd67, %rd34;
	mul.lo.s64 	%rd45, %rd65, %rd36;
	add.s64 	%rd46, %rd44, %rd45;
	add.s64 	%rd47, %rd46, %rd34;
	shl.b64 	%rd48, %rd47, 2;
	add.s64 	%rd14, %rd43, %rd48;
	mov.u32 	%r2, %tid.x;
	cvt.u64.u32 	%rd49, %r2;
	add.s64 	%rd50, %rd46, %rd49;
	shl.b64 	%rd51, %rd50, 2;
	add.s64 	%rd70, %rd43, %rd51;
	mul.lo.s64 	%rd52, %rd65, %rd37;
	add.s64 	%rd53, %rd52, %rd49;
	mul.lo.s64 	%rd54, %rd68, %rd34;
	add.s64 	%rd16, %rd53, %rd54;
	setp.ge.s64 	%p4, %rd50, %rd47;
	mov.f32 	%f36, 0f00000000;
	@%p4 bra 	$L__BB4_38;

	cvta.to.global.u64 	%rd55, %rd31;
	shl.b64 	%rd56, %rd16, 2;
	add.s64 	%rd69, %rd55, %rd56;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd33;
	}
	bfe.u32 	%r41, %r3, 20, 11;
	add.s32 	%r42, %r41, -1012;
	mov.b64 	%rd57, %fd33;
	shl.b64 	%rd58, %rd57, %r42;
	setp.eq.s64 	%p5, %rd58, -9223372036854775808;
	selp.u32 	%r4, 1, 0, %p5;
	cvt.s64.s32 	%rd18, %r1;
	and.b32  	%r5, %r3, 2147483647;
	setp.gt.s32 	%p6, %r3, -1;
	selp.b32 	%r6, 2146435072, 0, %p6;
	or.b32  	%r7, %r6, -2147483648;
	@%p5 bra 	$L__BB4_22;
	bra.uni 	$L__BB4_8;

$L__BB4_22:
	mov.f32 	%f36, 0f00000000;

$L__BB4_23:
	ld.global.f32 	%f24, [%rd69];
	ld.global.f32 	%f25, [%rd70];
	sub.f32 	%f26, %f25, %f24;
	abs.f32 	%f5, %f26;
	cvt.f64.f32 	%fd10, %f5;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd10;
	}
	abs.f64 	%fd11, %fd10;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd11;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd33;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd48, [retval0+0];
	} // callseq 1
	setp.gt.s32 	%p31, %r11, -1;
	@%p31 bra 	$L__BB4_25;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r57}, %fd48;
	}
	xor.b32  	%r58, %r57, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r59, %temp}, %fd48;
	}
	mov.b64 	%fd48, {%r59, %r58};

$L__BB4_25:
	setp.eq.f32 	%p32, %f5, 0f00000000;
	@%p32 bra 	$L__BB4_29;
	bra.uni 	$L__BB4_26;

$L__BB4_29:
	setp.lt.s32 	%p35, %r3, 0;
	mov.u32 	%r60, 0;
	abs.f64 	%fd39, %fd33;
	setp.neu.f64 	%p36, %fd39, 0d3FE0000000000000;
	selp.u32 	%r123, 1, 0, %p36;
	selp.b32 	%r61, %r11, 0, %p36;
	or.b32  	%r62, %r61, 2146435072;
	selp.b32 	%r63, %r62, %r61, %p35;
	mov.b64 	%fd48, {%r60, %r63};
	bra.uni 	$L__BB4_30;

$L__BB4_26:
	mov.u32 	%r123, %r4;
	@%p31 bra 	$L__BB4_30;

	cvt.rzi.f64.f64 	%fd37, %fd33;
	setp.eq.f64 	%p34, %fd37, %fd33;
	mov.u32 	%r123, %r4;
	@%p34 bra 	$L__BB4_30;

	mov.f64 	%fd48, 0dFFF8000000000000;
	mov.u32 	%r123, %r4;

$L__BB4_30:
	add.f64 	%fd17, %fd10, %fd33;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r64}, %fd17;
	}
	and.b32  	%r65, %r64, 2146435072;
	setp.ne.s32 	%p37, %r65, 2146435072;
	mov.f64 	%fd49, %fd48;
	@%p37 bra 	$L__BB4_37;

	setp.gtu.f64 	%p38, %fd11, 0d7FF0000000000000;
	mov.f64 	%fd49, %fd17;
	@%p38 bra 	$L__BB4_37;

	abs.f64 	%fd40, %fd33;
	setp.gtu.f64 	%p39, %fd40, 0d7FF0000000000000;
	mov.f64 	%fd49, %fd17;
	@%p39 bra 	$L__BB4_37;

	setp.eq.s32 	%p40, %r5, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r66, %temp}, %fd33;
	}
	setp.eq.s32 	%p41, %r66, 0;
	and.pred  	%p42, %p40, %p41;
	@%p42 bra 	$L__BB4_36;
	bra.uni 	$L__BB4_34;

$L__BB4_36:
	setp.lt.s32 	%p51, %r3, 0;
	mov.u32 	%r71, 0;
	setp.gt.f64 	%p52, %fd11, 0d3FF0000000000000;
	selp.b32 	%r72, 2146435072, 0, %p52;
	xor.b32  	%r73, %r72, 2146435072;
	selp.b32 	%r74, %r73, %r72, %p51;
	setp.eq.f32 	%p53, %f5, 0fBF800000;
	selp.b32 	%r75, 1072693248, %r74, %p53;
	mov.b64 	%fd49, {%r71, %r75};
	bra.uni 	$L__BB4_37;

$L__BB4_34:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r67, %temp}, %fd10;
	}
	and.b32  	%r68, %r11, 2147483647;
	setp.ne.s32 	%p43, %r68, 2146435072;
	setp.ne.s32 	%p44, %r67, 0;
	or.pred  	%p45, %p43, %p44;
	mov.f64 	%fd49, %fd48;
	@%p45 bra 	$L__BB4_37;

	setp.lt.s32 	%p46, %r11, 0;
	mov.u32 	%r69, 0;
	setp.ne.s32 	%p47, %r123, 0;
	and.pred  	%p48, %p46, %p47;
	setp.ne.s32 	%p49, %r5, 1071644672;
	and.pred  	%p50, %p49, %p48;
	selp.b32 	%r70, %r7, %r6, %p50;
	mov.b64 	%fd49, {%r69, %r70};

$L__BB4_37:
	setp.eq.f32 	%p54, %f5, 0f3F800000;
	setp.eq.f64 	%p55, %fd33, 0d0000000000000000;
	or.pred  	%p56, %p55, %p54;
	cvt.rn.f32.f64 	%f27, %fd49;
	selp.f32 	%f28, 0f3F800000, %f27, %p56;
	add.f32 	%f36, %f36, %f28;
	shl.b64 	%rd60, %rd18, 2;
	add.s64 	%rd69, %rd69, %rd60;
	add.s64 	%rd70, %rd70, %rd60;
	setp.lt.u64 	%p57, %rd70, %rd14;
	@%p57 bra 	$L__BB4_23;
	bra.uni 	$L__BB4_38;

$L__BB4_8:
	shr.s32 	%r43, %r3, 31;
	and.b32  	%r8, %r43, 2146435072;
	mov.f32 	%f36, 0f00000000;

$L__BB4_9:
	ld.global.f32 	%f18, [%rd69];
	ld.global.f32 	%f19, [%rd70];
	sub.f32 	%f20, %f19, %f18;
	abs.f32 	%f2, %f20;
	cvt.f64.f32 	%fd1, %f2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9}, %fd1;
	}
	abs.f64 	%fd2, %fd1;
	setp.eq.f32 	%p7, %f2, 0f00000000;
	@%p7 bra 	$L__BB4_13;
	bra.uni 	$L__BB4_10;

$L__BB4_13:
	mov.u32 	%r122, 0;
	mov.b64 	%fd45, {%r122, %r8};
	bra.uni 	$L__BB4_14;

$L__BB4_10:
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd2;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd33;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd45, [retval0+0];
	} // callseq 0
	setp.gt.s32 	%p8, %r9, -1;
	mov.u32 	%r122, %r4;
	@%p8 bra 	$L__BB4_14;

	cvt.rzi.f64.f64 	%fd34, %fd33;
	setp.eq.f64 	%p9, %fd34, %fd33;
	mov.u32 	%r122, %r4;
	@%p9 bra 	$L__BB4_14;

	mov.f64 	%fd45, 0dFFF8000000000000;
	mov.u32 	%r122, %r4;

$L__BB4_14:
	add.f64 	%fd6, %fd1, %fd33;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd6;
	}
	and.b32  	%r46, %r45, 2146435072;
	setp.ne.s32 	%p10, %r46, 2146435072;
	mov.f64 	%fd46, %fd45;
	@%p10 bra 	$L__BB4_21;

	setp.gtu.f64 	%p11, %fd2, 0d7FF0000000000000;
	mov.f64 	%fd46, %fd6;
	@%p11 bra 	$L__BB4_21;

	abs.f64 	%fd36, %fd33;
	setp.gtu.f64 	%p12, %fd36, 0d7FF0000000000000;
	mov.f64 	%fd46, %fd6;
	@%p12 bra 	$L__BB4_21;

	setp.eq.s32 	%p13, %r5, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd33;
	}
	setp.eq.s32 	%p14, %r47, 0;
	and.pred  	%p15, %p13, %p14;
	@%p15 bra 	$L__BB4_20;
	bra.uni 	$L__BB4_18;

$L__BB4_20:
	setp.lt.s32 	%p24, %r3, 0;
	mov.u32 	%r52, 0;
	setp.gt.f64 	%p25, %fd2, 0d3FF0000000000000;
	selp.b32 	%r53, 2146435072, 0, %p25;
	xor.b32  	%r54, %r53, 2146435072;
	selp.b32 	%r55, %r54, %r53, %p24;
	setp.eq.f32 	%p26, %f2, 0fBF800000;
	selp.b32 	%r56, 1072693248, %r55, %p26;
	mov.b64 	%fd46, {%r52, %r56};
	bra.uni 	$L__BB4_21;

$L__BB4_18:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd1;
	}
	and.b32  	%r49, %r9, 2147483647;
	setp.ne.s32 	%p16, %r49, 2146435072;
	setp.ne.s32 	%p17, %r48, 0;
	or.pred  	%p18, %p16, %p17;
	mov.f64 	%fd46, %fd45;
	@%p18 bra 	$L__BB4_21;

	setp.lt.s32 	%p19, %r9, 0;
	mov.u32 	%r50, 0;
	setp.ne.s32 	%p20, %r122, 0;
	and.pred  	%p21, %p19, %p20;
	setp.ne.s32 	%p22, %r5, 1071644672;
	and.pred  	%p23, %p22, %p21;
	selp.b32 	%r51, %r7, %r6, %p23;
	mov.b64 	%fd46, {%r50, %r51};

$L__BB4_21:
	setp.eq.f32 	%p27, %f2, 0f3F800000;
	setp.eq.f64 	%p28, %fd33, 0d0000000000000000;
	or.pred  	%p29, %p28, %p27;
	cvt.rn.f32.f64 	%f21, %fd46;
	selp.f32 	%f22, 0f3F800000, %f21, %p29;
	add.f32 	%f36, %f36, %f22;
	shl.b64 	%rd59, %rd18, 2;
	add.s64 	%rd69, %rd69, %rd59;
	add.s64 	%rd70, %rd70, %rd59;
	setp.lt.u64 	%p30, %rd70, %rd14;
	@%p30 bra 	$L__BB4_9;

$L__BB4_38:
	mov.u32 	%r14, WARP_SZ;
	setp.lt.s32 	%p58, %r14, 2;
	@%p58 bra 	$L__BB4_41;

	shl.b32 	%r76, %r14, 8;
	mov.u32 	%r77, 8192;
	sub.s32 	%r78, %r77, %r76;
	or.b32  	%r15, %r78, 31;
	mov.u32 	%r124, %r14;

$L__BB4_40:
	mov.b32 	%r79, %f36;
	shr.u32 	%r80, %r124, 31;
	add.s32 	%r81, %r124, %r80;
	shr.s32 	%r17, %r81, 1;
	mov.u32 	%r82, -1;
	shfl.sync.down.b32 	%r83|%p59, %r79, %r17, %r15, %r82;
	mov.b32 	%f29, %r83;
	add.f32 	%f36, %f36, %f29;
	setp.gt.s32 	%p60, %r124, 3;
	mov.u32 	%r124, %r17;
	@%p60 bra 	$L__BB4_40;

$L__BB4_41:
	rem.u32 	%r18, %r2, %r14;
	setp.ne.s32 	%p61, %r18, 0;
	@%p61 bra 	$L__BB4_43;

	div.u32 	%r84, %r2, %r14;
	shl.b32 	%r85, %r84, 2;
	mov.u32 	%r86, _ZZ6CdistPE6shared;
	add.s32 	%r87, %r86, %r85;
	st.shared.f32 	[%r87], %f36;

$L__BB4_43:
	bar.sync 	0;
	div.u32 	%r19, %r1, %r14;
	setp.ge.u32 	%p62, %r2, %r19;
	mov.f32 	%f41, 0f00000000;
	@%p62 bra 	$L__BB4_45;

	shl.b32 	%r88, %r18, 2;
	mov.u32 	%r89, _ZZ6CdistPE6shared;
	add.s32 	%r90, %r89, %r88;
	ld.shared.f32 	%f41, [%r90];

$L__BB4_45:
	setp.le.u32 	%p63, %r14, %r2;
	@%p63 bra 	$L__BB4_49;

	shr.u32 	%r125, %r19, 1;
	setp.eq.s32 	%p64, %r125, 0;
	@%p64 bra 	$L__BB4_49;

	shl.b32 	%r91, %r14, 8;
	mov.u32 	%r92, 8192;
	sub.s32 	%r93, %r92, %r91;
	or.b32  	%r21, %r93, 31;

$L__BB4_48:
	mov.b32 	%r94, %f41;
	mov.u32 	%r95, -1;
	shfl.sync.down.b32 	%r96|%p65, %r94, %r125, %r21, %r95;
	mov.b32 	%f31, %r96;
	add.f32 	%f41, %f41, %f31;
	shr.u32 	%r97, %r125, 31;
	add.s32 	%r98, %r125, %r97;
	shr.s32 	%r23, %r98, 1;
	setp.gt.s32 	%p66, %r125, 1;
	mov.u32 	%r125, %r23;
	@%p66 bra 	$L__BB4_48;

$L__BB4_49:
	setp.ne.s32 	%p67, %r2, 0;
	@%p67 bra 	$L__BB4_65;

	cvt.f64.f32 	%fd21, %f41;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd21;
	}
	rcp.rn.f64 	%fd22, %fd33;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r25}, %fd22;
	}
	bfe.u32 	%r99, %r25, 20, 11;
	add.s32 	%r100, %r99, -1012;
	mov.b64 	%rd61, %fd22;
	shl.b64 	%rd29, %rd61, %r100;
	setp.eq.s64 	%p1, %rd29, -9223372036854775808;
	setp.ne.s64 	%p68, %rd29, -9223372036854775808;
	abs.f64 	%fd23, %fd21;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.f64 	[param0+0], %fd23;
	.param .b64 param1;
	st.param.f64 	[param1+0], %fd22;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64 	%fd51, [retval0+0];
	} // callseq 2
	setp.gt.s32 	%p69, %r24, -1;
	or.pred  	%p70, %p69, %p68;
	@%p70 bra 	$L__BB4_52;

	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r101}, %fd51;
	}
	xor.b32  	%r102, %r101, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r103, %temp}, %fd51;
	}
	mov.b64 	%fd51, {%r103, %r102};

$L__BB4_52:
	setp.eq.f32 	%p71, %f41, 0f00000000;
	@%p71 bra 	$L__BB4_56;
	bra.uni 	$L__BB4_53;

$L__BB4_56:
	abs.f64 	%fd43, %fd22;
	setp.neu.f64 	%p75, %fd43, 0d3FE0000000000000;
	and.pred  	%p76, %p1, %p75;
	selp.u32 	%r126, 1, 0, %p76;
	selp.b32 	%r104, %r24, 0, %p76;
	mov.u32 	%r105, 0;
	or.b32  	%r106, %r104, 2146435072;
	setp.lt.s32 	%p77, %r25, 0;
	selp.b32 	%r107, %r106, %r104, %p77;
	mov.b64 	%fd51, {%r105, %r107};
	bra.uni 	$L__BB4_57;

$L__BB4_53:
	selp.u32 	%r126, 1, 0, %p1;
	@%p69 bra 	$L__BB4_57;

	cvt.rzi.f64.f64 	%fd41, %fd22;
	setp.eq.f64 	%p73, %fd41, %fd22;
	@%p73 bra 	$L__BB4_57;

	mov.f64 	%fd51, 0dFFF8000000000000;

$L__BB4_57:
	add.f64 	%fd29, %fd22, %fd21;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r108}, %fd29;
	}
	and.b32  	%r109, %r108, 2146435072;
	setp.ne.s32 	%p78, %r109, 2146435072;
	mov.f64 	%fd52, %fd51;
	@%p78 bra 	$L__BB4_64;

	setp.gtu.f64 	%p79, %fd23, 0d7FF0000000000000;
	mov.f64 	%fd52, %fd29;
	@%p79 bra 	$L__BB4_64;

	abs.f64 	%fd44, %fd22;
	setp.gtu.f64 	%p80, %fd44, 0d7FF0000000000000;
	mov.f64 	%fd52, %fd29;
	@%p80 bra 	$L__BB4_64;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r110, %temp}, %fd22;
	}
	and.b32  	%r29, %r25, 2147483647;
	setp.eq.s32 	%p81, %r29, 2146435072;
	setp.eq.s32 	%p82, %r110, 0;
	and.pred  	%p83, %p81, %p82;
	@%p83 bra 	$L__BB4_63;
	bra.uni 	$L__BB4_61;

$L__BB4_63:
	setp.gt.f64 	%p93, %fd23, 0d3FF0000000000000;
	selp.b32 	%r117, 2146435072, 0, %p93;
	mov.u32 	%r118, 0;
	xor.b32  	%r119, %r117, 2146435072;
	setp.lt.s32 	%p94, %r25, 0;
	selp.b32 	%r120, %r119, %r117, %p94;
	setp.eq.f32 	%p95, %f41, 0fBF800000;
	selp.b32 	%r121, 1072693248, %r120, %p95;
	mov.b64 	%fd52, {%r118, %r121};
	bra.uni 	$L__BB4_64;

$L__BB4_61:
	{
	.reg .b32 %temp; 
	mov.b64 	{%r111, %temp}, %fd21;
	}
	and.b32  	%r112, %r24, 2147483647;
	setp.ne.s32 	%p84, %r112, 2146435072;
	setp.ne.s32 	%p85, %r111, 0;
	or.pred  	%p86, %p84, %p85;
	mov.f64 	%fd52, %fd51;
	@%p86 bra 	$L__BB4_64;

	setp.lt.s32 	%p87, %r24, 0;
	mov.u32 	%r113, 0;
	setp.gt.s32 	%p88, %r25, -1;
	selp.b32 	%r114, 2146435072, 0, %p88;
	setp.ne.s32 	%p89, %r126, 0;
	and.pred  	%p90, %p87, %p89;
	setp.ne.s32 	%p91, %r29, 1071644672;
	and.pred  	%p92, %p91, %p90;
	or.b32  	%r115, %r114, -2147483648;
	selp.b32 	%r116, %r115, %r114, %p92;
	mov.b64 	%fd52, {%r113, %r116};

$L__BB4_64:
	setp.eq.f64 	%p96, %fd22, 0d0000000000000000;
	setp.eq.f32 	%p97, %f41, 0f3F800000;
	or.pred  	%p98, %p96, %p97;
	cvt.rn.f32.f64 	%f32, %fd52;
	selp.f32 	%f33, 0f3F800000, %f32, %p98;
	cvta.to.global.u64 	%rd62, %rd32;
	shl.b64 	%rd63, %rd1, 2;
	add.s64 	%rd64, %rd62, %rd63;
	st.global.f32 	[%rd64], %f33;

$L__BB4_65:
	ret;

}
	// .globl	calcDistKernel
.visible .entry calcDistKernel(
	.param .u64 calcDistKernel_param_0,
	.param .u64 calcDistKernel_param_1,
	.param .u64 calcDistKernel_param_2,
	.param .u32 calcDistKernel_param_3,
	.param .u32 calcDistKernel_param_4,
	.param .u32 calcDistKernel_param_5
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<36>;
	.reg .b32 	%r<137>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd1, [calcDistKernel_param_0];
	ld.param.u64 	%rd2, [calcDistKernel_param_1];
	ld.param.u64 	%rd3, [calcDistKernel_param_2];
	ld.param.u32 	%r24, [calcDistKernel_param_3];
	ld.param.u32 	%r25, [calcDistKernel_param_4];
	ld.param.u32 	%r26, [calcDistKernel_param_5];
	mov.u32 	%r27, %ntid.x;
	mov.u32 	%r28, %ntid.y;
	mul.lo.s32 	%r29, %r27, %r28;
	shl.b32 	%r30, %r29, 1;
	mov.u32 	%r31, %tid.y;
	mov.u32 	%r32, %tid.x;
	mad.lo.s32 	%r33, %r31, %r27, %r32;
	mov.u32 	%r34, %ctaid.y;
	mad.lo.s32 	%r1, %r34, %r28, %r31;
	add.s32 	%r35, %r33, %r30;
	shl.b32 	%r36, %r35, 2;
	mov.u32 	%r37, shm;
	add.s32 	%r2, %r37, %r36;
	mov.u32 	%r38, 0;
	st.shared.u32 	[%r2], %r38;
	mov.u32 	%r39, %ctaid.z;
	mad.lo.s32 	%r40, %r39, %r27, %r32;
	shl.b32 	%r41, %r29, 2;
	sub.s32 	%r42, %r2, %r41;
	st.shared.u32 	[%r42], %r38;
	sub.s32 	%r43, %r42, %r41;
	st.shared.u32 	[%r43], %r38;
	setp.ge.s32 	%p1, %r40, %r26;
	@%p1 bra 	$L__BB5_5;

	mov.u32 	%r44, %ctaid.x;
	mad.lo.s32 	%r47, %r44, %r27, %r31;
	setp.ge.s32 	%p2, %r47, %r25;
	@%p2 bra 	$L__BB5_3;

	mad.lo.s32 	%r55, %r47, %r26, %r40;
	cvta.to.global.u64 	%rd4, %rd3;
	mul.wide.s32 	%rd5, %r55, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f7, [%rd6];
	mad.lo.s32 	%r64, %r29, -4, %r2;
	st.shared.f32 	[%r64], %f7;

$L__BB5_3:
	setp.ge.s32 	%p3, %r1, %r24;
	@%p3 bra 	$L__BB5_5;

	mad.lo.s32 	%r69, %r1, %r26, %r40;
	cvta.to.global.u64 	%rd7, %rd2;
	mul.wide.s32 	%rd8, %r69, 4;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f32 	%f8, [%rd9];
	mul.lo.s32 	%r71, %r28, %r27;
	shl.b32 	%r72, %r71, 2;
	shl.b32 	%r75, %r71, 1;
	add.s32 	%r76, %r33, %r75;
	shl.b32 	%r77, %r76, 2;
	add.s32 	%r79, %r37, %r77;
	sub.s32 	%r80, %r79, %r72;
	sub.s32 	%r81, %r80, %r72;
	st.shared.f32 	[%r81], %f8;

$L__BB5_5:
	bar.sync 	0;
	setp.eq.s32 	%p4, %r27, 0;
	@%p4 bra 	$L__BB5_12;

	add.s32 	%r85, %r27, -1;
	setp.lt.u32 	%p5, %r85, 3;
	mov.u32 	%r133, 0;
	@%p5 bra 	$L__BB5_9;

	and.b32  	%r88, %r27, 3;
	sub.s32 	%r132, %r27, %r88;
	ld.shared.f32 	%f34, [%r2];
	mul.lo.s32 	%r90, %r31, %r27;
	shl.b32 	%r91, %r90, 2;
	add.s32 	%r93, %r37, %r91;
	add.s32 	%r130, %r93, 8;
	add.s32 	%r96, %r32, %r28;
	mul.lo.s32 	%r97, %r27, %r96;
	shl.b32 	%r98, %r97, 2;
	add.s32 	%r99, %r37, %r98;
	add.s32 	%r129, %r99, 8;

$L__BB5_8:
	ld.shared.f32 	%f9, [%r129+-8];
	ld.shared.f32 	%f10, [%r130+-8];
	sub.f32 	%f11, %f10, %f9;
	sqrt.rn.f32 	%f12, %f11;
	add.f32 	%f13, %f12, %f34;
	st.shared.f32 	[%r2], %f13;
	ld.shared.f32 	%f14, [%r129+-4];
	ld.shared.f32 	%f15, [%r130+-4];
	sub.f32 	%f16, %f15, %f14;
	sqrt.rn.f32 	%f17, %f16;
	add.f32 	%f18, %f17, %f13;
	st.shared.f32 	[%r2], %f18;
	ld.shared.f32 	%f19, [%r129];
	ld.shared.f32 	%f20, [%r130];
	sub.f32 	%f21, %f20, %f19;
	sqrt.rn.f32 	%f22, %f21;
	add.f32 	%f23, %f22, %f18;
	st.shared.f32 	[%r2], %f23;
	ld.shared.f32 	%f24, [%r129+4];
	ld.shared.f32 	%f25, [%r130+4];
	sub.f32 	%f26, %f25, %f24;
	sqrt.rn.f32 	%f27, %f26;
	add.f32 	%f34, %f27, %f23;
	st.shared.f32 	[%r2], %f34;
	add.s32 	%r133, %r133, 4;
	add.s32 	%r130, %r130, 16;
	add.s32 	%r129, %r129, 16;
	add.s32 	%r132, %r132, -4;
	setp.ne.s32 	%p6, %r132, 0;
	@%p6 bra 	$L__BB5_8;

$L__BB5_9:
	and.b32  	%r136, %r27, 3;
	setp.eq.s32 	%p7, %r136, 0;
	@%p7 bra 	$L__BB5_12;

	ld.shared.f32 	%f35, [%r2];
	add.s32 	%r104, %r32, %r28;
	mad.lo.s32 	%r106, %r27, %r104, %r133;
	shl.b32 	%r107, %r106, 2;
	add.s32 	%r135, %r37, %r107;
	mad.lo.s32 	%r110, %r31, %r27, %r133;
	shl.b32 	%r111, %r110, 2;
	add.s32 	%r134, %r37, %r111;

$L__BB5_11:
	.pragma "nounroll";
	ld.shared.f32 	%f28, [%r135];
	ld.shared.f32 	%f29, [%r134];
	sub.f32 	%f30, %f29, %f28;
	sqrt.rn.f32 	%f31, %f30;
	add.f32 	%f35, %f31, %f35;
	st.shared.f32 	[%r2], %f35;
	add.s32 	%r135, %r135, 4;
	add.s32 	%r134, %r134, 4;
	add.s32 	%r136, %r136, -1;
	setp.ne.s32 	%p8, %r136, 0;
	@%p8 bra 	$L__BB5_11;

$L__BB5_12:
	bar.sync 	0;
	setp.ge.s32 	%p9, %r1, %r24;
	mov.u32 	%r117, %ctaid.x;
	mad.lo.s32 	%r119, %r117, %r27, %r32;
	setp.ge.s32 	%p10, %r119, %r25;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB5_14;

	mad.lo.s32 	%r128, %r1, %r25, %r119;
	cvta.to.global.u64 	%rd10, %rd1;
	mul.wide.s32 	%rd11, %r128, 4;
	add.s64 	%rd12, %rd10, %rd11;
	ld.shared.f32 	%f32, [%r2];
	atom.global.add.f32 	%f33, [%rd12], %f32;

$L__BB5_14:
	ret;

}
	// .globl	argmin
.visible .entry argmin(
	.param .u64 argmin_param_0,
	.param .u64 argmin_param_1,
	.param .u32 argmin_param_2,
	.param .u32 argmin_param_3
)
{
	.reg .pred 	%p<12>;
	.reg .f32 	%f<20>;
	.reg .b32 	%r<54>;
	.reg .b64 	%rd<18>;


	ld.param.u64 	%rd9, [argmin_param_0];
	ld.param.u64 	%rd8, [argmin_param_1];
	ld.param.u32 	%r22, [argmin_param_2];
	ld.param.u32 	%r21, [argmin_param_3];
	cvta.to.global.u64 	%rd1, %rd9;
	mov.u32 	%r23, %nctaid.x;
	mov.u32 	%r24, %ctaid.y;
	mov.u32 	%r25, %ctaid.x;
	mad.lo.s32 	%r26, %r24, %r23, %r25;
	mov.u32 	%r27, %ntid.x;
	mov.u32 	%r28, %tid.x;
	mad.lo.s32 	%r1, %r26, %r27, %r28;
	setp.ge.s32 	%p1, %r1, %r22;
	@%p1 bra 	$L__BB6_9;

	setp.lt.s32 	%p2, %r21, 1;
	mov.u32 	%r53, 0;
	@%p2 bra 	$L__BB6_8;

	add.s32 	%r33, %r21, -1;
	and.b32  	%r52, %r21, 3;
	setp.lt.u32 	%p3, %r33, 3;
	mov.f32 	%f18, 0f7F7FFFFF;
	mov.u32 	%r48, 0;
	mov.u32 	%r53, %r48;
	@%p3 bra 	$L__BB6_5;

	sub.s32 	%r46, %r21, %r52;
	mul.lo.s32 	%r36, %r21, %r1;
	mul.wide.s32 	%rd10, %r36, 4;
	add.s64 	%rd11, %rd1, %rd10;
	add.s64 	%rd16, %rd11, 8;

$L__BB6_4:
	ld.global.f32 	%f8, [%rd16+-8];
	setp.gt.f32 	%p4, %f18, %f8;
	selp.f32 	%f9, %f8, %f18, %p4;
	selp.b32 	%r37, %r48, %r53, %p4;
	ld.global.f32 	%f10, [%rd16+-4];
	setp.gt.f32 	%p5, %f9, %f10;
	selp.f32 	%f11, %f10, %f9, %p5;
	add.s32 	%r38, %r48, 1;
	selp.b32 	%r39, %r38, %r37, %p5;
	ld.global.f32 	%f12, [%rd16];
	setp.gt.f32 	%p6, %f11, %f12;
	selp.f32 	%f13, %f12, %f11, %p6;
	add.s32 	%r40, %r48, 2;
	selp.b32 	%r41, %r40, %r39, %p6;
	ld.global.f32 	%f14, [%rd16+4];
	setp.gt.f32 	%p7, %f13, %f14;
	selp.f32 	%f18, %f14, %f13, %p7;
	add.s32 	%r42, %r48, 3;
	selp.b32 	%r53, %r42, %r41, %p7;
	add.s32 	%r48, %r48, 4;
	add.s64 	%rd16, %rd16, 16;
	add.s32 	%r46, %r46, -4;
	setp.ne.s32 	%p8, %r46, 0;
	@%p8 bra 	$L__BB6_4;

$L__BB6_5:
	setp.eq.s32 	%p9, %r52, 0;
	@%p9 bra 	$L__BB6_8;

	mad.lo.s32 	%r43, %r21, %r1, %r48;
	mul.wide.s32 	%rd12, %r43, 4;
	add.s64 	%rd17, %rd1, %rd12;

$L__BB6_7:
	.pragma "nounroll";
	ld.global.f32 	%f15, [%rd17];
	setp.gt.f32 	%p10, %f18, %f15;
	selp.f32 	%f18, %f15, %f18, %p10;
	selp.b32 	%r53, %r48, %r53, %p10;
	add.s32 	%r48, %r48, 1;
	add.s64 	%rd17, %rd17, 4;
	add.s32 	%r52, %r52, -1;
	setp.ne.s32 	%p11, %r52, 0;
	@%p11 bra 	$L__BB6_7;

$L__BB6_8:
	cvta.to.global.u64 	%rd13, %rd8;
	mul.wide.s32 	%rd14, %r1, 4;
	add.s64 	%rd15, %rd13, %rd14;
	cvt.rn.f32.s32 	%f16, %r53;
	st.global.f32 	[%rd15], %f16;

$L__BB6_9:
	ret;

}
	// .globl	mean_kernel
.visible .entry mean_kernel(
	.param .u64 mean_kernel_param_0,
	.param .u64 mean_kernel_param_1,
	.param .u32 mean_kernel_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<5>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [mean_kernel_param_0];
	ld.param.u64 	%rd2, [mean_kernel_param_1];
	ld.param.u32 	%r2, [mean_kernel_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB7_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	cvt.rzi.s32.f32 	%r9, %f1;
	add.s32 	%r10, %r2, 1;
	setp.lt.u32 	%p2, %r10, 3;
	selp.b32 	%r11, %r2, 0, %p2;
	cvt.rn.f32.s32 	%f2, %r11;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r9, 4;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f32 	%f3, [%rd8];
	add.f32 	%f4, %f3, %f2;
	st.global.f32 	[%rd8], %f4;

$L__BB7_2:
	ret;

}
	// .globl	mse_loss_kernel
.visible .entry mse_loss_kernel(
	.param .u64 mse_loss_kernel_param_0,
	.param .u64 mse_loss_kernel_param_1,
	.param .u64 mse_loss_kernel_param_2,
	.param .f32 mse_loss_kernel_param_3,
	.param .u32 mse_loss_kernel_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [mse_loss_kernel_param_0];
	ld.param.u64 	%rd3, [mse_loss_kernel_param_1];
	ld.param.u64 	%rd4, [mse_loss_kernel_param_2];
	ld.param.f32 	%f1, [mse_loss_kernel_param_3];
	ld.param.u32 	%r2, [mse_loss_kernel_param_4];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ne.s32 	%p1, %r1, 0;
	@%p1 bra 	$L__BB8_2;

	mov.u32 	%r6, 0;
	st.global.u32 	[%rd1], %r6;

$L__BB8_2:
	setp.ge.s32 	%p2, %r1, %r2;
	@%p2 bra 	$L__BB8_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f2, [%rd9];
	ld.global.f32 	%f3, [%rd7];
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, %f4;
	cvt.rn.f32.s32 	%f6, %r2;
	div.rn.f32 	%f7, %f5, %f6;
	fma.rn.f32 	%f8, %f7, %f1, %f7;
	atom.global.add.f32 	%f9, [%rd1], %f8;

$L__BB8_4:
	ret;

}
	// .globl	mse_loss_kernel_only_c
.visible .entry mse_loss_kernel_only_c(
	.param .u64 mse_loss_kernel_only_c_param_0,
	.param .u64 mse_loss_kernel_only_c_param_1,
	.param .u64 mse_loss_kernel_only_c_param_2,
	.param .f32 mse_loss_kernel_only_c_param_3,
	.param .u32 mse_loss_kernel_only_c_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [mse_loss_kernel_only_c_param_0];
	ld.param.u64 	%rd3, [mse_loss_kernel_only_c_param_1];
	ld.param.u64 	%rd4, [mse_loss_kernel_only_c_param_2];
	ld.param.f32 	%f1, [mse_loss_kernel_only_c_param_3];
	ld.param.u32 	%r2, [mse_loss_kernel_only_c_param_4];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ne.s32 	%p1, %r1, 0;
	@%p1 bra 	$L__BB9_2;

	mov.u32 	%r6, 0;
	st.global.u32 	[%rd1], %r6;

$L__BB9_2:
	setp.ge.s32 	%p2, %r1, %r2;
	@%p2 bra 	$L__BB9_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f2, [%rd9];
	ld.global.f32 	%f3, [%rd7];
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, %f4;
	cvt.rn.f32.s32 	%f6, %r2;
	div.rn.f32 	%f7, %f5, %f6;
	mul.f32 	%f8, %f7, %f1;
	atom.global.add.f32 	%f9, [%rd1], %f8;

$L__BB9_4:
	ret;

}
	// .globl	mse_loss_back
.visible .entry mse_loss_back(
	.param .u64 mse_loss_back_param_0,
	.param .u64 mse_loss_back_param_1,
	.param .f32 mse_loss_back_param_2,
	.param .u64 mse_loss_back_param_3,
	.param .u64 mse_loss_back_param_4,
	.param .u32 mse_loss_back_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<10>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [mse_loss_back_param_0];
	ld.param.u64 	%rd2, [mse_loss_back_param_1];
	ld.param.f32 	%f1, [mse_loss_back_param_2];
	ld.param.u64 	%rd3, [mse_loss_back_param_3];
	ld.param.u64 	%rd4, [mse_loss_back_param_4];
	ld.param.u32 	%r2, [mse_loss_back_param_5];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB10_2;

	cvta.to.global.u64 	%rd5, %rd1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f2, [%rd9];
	ld.global.f32 	%f3, [%rd7];
	sub.f32 	%f4, %f3, %f2;
	add.f32 	%f5, %f4, %f4;
	cvt.rn.f32.s32 	%f6, %r2;
	div.rn.f32 	%f7, %f5, %f6;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd6;
	st.global.f32 	[%rd11], %f7;
	mul.f32 	%f8, %f7, %f1;
	neg.f32 	%f9, %f8;
	cvta.to.global.u64 	%rd12, %rd4;
	add.s64 	%rd13, %rd12, %rd6;
	st.global.f32 	[%rd13], %f9;

$L__BB10_2:
	ret;

}
	// .globl	mse_sum_loss_kernel
.visible .entry mse_sum_loss_kernel(
	.param .u64 mse_sum_loss_kernel_param_0,
	.param .u64 mse_sum_loss_kernel_param_1,
	.param .u64 mse_sum_loss_kernel_param_2,
	.param .f32 mse_sum_loss_kernel_param_3,
	.param .u32 mse_sum_loss_kernel_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [mse_sum_loss_kernel_param_0];
	ld.param.u64 	%rd3, [mse_sum_loss_kernel_param_1];
	ld.param.u64 	%rd4, [mse_sum_loss_kernel_param_2];
	ld.param.f32 	%f1, [mse_sum_loss_kernel_param_3];
	ld.param.u32 	%r2, [mse_sum_loss_kernel_param_4];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ne.s32 	%p1, %r1, 0;
	@%p1 bra 	$L__BB11_2;

	mov.u32 	%r6, 0;
	st.global.u32 	[%rd1], %r6;

$L__BB11_2:
	setp.ge.s32 	%p2, %r1, %r2;
	@%p2 bra 	$L__BB11_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f2, [%rd9];
	ld.global.f32 	%f3, [%rd7];
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, %f4;
	fma.rn.f32 	%f6, %f5, %f1, %f5;
	atom.global.add.f32 	%f7, [%rd1], %f6;

$L__BB11_4:
	ret;

}
	// .globl	mse_sum_loss_back
.visible .entry mse_sum_loss_back(
	.param .u64 mse_sum_loss_back_param_0,
	.param .u64 mse_sum_loss_back_param_1,
	.param .f32 mse_sum_loss_back_param_2,
	.param .u64 mse_sum_loss_back_param_3,
	.param .u64 mse_sum_loss_back_param_4,
	.param .u32 mse_sum_loss_back_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [mse_sum_loss_back_param_0];
	ld.param.u64 	%rd2, [mse_sum_loss_back_param_1];
	ld.param.f32 	%f1, [mse_sum_loss_back_param_2];
	ld.param.u64 	%rd3, [mse_sum_loss_back_param_3];
	ld.param.u64 	%rd4, [mse_sum_loss_back_param_4];
	ld.param.u32 	%r2, [mse_sum_loss_back_param_5];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB12_2;

	cvta.to.global.u64 	%rd5, %rd1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f2, [%rd9];
	ld.global.f32 	%f3, [%rd7];
	sub.f32 	%f4, %f3, %f2;
	add.f32 	%f5, %f4, %f4;
	cvta.to.global.u64 	%rd10, %rd3;
	add.s64 	%rd11, %rd10, %rd6;
	st.global.f32 	[%rd11], %f5;
	mul.f32 	%f6, %f5, %f1;
	neg.f32 	%f7, %f6;
	cvta.to.global.u64 	%rd12, %rd4;
	add.s64 	%rd13, %rd12, %rd6;
	st.global.f32 	[%rd13], %f7;

$L__BB12_2:
	ret;

}
	// .globl	mse_sum_only_c_loss_kernel
.visible .entry mse_sum_only_c_loss_kernel(
	.param .u64 mse_sum_only_c_loss_kernel_param_0,
	.param .u64 mse_sum_only_c_loss_kernel_param_1,
	.param .u64 mse_sum_only_c_loss_kernel_param_2,
	.param .f32 mse_sum_only_c_loss_kernel_param_3,
	.param .u32 mse_sum_only_c_loss_kernel_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd2, [mse_sum_only_c_loss_kernel_param_0];
	ld.param.u64 	%rd3, [mse_sum_only_c_loss_kernel_param_1];
	ld.param.u64 	%rd4, [mse_sum_only_c_loss_kernel_param_2];
	ld.param.f32 	%f1, [mse_sum_only_c_loss_kernel_param_3];
	ld.param.u32 	%r2, [mse_sum_only_c_loss_kernel_param_4];
	cvta.to.global.u64 	%rd1, %rd4;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ne.s32 	%p1, %r1, 0;
	@%p1 bra 	$L__BB13_2;

	mov.u32 	%r6, 0;
	st.global.u32 	[%rd1], %r6;

$L__BB13_2:
	setp.ge.s32 	%p2, %r1, %r2;
	@%p2 bra 	$L__BB13_4;

	cvta.to.global.u64 	%rd5, %rd2;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd3;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f2, [%rd9];
	ld.global.f32 	%f3, [%rd7];
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, %f4;
	mul.f32 	%f6, %f5, %f1;
	atom.global.add.f32 	%f7, [%rd1], %f6;

$L__BB13_4:
	ret;

}
	// .globl	mse_sum_only_c_loss_back
.visible .entry mse_sum_only_c_loss_back(
	.param .u64 mse_sum_only_c_loss_back_param_0,
	.param .u64 mse_sum_only_c_loss_back_param_1,
	.param .f32 mse_sum_only_c_loss_back_param_2,
	.param .u64 mse_sum_only_c_loss_back_param_3,
	.param .u32 mse_sum_only_c_loss_back_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [mse_sum_only_c_loss_back_param_0];
	ld.param.u64 	%rd2, [mse_sum_only_c_loss_back_param_1];
	ld.param.f32 	%f1, [mse_sum_only_c_loss_back_param_2];
	ld.param.u64 	%rd3, [mse_sum_only_c_loss_back_param_3];
	ld.param.u32 	%r2, [mse_sum_only_c_loss_back_param_4];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB14_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f2, [%rd8];
	ld.global.f32 	%f3, [%rd6];
	sub.f32 	%f4, %f3, %f2;
	mul.f32 	%f5, %f4, 0fC0000000;
	mul.f32 	%f6, %f5, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f6;

$L__BB14_2:
	ret;

}
	// .globl	ema_count
.visible .entry ema_count(
	.param .u32 ema_count_param_0,
	.param .u64 ema_count_param_1,
	.param .u64 ema_count_param_2
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<16>;
	.reg .b32 	%r<31>;
	.reg .b64 	%rd<23>;


	ld.param.u32 	%r10, [ema_count_param_0];
	ld.param.u64 	%rd8, [ema_count_param_1];
	ld.param.u64 	%rd9, [ema_count_param_2];
	cvta.to.global.u64 	%rd1, %rd9;
	cvta.to.global.u64 	%rd2, %rd8;
	mov.u32 	%r11, %nctaid.x;
	mov.u32 	%r12, %ctaid.y;
	mov.u32 	%r13, %ctaid.x;
	mad.lo.s32 	%r14, %r12, %r11, %r13;
	mov.u32 	%r15, %ntid.x;
	mul.lo.s32 	%r16, %r14, %r15;
	mov.u32 	%r17, %tid.x;
	neg.s32 	%r18, %r17;
	setp.ne.s32 	%p1, %r16, %r18;
	setp.lt.s32 	%p2, %r10, 1;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB15_7;

	add.s32 	%r20, %r10, -1;
	and.b32  	%r30, %r10, 3;
	setp.lt.u32 	%p4, %r20, 3;
	mov.u32 	%r29, 0;
	@%p4 bra 	$L__BB15_4;

	sub.s32 	%r28, %r10, %r30;
	mov.u64 	%rd21, %rd2;

$L__BB15_3:
	ld.global.f32 	%f1, [%rd21];
	cvt.rzi.s32.f32 	%r22, %f1;
	mul.wide.s32 	%rd10, %r22, 4;
	add.s64 	%rd11, %rd1, %rd10;
	ld.global.f32 	%f2, [%rd11];
	add.f32 	%f3, %f2, 0f3F800000;
	st.global.f32 	[%rd11], %f3;
	ld.global.f32 	%f4, [%rd21+4];
	cvt.rzi.s32.f32 	%r23, %f4;
	mul.wide.s32 	%rd12, %r23, 4;
	add.s64 	%rd13, %rd1, %rd12;
	ld.global.f32 	%f5, [%rd13];
	add.f32 	%f6, %f5, 0f3F800000;
	st.global.f32 	[%rd13], %f6;
	ld.global.f32 	%f7, [%rd21+8];
	cvt.rzi.s32.f32 	%r24, %f7;
	mul.wide.s32 	%rd14, %r24, 4;
	add.s64 	%rd15, %rd1, %rd14;
	ld.global.f32 	%f8, [%rd15];
	add.f32 	%f9, %f8, 0f3F800000;
	st.global.f32 	[%rd15], %f9;
	ld.global.f32 	%f10, [%rd21+12];
	cvt.rzi.s32.f32 	%r25, %f10;
	mul.wide.s32 	%rd16, %r25, 4;
	add.s64 	%rd17, %rd1, %rd16;
	ld.global.f32 	%f11, [%rd17];
	add.f32 	%f12, %f11, 0f3F800000;
	st.global.f32 	[%rd17], %f12;
	add.s32 	%r29, %r29, 4;
	add.s64 	%rd21, %rd21, 16;
	add.s32 	%r28, %r28, -4;
	setp.ne.s32 	%p5, %r28, 0;
	@%p5 bra 	$L__BB15_3;

$L__BB15_4:
	setp.eq.s32 	%p6, %r30, 0;
	@%p6 bra 	$L__BB15_7;

	mul.wide.s32 	%rd18, %r29, 4;
	add.s64 	%rd22, %rd2, %rd18;

$L__BB15_6:
	.pragma "nounroll";
	ld.global.f32 	%f13, [%rd22];
	cvt.rzi.s32.f32 	%r26, %f13;
	mul.wide.s32 	%rd19, %r26, 4;
	add.s64 	%rd20, %rd1, %rd19;
	ld.global.f32 	%f14, [%rd20];
	add.f32 	%f15, %f14, 0f3F800000;
	st.global.f32 	[%rd20], %f15;
	add.s64 	%rd22, %rd22, 4;
	add.s32 	%r30, %r30, -1;
	setp.ne.s32 	%p7, %r30, 0;
	@%p7 bra 	$L__BB15_6;

$L__BB15_7:
	ret;

}
	// .globl	move_ema_count
.visible .entry move_ema_count(
	.param .u64 move_ema_count_param_0,
	.param .u64 move_ema_count_param_1,
	.param .f32 move_ema_count_param_2,
	.param .u32 move_ema_count_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [move_ema_count_param_0];
	ld.param.u64 	%rd2, [move_ema_count_param_1];
	ld.param.f32 	%f1, [move_ema_count_param_2];
	ld.param.u32 	%r2, [move_ema_count_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %nctaid.x;
	mov.u32 	%r5, %ctaid.y;
	mad.lo.s32 	%r6, %r5, %r4, %r3;
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	setp.ge.s32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB16_2;

	cvta.to.global.u64 	%rd3, %rd2;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	cvta.to.global.u64 	%rd6, %rd1;
	add.s64 	%rd7, %rd6, %rd4;
	ld.global.f32 	%f3, [%rd7];
	mov.f32 	%f4, 0f3F800000;
	sub.f32 	%f5, %f4, %f1;
	mul.f32 	%f6, %f5, %f3;
	fma.rn.f32 	%f7, %f2, %f1, %f6;
	st.global.f32 	[%rd5], %f7;

$L__BB16_2:
	ret;

}
	// .globl	move_ema_count2
.visible .entry move_ema_count2(
	.param .u64 move_ema_count2_param_0,
	.param .u64 move_ema_count2_param_1,
	.param .f32 move_ema_count2_param_2,
	.param .u32 move_ema_count2_param_3,
	.param .u32 move_ema_count2_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<9>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [move_ema_count2_param_0];
	ld.param.u64 	%rd2, [move_ema_count2_param_1];
	ld.param.f32 	%f1, [move_ema_count2_param_2];
	ld.param.u32 	%r2, [move_ema_count2_param_3];
	ld.param.u32 	%r3, [move_ema_count2_param_4];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %nctaid.x;
	mov.u32 	%r6, %ctaid.y;
	mad.lo.s32 	%r7, %r6, %r5, %r4;
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.s32 	%p1, %r1, %r3;
	@%p1 bra 	$L__BB17_2;

	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f2, [%rd5];
	add.f32 	%f3, %f2, %f1;
	cvt.rn.f32.s32 	%f4, %r2;
	cvta.to.global.u64 	%rd6, %rd2;
	ld.global.f32 	%f5, [%rd6];
	fma.rn.f32 	%f6, %f4, %f1, %f5;
	div.rn.f32 	%f7, %f3, %f6;
	mul.f32 	%f8, %f5, %f7;
	st.global.f32 	[%rd5], %f8;

$L__BB17_2:
	ret;

}
	// .globl	update_emb_weight
.visible .entry update_emb_weight(
	.param .u64 update_emb_weight_param_0,
	.param .u64 update_emb_weight_param_1,
	.param .u64 update_emb_weight_param_2,
	.param .u64 update_emb_weight_param_3,
	.param .f32 update_emb_weight_param_4,
	.param .u32 update_emb_weight_param_5,
	.param .u32 update_emb_weight_param_6
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<34>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<38>;


	ld.param.u64 	%rd24, [update_emb_weight_param_0];
	ld.param.u64 	%rd25, [update_emb_weight_param_1];
	ld.param.u64 	%rd26, [update_emb_weight_param_2];
	ld.param.u64 	%rd23, [update_emb_weight_param_3];
	ld.param.f32 	%f2, [update_emb_weight_param_4];
	ld.param.u32 	%r12, [update_emb_weight_param_5];
	ld.param.u32 	%r11, [update_emb_weight_param_6];
	cvta.to.global.u64 	%rd1, %rd25;
	cvta.to.global.u64 	%rd2, %rd24;
	cvta.to.global.u64 	%rd3, %rd26;
	mov.u32 	%r13, %nctaid.x;
	mov.u32 	%r14, %ctaid.y;
	mov.u32 	%r15, %ctaid.x;
	mad.lo.s32 	%r16, %r14, %r13, %r15;
	mov.u32 	%r17, %ntid.x;
	mov.u32 	%r18, %tid.x;
	mad.lo.s32 	%r1, %r16, %r17, %r18;
	setp.ge.s32 	%p1, %r1, %r12;
	setp.lt.s32 	%p2, %r11, 1;
	or.pred  	%p3, %p1, %p2;
	@%p3 bra 	$L__BB18_7;

	cvta.to.global.u64 	%rd27, %rd23;
	mov.f32 	%f3, 0f3F800000;
	sub.f32 	%f1, %f3, %f2;
	mul.wide.s32 	%rd28, %r1, 4;
	add.s64 	%rd4, %rd27, %rd28;
	and.b32  	%r27, %r11, 3;
	add.s32 	%r20, %r11, -1;
	setp.lt.u32 	%p4, %r20, 3;
	mov.u32 	%r26, 0;
	@%p4 bra 	$L__BB18_4;

	sub.s32 	%r25, %r11, %r27;
	mul.lo.s32 	%r22, %r11, %r1;
	mul.wide.s32 	%rd29, %r22, 4;
	add.s64 	%rd30, %rd29, 8;
	add.s64 	%rd34, %rd2, %rd30;
	add.s64 	%rd33, %rd3, %rd30;
	add.s64 	%rd32, %rd1, %rd30;

$L__BB18_3:
	ld.global.f32 	%f4, [%rd33+-8];
	ld.global.f32 	%f5, [%rd34+-8];
	mul.f32 	%f6, %f1, %f5;
	fma.rn.f32 	%f7, %f4, %f2, %f6;
	st.global.f32 	[%rd33+-8], %f7;
	ld.global.f32 	%f8, [%rd4];
	div.rn.f32 	%f9, %f7, %f8;
	st.global.f32 	[%rd32+-8], %f9;
	ld.global.f32 	%f10, [%rd33+-4];
	ld.global.f32 	%f11, [%rd34+-4];
	mul.f32 	%f12, %f1, %f11;
	fma.rn.f32 	%f13, %f10, %f2, %f12;
	st.global.f32 	[%rd33+-4], %f13;
	ld.global.f32 	%f14, [%rd4];
	div.rn.f32 	%f15, %f13, %f14;
	st.global.f32 	[%rd32+-4], %f15;
	ld.global.f32 	%f16, [%rd33];
	ld.global.f32 	%f17, [%rd34];
	mul.f32 	%f18, %f1, %f17;
	fma.rn.f32 	%f19, %f16, %f2, %f18;
	st.global.f32 	[%rd33], %f19;
	ld.global.f32 	%f20, [%rd4];
	div.rn.f32 	%f21, %f19, %f20;
	st.global.f32 	[%rd32], %f21;
	ld.global.f32 	%f22, [%rd33+4];
	ld.global.f32 	%f23, [%rd34+4];
	mul.f32 	%f24, %f1, %f23;
	fma.rn.f32 	%f25, %f22, %f2, %f24;
	st.global.f32 	[%rd33+4], %f25;
	ld.global.f32 	%f26, [%rd4];
	div.rn.f32 	%f27, %f25, %f26;
	st.global.f32 	[%rd32+4], %f27;
	add.s32 	%r26, %r26, 4;
	add.s64 	%rd34, %rd34, 16;
	add.s64 	%rd33, %rd33, 16;
	add.s64 	%rd32, %rd32, 16;
	add.s32 	%r25, %r25, -4;
	setp.ne.s32 	%p5, %r25, 0;
	@%p5 bra 	$L__BB18_3;

$L__BB18_4:
	setp.eq.s32 	%p6, %r27, 0;
	@%p6 bra 	$L__BB18_7;

	mad.lo.s32 	%r23, %r11, %r1, %r26;
	mul.wide.s32 	%rd31, %r23, 4;
	add.s64 	%rd37, %rd1, %rd31;
	add.s64 	%rd36, %rd2, %rd31;
	add.s64 	%rd35, %rd3, %rd31;

$L__BB18_6:
	.pragma "nounroll";
	ld.global.f32 	%f28, [%rd35];
	ld.global.f32 	%f29, [%rd36];
	mul.f32 	%f30, %f1, %f29;
	fma.rn.f32 	%f31, %f28, %f2, %f30;
	st.global.f32 	[%rd35], %f31;
	ld.global.f32 	%f32, [%rd4];
	div.rn.f32 	%f33, %f31, %f32;
	st.global.f32 	[%rd37], %f33;
	add.s64 	%rd37, %rd37, 4;
	add.s64 	%rd36, %rd36, 4;
	add.s64 	%rd35, %rd35, 4;
	add.s32 	%r27, %r27, -1;
	setp.ne.s32 	%p7, %r27, 0;
	@%p7 bra 	$L__BB18_6;

$L__BB18_7:
	ret;

}
.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<53>;
	.reg .f64 	%fd<138>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	ld.param.f64 	%fd13, [__internal_accurate_pow_param_1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd12;
	}
	shr.u32 	%r51, %r50, 20;
	setp.ne.s32 	%p1, %r51, 0;
	@%p1 bra 	$L__BB19_2;

	mul.f64 	%fd14, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r50}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r49, %temp}, %fd14;
	}
	shr.u32 	%r16, %r50, 20;
	add.s32 	%r51, %r16, -54;

$L__BB19_2:
	add.s32 	%r52, %r51, -1023;
	and.b32  	%r17, %r50, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd135, {%r49, %r18};
	setp.lt.u32 	%p2, %r18, 1073127583;
	@%p2 bra 	$L__BB19_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd135;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd135;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd135, {%r19, %r21};
	add.s32 	%r52, %r51, -1022;

$L__BB19_4:
	add.f64 	%fd15, %fd135, 0d3FF0000000000000;
	mov.f64 	%fd16, 0d3FF0000000000000;
	rcp.approx.ftz.f64 	%fd17, %fd15;
	neg.f64 	%fd18, %fd15;
	fma.rn.f64 	%fd19, %fd18, %fd17, %fd16;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd17, %fd17;
	add.f64 	%fd22, %fd135, 0dBFF0000000000000;
	mul.f64 	%fd23, %fd22, %fd21;
	fma.rn.f64 	%fd24, %fd22, %fd21, %fd23;
	mul.f64 	%fd25, %fd24, %fd24;
	mov.f64 	%fd26, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd27, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd28, %fd27, %fd25, %fd26;
	mov.f64 	%fd29, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd30, %fd28, %fd25, %fd29;
	mov.f64 	%fd31, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd32, %fd30, %fd25, %fd31;
	mov.f64 	%fd33, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd34, %fd32, %fd25, %fd33;
	mov.f64 	%fd35, 0d3F6249249242B910;
	fma.rn.f64 	%fd36, %fd34, %fd25, %fd35;
	mov.f64 	%fd37, 0d3F89999999999DFB;
	fma.rn.f64 	%fd38, %fd36, %fd25, %fd37;
	sub.f64 	%fd39, %fd22, %fd24;
	add.f64 	%fd40, %fd39, %fd39;
	neg.f64 	%fd41, %fd24;
	fma.rn.f64 	%fd42, %fd41, %fd22, %fd40;
	mul.f64 	%fd43, %fd21, %fd42;
	fma.rn.f64 	%fd44, %fd25, %fd38, 0d3FB5555555555555;
	mov.f64 	%fd45, 0d3FB5555555555555;
	sub.f64 	%fd46, %fd45, %fd44;
	fma.rn.f64 	%fd47, %fd25, %fd38, %fd46;
	add.f64 	%fd48, %fd47, 0d0000000000000000;
	add.f64 	%fd49, %fd48, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd50, %fd44, %fd49;
	sub.f64 	%fd51, %fd44, %fd50;
	add.f64 	%fd52, %fd49, %fd51;
	mul.rn.f64 	%fd53, %fd24, %fd24;
	neg.f64 	%fd54, %fd53;
	fma.rn.f64 	%fd55, %fd24, %fd24, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd43;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd43;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd56, {%r22, %r24};
	fma.rn.f64 	%fd57, %fd24, %fd56, %fd55;
	mul.rn.f64 	%fd58, %fd53, %fd24;
	neg.f64 	%fd59, %fd58;
	fma.rn.f64 	%fd60, %fd53, %fd24, %fd59;
	fma.rn.f64 	%fd61, %fd53, %fd43, %fd60;
	fma.rn.f64 	%fd62, %fd57, %fd24, %fd61;
	mul.rn.f64 	%fd63, %fd50, %fd58;
	neg.f64 	%fd64, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd58, %fd64;
	fma.rn.f64 	%fd66, %fd50, %fd62, %fd65;
	fma.rn.f64 	%fd67, %fd52, %fd58, %fd66;
	add.f64 	%fd68, %fd63, %fd67;
	sub.f64 	%fd69, %fd63, %fd68;
	add.f64 	%fd70, %fd67, %fd69;
	add.f64 	%fd71, %fd24, %fd68;
	sub.f64 	%fd72, %fd24, %fd71;
	add.f64 	%fd73, %fd68, %fd72;
	add.f64 	%fd74, %fd70, %fd73;
	add.f64 	%fd75, %fd43, %fd74;
	add.f64 	%fd76, %fd71, %fd75;
	sub.f64 	%fd77, %fd71, %fd76;
	add.f64 	%fd78, %fd75, %fd77;
	xor.b32  	%r25, %r52, -2147483648;
	mov.u32 	%r26, -2147483648;
	mov.u32 	%r27, 1127219200;
	mov.b64 	%fd79, {%r25, %r27};
	mov.b64 	%fd80, {%r26, %r27};
	sub.f64 	%fd81, %fd79, %fd80;
	mov.f64 	%fd82, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd83, %fd81, %fd82, %fd76;
	neg.f64 	%fd84, %fd81;
	fma.rn.f64 	%fd85, %fd84, %fd82, %fd83;
	sub.f64 	%fd86, %fd85, %fd76;
	sub.f64 	%fd87, %fd78, %fd86;
	mov.f64 	%fd88, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd89, %fd81, %fd88, %fd87;
	add.f64 	%fd90, %fd83, %fd89;
	sub.f64 	%fd91, %fd83, %fd90;
	add.f64 	%fd92, %fd89, %fd91;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd13;
	}
	shl.b32 	%r29, %r28, 1;
	setp.gt.u32 	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32 	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd13;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd90, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd92, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd16;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd16;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd136, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	%f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32 	%p4, %f1, 0f4086232B;
	@%p4 bra 	$L__BB19_7;

	setp.lt.f64 	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64 	%fd136, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32 	%p6, %f1, 0f40874800;
	@%p6 bra 	$L__BB19_7;

	mov.f64 	%fd134, 0d4338000000000000;
	mov.f64 	%fd133, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd132, %fd4, %fd133, %fd134;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r48, %temp}, %fd132;
	}
	shr.u32 	%r36, %r48, 31;
	add.s32 	%r37, %r48, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r15, %r39;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r48, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd136, %fd130, %fd131;

$L__BB19_7:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r45}, %fd136;
	}
	and.b32  	%r46, %r45, 2147483647;
	setp.eq.s32 	%p7, %r46, 2146435072;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r47, %temp}, %fd136;
	}
	setp.eq.s32 	%p8, %r47, 0;
	and.pred  	%p9, %p8, %p7;
	@%p9 bra 	$L__BB19_9;

	fma.rn.f64 	%fd136, %fd136, %fd5, %fd136;

$L__BB19_9:
	st.param.f64 	[func_retval0+0], %fd136;
	ret;

}

